def congruent :
  cts.Term
    cts.diamond
    (cts.cast
       cts.triangle
       cts.sinf
       (cts.univ cts.box cts.triangle cts.I)
       (cts.univ cts.diamond cts.sinf cts.I)
       cts.I
       (cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          nat.nat
          (x =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                nat.nat
                (x1 => cts.univ cts.star cts.box cts.I)))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  logic.eq nat.nat (div_mod.mod n p) (div_mod.mod m p).

def congruent_n_n :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x => cts.prod cts.box cts.star cts.star cts.I nat.nat (x0 => congruent x x x0)))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  logic.refl nat.nat (div_mod.mod n p).

def transitive_congruent :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        relations.transitive
          nat.nat
          (n:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           m:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           congruent n m x)))
  :=
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  x:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  y:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  z:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  auto:(cts.Term cts.star (congruent x y p)) =>
  auto':(cts.Term cts.star (congruent y z p)) =>
  logic.rewrite_l
    nat.nat
    (div_mod.mod x p)
    (__:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
     logic.eq nat.nat (div_mod.mod x p) __)
    (logic.refl nat.nat (div_mod.mod x p))
    (div_mod.mod z p)
    (logic.rewrite_r
       nat.nat
       (div_mod.mod y p)
       (__:(cts.Term
              cts.diamond
              (cts.cast
                 cts.triangle
                 cts.sinf
                 (cts.univ cts.box cts.triangle cts.I)
                 (cts.univ cts.diamond cts.sinf cts.I)
                 cts.I
                 nat.nat)) =>
        logic.eq nat.nat __ (div_mod.mod z p))
       auto'
       (div_mod.mod x p)
       auto).

def mod_mod :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (nat.lt nat.O x0)
             (x1 => logic.eq nat.nat (div_mod.mod x x0) (div_mod.mod (div_mod.mod x x0) x0)))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  logic.eq_ind_r
    nat.nat
    (nat.plus (nat.times (div_mod.div (div_mod.mod n p) p) p) (div_mod.mod (div_mod.mod n p) p))
    (x:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     logic.eq nat.nat x (div_mod.mod (div_mod.mod n p) p))
    (logic.eq_ind_r
       nat.nat
       nat.O
       (x:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                nat.nat)) =>
        logic.eq
          nat.nat
          (nat.plus (nat.times x p) (div_mod.mod (div_mod.mod n p) p))
          (div_mod.mod (div_mod.mod n p) p))
       (logic.rewrite_r
          nat.nat
          (nat.times p nat.O)
          (__:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    nat.nat)) =>
           logic.eq
             nat.nat
             (nat.plus __ (div_mod.mod (div_mod.mod n p) p))
             (div_mod.mod (div_mod.mod n p) p))
          (logic.rewrite_l
             nat.nat
             nat.O
             (__:(cts.Term
                    cts.diamond
                    (cts.cast
                       cts.triangle
                       cts.sinf
                       (cts.univ cts.box cts.triangle cts.I)
                       (cts.univ cts.diamond cts.sinf cts.I)
                       cts.I
                       nat.nat)) =>
              logic.eq
                nat.nat
                (nat.plus __ (div_mod.mod (div_mod.mod n p) p))
                (div_mod.mod (div_mod.mod n p) p))
             (logic.rewrite_l
                nat.nat
                (div_mod.mod (div_mod.mod n p) p)
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 logic.eq nat.nat __ (div_mod.mod (div_mod.mod n p) p))
                (logic.refl nat.nat (div_mod.mod (div_mod.mod n p) p))
                (nat.plus nat.O (div_mod.mod (div_mod.mod n p) p))
                (nat.plus_O_n (div_mod.mod (div_mod.mod n p) p)))
             (nat.times p nat.O)
             (nat.times_n_O p))
          (nat.times nat.O p)
          (nat.commutative_times nat.O p))
       (div_mod.div (div_mod.mod n p) p)
       (div_mod.eq_div_O (div_mod.mod n p) p (div_mod.lt_mod_m_m n p posp)))
    (div_mod.mod n p)
    (div_mod.div_mod (div_mod.mod n p) p).

def congruent_n_mod_n :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (nat.lt nat.O x0)
             (x1 => congruent x (div_mod.mod x x0) x0))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) => mod_mod n p posp.

def eq_times_plus_to_congruent :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt nat.O x1)
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq nat.nat x (nat.plus (nat.times x2 x1) x0))
                      (x4 => congruent x x0 x1)))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  r:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  Hn:(cts.Term cts.star (logic.eq nat.nat n (nat.plus (nat.times r p) m))) =>
  div_mod.div_mod_spec_to_eq2
    n
    p
    (div_mod.div n p)
    (div_mod.mod n p)
    (nat.plus r (div_mod.div m p))
    (div_mod.mod m p)
    (div_mod.div_mod_spec_div_mod n p posp)
    (div_mod.div_mod_spec_intro
       n
       p
       (nat.plus r (div_mod.div m p))
       (div_mod.mod m p)
       (div_mod.lt_mod_m_m m p posp)
       (logic.eq_ind_r
          nat.nat
          (nat.times p (nat.plus r (div_mod.div m p)))
          (x:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           logic.eq nat.nat n (nat.plus x (div_mod.mod m p)))
          (logic.eq_ind_r
             nat.nat
             (nat.plus (nat.times p r) (nat.times p (div_mod.div m p)))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq nat.nat n (nat.plus x (div_mod.mod m p)))
             (logic.eq_ind_r
                nat.nat
                (nat.times r p)
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 logic.eq
                   nat.nat
                   n
                   (nat.plus (nat.plus x (nat.times p (div_mod.div m p))) (div_mod.mod m p)))
                (logic.eq_ind_r
                   nat.nat
                   (nat.times (div_mod.div m p) p)
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq nat.nat n (nat.plus (nat.plus (nat.times r p) x) (div_mod.mod m p)))
                   (logic.eq_ind_r
                      nat.nat
                      (nat.plus
                         (nat.times r p)
                         (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                      (x:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       logic.eq nat.nat n x)
                      (logic.rewrite_r
                         nat.nat
                         (nat.times p r)
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          logic.eq
                            nat.nat
                            n
                            (nat.plus
                               __
                               (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))))
                         (logic.rewrite_r
                            nat.nat
                            (nat.times p (div_mod.div m p))
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             logic.eq
                               nat.nat
                               n
                               (nat.plus (nat.times p r) (nat.plus __ (div_mod.mod m p))))
                            (logic.rewrite_r
                               nat.nat
                               (nat.plus (div_mod.mod m p) (nat.times p (div_mod.div m p)))
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                logic.eq nat.nat n (nat.plus (nat.times p r) __))
                               (logic.rewrite_l
                                  nat.nat
                                  m
                                  (__:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   logic.eq nat.nat n (nat.plus (nat.times p r) __))
                                  (logic.rewrite_r
                                     nat.nat
                                     (nat.plus m (nat.times p r))
                                     (__:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      logic.eq nat.nat n __)
                                     (logic.rewrite_l
                                        nat.nat
                                        n
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         logic.eq nat.nat n __)
                                        (logic.refl nat.nat n)
                                        (nat.plus m (nat.times p r))
                                        (logic.rewrite_l
                                           nat.nat
                                           (nat.plus (nat.times p r) m)
                                           (__:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            logic.eq nat.nat n __)
                                           (logic.rewrite_l
                                              nat.nat
                                              (nat.times r p)
                                              (__:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               logic.eq nat.nat n (nat.plus __ m))
                                              Hn
                                              (nat.times p r)
                                              (nat.commutative_times r p))
                                           (nat.plus m (nat.times p r))
                                           (nat.commutative_plus (nat.times p r) m)))
                                     (nat.plus (nat.times p r) m)
                                     (nat.commutative_plus (nat.times p r) m))
                                  (nat.plus
                                     (div_mod.mod m p)
                                     (nat.times p (div_mod.div m p)))
                                  (logic.rewrite_l
                                     nat.nat
                                     (nat.plus
                                        (nat.times p (div_mod.div m p))
                                        (div_mod.mod m p))
                                     (__:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      logic.eq nat.nat m __)
                                     (logic.rewrite_l
                                        nat.nat
                                        (nat.times (div_mod.div m p) p)
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         logic.eq
                                           nat.nat
                                           m
                                           (nat.plus __ (div_mod.mod m p)))
                                        (div_mod.div_mod m p)
                                        (nat.times p (div_mod.div m p))
                                        (nat.commutative_times (div_mod.div m p) p))
                                     (nat.plus
                                        (div_mod.mod m p)
                                        (nat.times p (div_mod.div m p)))
                                     (nat.commutative_plus
                                        (nat.times p (div_mod.div m p))
                                        (div_mod.mod m p))))
                               (nat.plus (nat.times p (div_mod.div m p)) (div_mod.mod m p))
                               (nat.commutative_plus
                                  (nat.times p (div_mod.div m p))
                                  (div_mod.mod m p)))
                            (nat.times (div_mod.div m p) p)
                            (nat.commutative_times (div_mod.div m p) p))
                         (nat.times r p)
                         (nat.commutative_times r p))
                      (nat.plus
                         (nat.plus (nat.times r p) (nat.times (div_mod.div m p) p))
                         (div_mod.mod m p))
                      (nat.associative_plus
                         (nat.times r p)
                         (nat.times (div_mod.div m p) p)
                         (div_mod.mod m p)))
                   (nat.times p (div_mod.div m p))
                   (nat.commutative_times p (div_mod.div m p)))
                (nat.times p r)
                (nat.commutative_times p r))
             (nat.times p (nat.plus r (div_mod.div m p)))
             (nat.distributive_times_plus p r (div_mod.div m p)))
          (nat.times (nat.plus r (div_mod.div m p)) p)
          (nat.commutative_times (nat.plus r (div_mod.div m p)) p))).

def divides_to_congruent :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt nat.O x1)
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.le x0 x)
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (primes.divides x1 (nat.minus x x0))
                      (x4 => congruent x x0 x1)))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  lemn:(cts.Term cts.star (nat.le m n)) =>
  _clearme:(cts.Term cts.star (primes.divides p (nat.minus n m))) =>
  primes.match_divides_prop
    p
    (nat.minus n m)
    (congruent n m p)
    (q:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     Hdiv:(cts.Term cts.star (logic.eq nat.nat (nat.minus n m) (nat.times p q))) =>
     eq_times_plus_to_congruent
       n
       m
       p
       q
       posp
       (logic.eq_ind_r
          nat.nat
          (nat.plus m (nat.times q p))
          (x:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           logic.eq nat.nat n x)
          (nat.minus_to_plus
             n
             m
             (nat.times q p)
             lemn
             (logic.rewrite_r
                nat.nat
                (nat.times p q)
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 logic.eq nat.nat __ (nat.times q p))
                (logic.rewrite_r
                   nat.nat
                   (nat.times p q)
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    logic.eq nat.nat (nat.times p q) __)
                   (logic.refl nat.nat (nat.times p q))
                   (nat.times q p)
                   (nat.commutative_times q p))
                (nat.minus n m)
                Hdiv))
          (nat.plus (nat.times q p) m)
          (nat.commutative_plus (nat.times q p) m)))
    _clearme.

def congruent_to_divides :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt nat.O x1)
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (congruent x x0 x1)
                   (x3 => primes.divides x1 (nat.minus x x0)))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  Hcong:(cts.Term cts.star (congruent n m p)) =>
  primes.quotient
    p
    (nat.minus n m)
    (nat.minus (div_mod.div n p) (div_mod.div m p))
    (logic.eq_ind_r
       nat.nat
       (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p)
       (x:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                nat.nat)) =>
        logic.eq nat.nat (nat.minus n m) x)
       (logic.eq_ind_r
          nat.nat
          (nat.plus (nat.times (div_mod.div n p) p) (div_mod.mod n p))
          (x:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           logic.eq
             nat.nat
             (nat.minus x m)
             (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
          (logic.eq_ind_r
             nat.nat
             (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                (nat.minus (nat.plus (nat.times (div_mod.div n p) p) (div_mod.mod n p)) x)
                (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
             (logic.rewrite_r
                nat.nat
                (nat.times p (div_mod.div n p))
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 logic.eq
                   nat.nat
                   (nat.minus
                      (nat.plus __ (div_mod.mod n p))
                      (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                   (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
                (logic.rewrite_r
                   nat.nat
                   (nat.plus (div_mod.mod n p) (nat.times p (div_mod.div n p)))
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    logic.eq
                      nat.nat
                      (nat.minus
                         __
                         (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                      (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
                   (logic.rewrite_l
                      nat.nat
                      n
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq
                         nat.nat
                         (nat.minus
                            __
                            (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                         (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
                      (logic.rewrite_r
                         nat.nat
                         (nat.times p (div_mod.div m p))
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          logic.eq
                            nat.nat
                            (nat.minus n (nat.plus __ (div_mod.mod m p)))
                            (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
                         (logic.rewrite_l
                            nat.nat
                            (div_mod.mod n p)
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             logic.eq
                               nat.nat
                               (nat.minus n (nat.plus (nat.times p (div_mod.div m p)) __))
                               (nat.times (nat.minus (div_mod.div n p) (div_mod.div m p)) p))
                            (logic.rewrite_r
                               nat.nat
                               (nat.plus (div_mod.mod n p) (nat.times p (div_mod.div m p)))
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                logic.eq
                                  nat.nat
                                  (nat.minus n __)
                                  (nat.times
                                     (nat.minus (div_mod.div n p) (div_mod.div m p))
                                     p))
                               (logic.rewrite_l
                                  nat.nat
                                  (nat.minus
                                     (nat.minus n (div_mod.mod n p))
                                     (nat.times p (div_mod.div m p)))
                                  (__:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   logic.eq
                                     nat.nat
                                     __
                                     (nat.times
                                        (nat.minus (div_mod.div n p) (div_mod.div m p))
                                        p))
                                  (logic.rewrite_l
                                     nat.nat
                                     (nat.times p (div_mod.div n p))
                                     (__:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      logic.eq
                                        nat.nat
                                        (nat.minus __ (nat.times p (div_mod.div m p)))
                                        (nat.times
                                           (nat.minus
                                              (div_mod.div n p)
                                              (div_mod.div m p))
                                           p))
                                     (logic.rewrite_l
                                        nat.nat
                                        (nat.times
                                           p
                                           (nat.minus
                                              (div_mod.div n p)
                                              (div_mod.div m p)))
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         logic.eq
                                           nat.nat
                                           __
                                           (nat.times
                                              (nat.minus
                                                 (div_mod.div n p)
                                                 (div_mod.div m p))
                                              p))
                                        (logic.rewrite_r
                                           nat.nat
                                           (nat.times
                                              p
                                              (nat.minus
                                                 (div_mod.div n p)
                                                 (div_mod.div m p)))
                                           (__:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            logic.eq
                                              nat.nat
                                              (nat.times
                                                 p
                                                 (nat.minus
                                                    (div_mod.div n p)
                                                    (div_mod.div m p)))
                                              __)
                                           (logic.refl
                                              nat.nat
                                              (nat.times
                                                 p
                                                 (nat.minus
                                                    (div_mod.div n p)
                                                    (div_mod.div m p))))
                                           (nat.times
                                              (nat.minus
                                                 (div_mod.div n p)
                                                 (div_mod.div m p))
                                              p)
                                           (nat.commutative_times
                                              (nat.minus
                                                 (div_mod.div n p)
                                                 (div_mod.div m p))
                                              p))
                                        (nat.minus
                                           (nat.times p (div_mod.div n p))
                                           (nat.times p (div_mod.div m p)))
                                        (nat.distributive_times_minus
                                           p
                                           (div_mod.div n p)
                                           (div_mod.div m p)))
                                     (nat.minus n (div_mod.mod n p))
                                     (logic.rewrite_l
                                        nat.nat
                                        (nat.times (div_mod.div n p) p)
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         logic.eq
                                           nat.nat
                                           __
                                           (nat.minus n (div_mod.mod n p)))
                                        (div_mod.eq_times_div_minus_mod n p)
                                        (nat.times p (div_mod.div n p))
                                        (nat.commutative_times (div_mod.div n p) p)))
                                  (nat.minus
                                     n
                                     (nat.plus
                                        (div_mod.mod n p)
                                        (nat.times p (div_mod.div m p))))
                                  (nat.minus_plus
                                     n
                                     (div_mod.mod n p)
                                     (nat.times p (div_mod.div m p))))
                               (nat.plus (nat.times p (div_mod.div m p)) (div_mod.mod n p))
                               (nat.commutative_plus
                                  (nat.times p (div_mod.div m p))
                                  (div_mod.mod n p)))
                            (div_mod.mod m p)
                            Hcong)
                         (nat.times (div_mod.div m p) p)
                         (nat.commutative_times (div_mod.div m p) p))
                      (nat.plus (div_mod.mod n p) (nat.times p (div_mod.div n p)))
                      (logic.rewrite_l
                         nat.nat
                         (nat.plus (nat.times p (div_mod.div n p)) (div_mod.mod n p))
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          logic.eq nat.nat n __)
                         (logic.rewrite_l
                            nat.nat
                            (nat.times (div_mod.div n p) p)
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             logic.eq nat.nat n (nat.plus __ (div_mod.mod n p)))
                            (div_mod.div_mod n p)
                            (nat.times p (div_mod.div n p))
                            (nat.commutative_times (div_mod.div n p) p))
                         (nat.plus (div_mod.mod n p) (nat.times p (div_mod.div n p)))
                         (nat.commutative_plus
                            (nat.times p (div_mod.div n p))
                            (div_mod.mod n p))))
                   (nat.plus (nat.times p (div_mod.div n p)) (div_mod.mod n p))
                   (nat.commutative_plus (nat.times p (div_mod.div n p)) (div_mod.mod n p)))
                (nat.times (div_mod.div n p) p)
                (nat.commutative_times (div_mod.div n p) p))
             m
             (div_mod.div_mod m p))
          n
          (div_mod.div_mod n p))
       (nat.times p (nat.minus (div_mod.div n p) (div_mod.div m p)))
       (nat.commutative_times p (nat.minus (div_mod.div n p) (div_mod.div m p)))).

def let_clause_1034 :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt nat.O x1)
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      nat.nat
                      (x4 =>
                       logic.eq
                         nat.nat
                         x3
                         (nat.plus (div_mod.mod x3 x4) (nat.times x4 (div_mod.div x3 x4))))))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  x2515:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
  x2516:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
  logic.rewrite_l
    nat.nat
    (nat.plus (nat.times x2516 (div_mod.div x2515 x2516)) (div_mod.mod x2515 x2516))
    (__:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
     logic.eq nat.nat x2515 __)
    (logic.rewrite_l
       nat.nat
       (nat.times (div_mod.div x2515 x2516) x2516)
       (__:(cts.Term
              cts.diamond
              (cts.cast
                 cts.triangle
                 cts.sinf
                 (cts.univ cts.box cts.triangle cts.I)
                 (cts.univ cts.diamond cts.sinf cts.I)
                 cts.I
                 nat.nat)) =>
        logic.eq nat.nat x2515 (nat.plus __ (div_mod.mod x2515 x2516)))
       (div_mod.div_mod x2515 x2516)
       (nat.times x2516 (div_mod.div x2515 x2516))
       (nat.commutative_times (div_mod.div x2515 x2516) x2516))
    (nat.plus (div_mod.mod x2515 x2516) (nat.times x2516 (div_mod.div x2515 x2516)))
    (nat.commutative_plus (nat.times x2516 (div_mod.div x2515 x2516)) (div_mod.mod x2515 x2516)).

def let_clause_73 :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt nat.O x1)
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      nat.nat
                      (x4 =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         nat.nat
                         (x5 =>
                          logic.eq
                            nat.nat
                            (nat.plus x3 (nat.plus x4 x5))
                            (nat.plus x4 (nat.plus x3 x5))))))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  x134:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
  x135:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
  x136:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
  logic.rewrite_l
    nat.nat
    (nat.plus (nat.plus x135 x134) x136)
    (__:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
     logic.eq nat.nat (nat.plus x134 (nat.plus x135 x136)) __)
    (nat.assoc_plus1 x136 x135 x134)
    (nat.plus x135 (nat.plus x134 x136))
    (nat.associative_plus x135 x134 x136).

def mod_times :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt nat.O x1)
                (x2 =>
                 logic.eq
                   nat.nat
                   (div_mod.mod (nat.times x x0) x1)
                   (div_mod.mod (nat.times (div_mod.mod x x1) (div_mod.mod x0 x1)) x1))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  eq_times_plus_to_congruent
    (nat.times n m)
    (nat.times (div_mod.mod n p) (div_mod.mod m p))
    p
    (nat.plus
       (nat.plus
          (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
          (nat.times (div_mod.div n p) (div_mod.mod m p)))
       (nat.times (div_mod.mod n p) (div_mod.div m p)))
    posp
    (logic.trans_eq
       nat.nat
       (nat.times n m)
       (nat.times
          (nat.plus (nat.times (div_mod.div n p) p) (div_mod.mod n p))
          (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
       (nat.plus
          (nat.times
             (nat.plus
                (nat.plus
                   (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
                   (nat.times (div_mod.div n p) (div_mod.mod m p)))
                (nat.times (div_mod.mod n p) (div_mod.div m p)))
             p)
          (nat.times (div_mod.mod n p) (div_mod.mod m p)))
       (logic.rewrite_r
          nat.nat
          (nat.times p (div_mod.div n p))
          (__:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    nat.nat)) =>
           logic.eq
             nat.nat
             (nat.times n m)
             (nat.times
                (nat.plus __ (div_mod.mod n p))
                (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))))
          (logic.rewrite_r
             nat.nat
             (nat.plus (div_mod.mod n p) (nat.times p (div_mod.div n p)))
             (__:(cts.Term
                    cts.diamond
                    (cts.cast
                       cts.triangle
                       cts.sinf
                       (cts.univ cts.box cts.triangle cts.I)
                       (cts.univ cts.diamond cts.sinf cts.I)
                       cts.I
                       nat.nat)) =>
              logic.eq
                nat.nat
                (nat.times n m)
                (nat.times __ (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))))
             (logic.rewrite_l
                nat.nat
                n
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 logic.eq
                   nat.nat
                   (nat.times n m)
                   (nat.times __ (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))))
                (logic.rewrite_r
                   nat.nat
                   (nat.times p (div_mod.div m p))
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    logic.eq
                      nat.nat
                      (nat.times n m)
                      (nat.times n (nat.plus __ (div_mod.mod m p))))
                   (logic.rewrite_r
                      nat.nat
                      (nat.plus (div_mod.mod m p) (nat.times p (div_mod.div m p)))
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq nat.nat (nat.times n m) (nat.times n __))
                      (logic.rewrite_l
                         nat.nat
                         m
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          logic.eq nat.nat (nat.times n m) (nat.times n __))
                         (logic.refl nat.nat (nat.times n m))
                         (nat.plus (div_mod.mod m p) (nat.times p (div_mod.div m p)))
                         (let_clause_1034 n m p posp m p))
                      (nat.plus (nat.times p (div_mod.div m p)) (div_mod.mod m p))
                      (nat.commutative_plus (nat.times p (div_mod.div m p)) (div_mod.mod m p)))
                   (nat.times (div_mod.div m p) p)
                   (nat.commutative_times (div_mod.div m p) p))
                (nat.plus (div_mod.mod n p) (nat.times p (div_mod.div n p)))
                (let_clause_1034 n m p posp n p))
             (nat.plus (nat.times p (div_mod.div n p)) (div_mod.mod n p))
             (nat.commutative_plus (nat.times p (div_mod.div n p)) (div_mod.mod n p)))
          (nat.times (div_mod.div n p) p)
          (nat.commutative_times (div_mod.div n p) p))
       (logic.trans_eq
          nat.nat
          (nat.times
             (nat.plus (nat.times (div_mod.div n p) p) (div_mod.mod n p))
             (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
          (nat.plus
             (nat.plus
                (nat.plus
                   (nat.times (nat.times (div_mod.div n p) p) (nat.times (div_mod.div m p) p))
                   (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
             (nat.times (div_mod.mod n p) (div_mod.mod m p)))
          (nat.plus
             (nat.times
                (nat.plus
                   (nat.plus
                      (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
                      (nat.times (div_mod.div n p) (div_mod.mod m p)))
                   (nat.times (div_mod.mod n p) (div_mod.div m p)))
                p)
             (nat.times (div_mod.mod n p) (div_mod.mod m p)))
          (logic.eq_ind_r
             nat.nat
             (nat.plus
                (nat.times
                   (nat.times (div_mod.div n p) p)
                   (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                (nat.times
                   (div_mod.mod n p)
                   (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                x
                (nat.plus
                   (nat.plus
                      (nat.plus
                         (nat.times
                            (nat.times (div_mod.div n p) p)
                            (nat.times (div_mod.div m p) p))
                         (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                      (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                   (nat.times (div_mod.mod n p) (div_mod.mod m p))))
             (logic.eq_ind_r
                nat.nat
                (nat.plus
                   (nat.times (nat.times (div_mod.div n p) p) (nat.times (div_mod.div m p) p))
                   (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 logic.eq
                   nat.nat
                   (nat.plus
                      x
                      (nat.times
                         (div_mod.mod n p)
                         (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))))
                   (nat.plus
                      (nat.plus
                         (nat.plus
                            (nat.times
                               (nat.times (div_mod.div n p) p)
                               (nat.times (div_mod.div m p) p))
                            (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                         (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                      (nat.times (div_mod.mod n p) (div_mod.mod m p))))
                (logic.eq_ind_r
                   nat.nat
                   (nat.plus
                      (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p))
                      (nat.times (div_mod.mod n p) (div_mod.mod m p)))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      (nat.plus
                         (nat.plus
                            (nat.times
                               (nat.times (div_mod.div n p) p)
                               (nat.times (div_mod.div m p) p))
                            (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                         x)
                      (nat.plus
                         (nat.plus
                            (nat.plus
                               (nat.times
                                  (nat.times (div_mod.div n p) p)
                                  (nat.times (div_mod.div m p) p))
                               (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                            (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                         (nat.times (div_mod.mod n p) (div_mod.mod m p))))
                   (logic.rewrite_l
                      nat.nat
                      (nat.plus
                         (nat.plus
                            (nat.plus
                               (nat.times
                                  (nat.times (div_mod.div n p) p)
                                  (nat.times (div_mod.div m p) p))
                               (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                            (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                         (nat.times (div_mod.mod n p) (div_mod.mod m p)))
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq
                         nat.nat
                         __
                         (nat.plus
                            (nat.plus
                               (nat.plus
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (nat.times (div_mod.div m p) p))
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (div_mod.mod m p)))
                               (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                            (nat.times (div_mod.mod n p) (div_mod.mod m p))))
                      (logic.refl
                         nat.nat
                         (nat.plus
                            (nat.plus
                               (nat.plus
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (nat.times (div_mod.div m p) p))
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (div_mod.mod m p)))
                               (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                            (nat.times (div_mod.mod n p) (div_mod.mod m p))))
                      (nat.plus
                         (nat.plus
                            (nat.times
                               (nat.times (div_mod.div n p) p)
                               (nat.times (div_mod.div m p) p))
                            (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                         (nat.plus
                            (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p))
                            (nat.times (div_mod.mod n p) (div_mod.mod m p))))
                      (nat.associative_plus
                         (nat.plus
                            (nat.times
                               (nat.times (div_mod.div n p) p)
                               (nat.times (div_mod.div m p) p))
                            (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                         (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p))
                         (nat.times (div_mod.mod n p) (div_mod.mod m p))))
                   (nat.times
                      (div_mod.mod n p)
                      (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                   (nat.distributive_times_plus
                      (div_mod.mod n p)
                      (nat.times (div_mod.div m p) p)
                      (div_mod.mod m p)))
                (nat.times
                   (nat.times (div_mod.div n p) p)
                   (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
                (nat.distributive_times_plus
                   (nat.times (div_mod.div n p) p)
                   (nat.times (div_mod.div m p) p)
                   (div_mod.mod m p)))
             (nat.times
                (nat.plus (nat.times (div_mod.div n p) p) (div_mod.mod n p))
                (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p)))
             (nat.distributive_times_plus_r
                (nat.plus (nat.times (div_mod.div m p) p) (div_mod.mod m p))
                (nat.times (div_mod.div n p) p)
                (div_mod.mod n p)))
          (logic.eq_f2
             nat.nat
             nat.nat
             nat.nat
             nat.plus
             (nat.plus
                (nat.plus
                   (nat.times (nat.times (div_mod.div n p) p) (nat.times (div_mod.div m p) p))
                   (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
             (nat.times
                (nat.plus
                   (nat.plus
                      (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
                      (nat.times (div_mod.div n p) (div_mod.mod m p)))
                   (nat.times (div_mod.mod n p) (div_mod.div m p)))
                p)
             (nat.times (div_mod.mod n p) (div_mod.mod m p))
             (nat.times (div_mod.mod n p) (div_mod.mod m p))
             (logic.eq_ind
                nat.nat
                (nat.times (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p)) p)
                (x_1:(cts.Term
                        cts.diamond
                        (cts.cast
                           cts.triangle
                           cts.sinf
                           (cts.univ cts.box cts.triangle cts.I)
                           (cts.univ cts.diamond cts.sinf cts.I)
                           cts.I
                           nat.nat)) =>
                 logic.eq
                   nat.nat
                   (nat.plus
                      (nat.plus
                         x_1
                         (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p)))
                      (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                   (nat.times
                      (nat.plus
                         (nat.plus
                            (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
                            (nat.times (div_mod.div n p) (div_mod.mod m p)))
                         (nat.times (div_mod.mod n p) (div_mod.div m p)))
                      p))
                (logic.eq_ind_r
                   nat.nat
                   (nat.times (div_mod.div n p) (nat.times p (div_mod.mod m p)))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      (nat.plus
                         (nat.plus
                            (nat.times
                               (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
                               p)
                            x)
                         (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                      (nat.times
                         (nat.plus
                            (nat.plus
                               (nat.times (nat.times (div_mod.div n p) p) (div_mod.div m p))
                               (nat.times (div_mod.div n p) (div_mod.mod m p)))
                            (nat.times (div_mod.mod n p) (div_mod.div m p)))
                         p))
                   (logic.eq_ind_r
                      nat.nat
                      (nat.times (div_mod.mod m p) p)
                      (x:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       logic.eq
                         nat.nat
                         (nat.plus
                            (nat.plus
                               (nat.times
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (div_mod.div m p))
                                  p)
                               (nat.times (div_mod.div n p) x))
                            (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                         (nat.times
                            (nat.plus
                               (nat.plus
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (div_mod.div m p))
                                  (nat.times (div_mod.div n p) (div_mod.mod m p)))
                               (nat.times (div_mod.mod n p) (div_mod.div m p)))
                            p))
                      (logic.eq_ind
                         nat.nat
                         (nat.times (nat.times (div_mod.div n p) (div_mod.mod m p)) p)
                         (x_1:(cts.Term
                                 cts.diamond
                                 (cts.cast
                                    cts.triangle
                                    cts.sinf
                                    (cts.univ cts.box cts.triangle cts.I)
                                    (cts.univ cts.diamond cts.sinf cts.I)
                                    cts.I
                                    nat.nat)) =>
                          logic.eq
                            nat.nat
                            (nat.plus
                               (nat.plus
                                  (nat.times
                                     (nat.times
                                        (nat.times (div_mod.div n p) p)
                                        (div_mod.div m p))
                                     p)
                                  x_1)
                               (nat.times (div_mod.mod n p) (nat.times (div_mod.div m p) p)))
                            (nat.times
                               (nat.plus
                                  (nat.plus
                                     (nat.times
                                        (nat.times (div_mod.div n p) p)
                                        (div_mod.div m p))
                                     (nat.times (div_mod.div n p) (div_mod.mod m p)))
                                  (nat.times (div_mod.mod n p) (div_mod.div m p)))
                               p))
                         (logic.eq_ind_r
                            nat.nat
                            (nat.plus
                               (nat.times
                                  (nat.plus
                                     (nat.times
                                        (nat.times (div_mod.div n p) p)
                                        (div_mod.div m p))
                                     (nat.times (div_mod.div n p) (div_mod.mod m p)))
                                  p)
                               (nat.times (nat.times (div_mod.mod n p) (div_mod.div m p)) p))
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             logic.eq
                               nat.nat
                               (nat.plus
                                  (nat.plus
                                     (nat.times
                                        (nat.times
                                           (nat.times (div_mod.div n p) p)
                                           (div_mod.div m p))
                                        p)
                                     (nat.times
                                        (nat.times (div_mod.div n p) (div_mod.mod m p))
                                        p))
                                  (nat.times
                                     (div_mod.mod n p)
                                     (nat.times (div_mod.div m p) p)))
                               x)
                            (logic.rewrite_r
                               nat.nat
                               (nat.times p (div_mod.div n p))
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                logic.eq
                                  nat.nat
                                  (nat.plus
                                     (nat.plus
                                        (nat.times (nat.times __ (div_mod.div m p)) p)
                                        (nat.times
                                           (nat.times
                                              (div_mod.div n p)
                                              (div_mod.mod m p))
                                           p))
                                     (nat.times
                                        (div_mod.mod n p)
                                        (nat.times (div_mod.div m p) p)))
                                  (nat.plus
                                     (nat.times
                                        (nat.plus
                                           (nat.times
                                              (nat.times (div_mod.div n p) p)
                                              (div_mod.div m p))
                                           (nat.times
                                              (div_mod.div n p)
                                              (div_mod.mod m p)))
                                        p)
                                     (nat.times
                                        (nat.times (div_mod.mod n p) (div_mod.div m p))
                                        p)))
                               (logic.rewrite_r
                                  nat.nat
                                  (nat.times
                                     (div_mod.div m p)
                                     (nat.times p (div_mod.div n p)))
                                  (__:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   logic.eq
                                     nat.nat
                                     (nat.plus
                                        (nat.plus
                                           (nat.times __ p)
                                           (nat.times
                                              (nat.times
                                                 (div_mod.div n p)
                                                 (div_mod.mod m p))
                                              p))
                                        (nat.times
                                           (div_mod.mod n p)
                                           (nat.times (div_mod.div m p) p)))
                                     (nat.plus
                                        (nat.times
                                           (nat.plus
                                              (nat.times
                                                 (nat.times (div_mod.div n p) p)
                                                 (div_mod.div m p))
                                              (nat.times
                                                 (div_mod.div n p)
                                                 (div_mod.mod m p)))
                                           p)
                                        (nat.times
                                           (nat.times
                                              (div_mod.mod n p)
                                              (div_mod.div m p))
                                           p)))
                                  (logic.rewrite_r
                                     nat.nat
                                     (nat.times
                                        p
                                        (nat.times (div_mod.div m p) (div_mod.div n p)))
                                     (__:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      logic.eq
                                        nat.nat
                                        (nat.plus
                                           (nat.plus
                                              (nat.times __ p)
                                              (nat.times
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.mod m p))
                                                 p))
                                           (nat.times
                                              (div_mod.mod n p)
                                              (nat.times (div_mod.div m p) p)))
                                        (nat.plus
                                           (nat.times
                                              (nat.plus
                                                 (nat.times
                                                    (nat.times (div_mod.div n p) p)
                                                    (div_mod.div m p))
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.mod m p)))
                                              p)
                                           (nat.times
                                              (nat.times
                                                 (div_mod.mod n p)
                                                 (div_mod.div m p))
                                              p)))
                                     (logic.rewrite_r
                                        nat.nat
                                        (nat.times (div_mod.div n p) (div_mod.div m p))
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         logic.eq
                                           nat.nat
                                           (nat.plus
                                              (nat.plus
                                                 (nat.times (nat.times p __) p)
                                                 (nat.times
                                                    (nat.times
                                                       (div_mod.div n p)
                                                       (div_mod.mod m p))
                                                    p))
                                              (nat.times
                                                 (div_mod.mod n p)
                                                 (nat.times (div_mod.div m p) p)))
                                           (nat.plus
                                              (nat.times
                                                 (nat.plus
                                                    (nat.times
                                                       (nat.times
                                                          (div_mod.div n p)
                                                          p)
                                                       (div_mod.div m p))
                                                    (nat.times
                                                       (div_mod.div n p)
                                                       (div_mod.mod m p)))
                                                 p)
                                              (nat.times
                                                 (nat.times
                                                    (div_mod.mod n p)
                                                    (div_mod.div m p))
                                                 p)))
                                        (logic.rewrite_r
                                           nat.nat
                                           (nat.times
                                              p
                                              (nat.times
                                                 p
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.div m p))))
                                           (__:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            logic.eq
                                              nat.nat
                                              (nat.plus
                                                 (nat.plus
                                                    __
                                                    (nat.times
                                                       (nat.times
                                                          (div_mod.div n p)
                                                          (div_mod.mod m p))
                                                       p))
                                                 (nat.times
                                                    (div_mod.mod n p)
                                                    (nat.times (div_mod.div m p) p)))
                                              (nat.plus
                                                 (nat.times
                                                    (nat.plus
                                                       (nat.times
                                                          (nat.times
                                                             (div_mod.div n p)
                                                             p)
                                                          (div_mod.div m p))
                                                       (nat.times
                                                          (div_mod.div n p)
                                                          (div_mod.mod m p)))
                                                    p)
                                                 (nat.times
                                                    (nat.times
                                                       (div_mod.mod n p)
                                                       (div_mod.div m p))
                                                    p)))
                                           (logic.rewrite_r
                                              nat.nat
                                              (nat.times
                                                 p
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.mod m p)))
                                              (__:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               logic.eq
                                                 nat.nat
                                                 (nat.plus
                                                    (nat.plus
                                                       (nat.times
                                                          p
                                                          (nat.times
                                                             p
                                                             (nat.times
                                                                (div_mod.div n p)
                                                                (div_mod.div m p))))
                                                       __)
                                                    (nat.times
                                                       (div_mod.mod n p)
                                                       (nat.times
                                                          (div_mod.div m p)
                                                          p)))
                                                 (nat.plus
                                                    (nat.times
                                                       (nat.plus
                                                          (nat.times
                                                             (nat.times
                                                                (div_mod.div n p)
                                                                p)
                                                             (div_mod.div m p))
                                                          (nat.times
                                                             (div_mod.div n p)
                                                             (div_mod.mod m p)))
                                                       p)
                                                    (nat.times
                                                       (nat.times
                                                          (div_mod.mod n p)
                                                          (div_mod.div m p))
                                                       p)))
                                              (logic.rewrite_l
                                                 nat.nat
                                                 (nat.times
                                                    p
                                                    (nat.plus
                                                       (nat.times
                                                          p
                                                          (nat.times
                                                             (div_mod.div n p)
                                                             (div_mod.div m p)))
                                                       (nat.times
                                                          (div_mod.div n p)
                                                          (div_mod.mod m p))))
                                                 (__:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  logic.eq
                                                    nat.nat
                                                    (nat.plus
                                                       __
                                                       (nat.times
                                                          (div_mod.mod n p)
                                                          (nat.times
                                                             (div_mod.div m p)
                                                             p)))
                                                    (nat.plus
                                                       (nat.times
                                                          (nat.plus
                                                             (nat.times
                                                                (nat.times
                                                                   (div_mod.div
                                                                    n
                                                                    p)
                                                                   p)
                                                                (div_mod.div m p))
                                                             (nat.times
                                                                (div_mod.div n p)
                                                                (div_mod.mod m p)))
                                                          p)
                                                       (nat.times
                                                          (nat.times
                                                             (div_mod.mod n p)
                                                             (div_mod.div m p))
                                                          p)))
                                                 (logic.rewrite_r
                                                    nat.nat
                                                    (nat.times p (div_mod.div m p))
                                                    (__:(cts.Term
                                                           cts.diamond
                                                           (cts.cast
                                                              cts.triangle
                                                              cts.sinf
                                                              (cts.univ
                                                                 cts.box
                                                                 cts.triangle
                                                                 cts.I)
                                                              (cts.univ
                                                                 cts.diamond
                                                                 cts.sinf
                                                                 cts.I)
                                                              cts.I
                                                              nat.nat)) =>
                                                     logic.eq
                                                       nat.nat
                                                       (nat.plus
                                                          (nat.times
                                                             p
                                                             (nat.plus
                                                                (nat.times
                                                                   p
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                (nat.times
                                                                   (div_mod.div
                                                                    n
                                                                    p)
                                                                   (div_mod.mod
                                                                    m
                                                                    p))))
                                                          (nat.times
                                                             (div_mod.mod n p)
                                                             __))
                                                       (nat.plus
                                                          (nat.times
                                                             (nat.plus
                                                                (nat.times
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                   (div_mod.div
                                                                    m
                                                                    p))
                                                                (nat.times
                                                                   (div_mod.div
                                                                    n
                                                                    p)
                                                                   (div_mod.mod
                                                                    m
                                                                    p)))
                                                             p)
                                                          (nat.times
                                                             (nat.times
                                                                (div_mod.mod n p)
                                                                (div_mod.div m p))
                                                             p)))
                                                    (logic.rewrite_r
                                                       nat.nat
                                                       (nat.times
                                                          p
                                                          (nat.times
                                                             (div_mod.mod n p)
                                                             (div_mod.div m p)))
                                                       (__:(cts.Term
                                                              cts.diamond
                                                              (cts.cast
                                                                 cts.triangle
                                                                 cts.sinf
                                                                 (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                 (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                 cts.I
                                                                 nat.nat)) =>
                                                        logic.eq
                                                          nat.nat
                                                          (nat.plus
                                                             (nat.times
                                                                p
                                                                (nat.plus
                                                                   (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                             __)
                                                          (nat.plus
                                                             (nat.times
                                                                (nat.plus
                                                                   (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                p)
                                                             (nat.times
                                                                (nat.times
                                                                   (div_mod.mod
                                                                    n
                                                                    p)
                                                                   (div_mod.div
                                                                    m
                                                                    p))
                                                                p)))
                                                       (logic.rewrite_r
                                                          nat.nat
                                                          (nat.times
                                                             (div_mod.div m p)
                                                             (div_mod.mod n p))
                                                          (__:(cts.Term
                                                                 cts.diamond
                                                                 (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (
                                                                    cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (
                                                                    cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                           logic.eq
                                                             nat.nat
                                                             (nat.plus
                                                                (nat.times
                                                                   p
                                                                   (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                (nat.times p __))
                                                             (nat.plus
                                                                (nat.times
                                                                   (nat.plus
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                   p)
                                                                (nat.times
                                                                   (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                   p)))
                                                          (logic.rewrite_r
                                                             nat.nat
                                                             (nat.plus
                                                                (nat.times
                                                                   p
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                (nat.times
                                                                   p
                                                                   (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                             (__:(cts.Term
                                                                    cts.diamond
                                                                    (
                                                                    cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                              logic.eq
                                                                nat.nat
                                                                __
                                                                (nat.plus
                                                                   (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                   (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                             (logic.rewrite_l
                                                                nat.nat
                                                                (nat.times
                                                                   p
                                                                   (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                                (__:(
                                                                 cts.Term
                                                                   cts.diamond
                                                                   (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                 logic.eq
                                                                   nat.nat
                                                                   __
                                                                   (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                (logic.rewrite_r
                                                                   nat.nat
                                                                   (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                   (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    __)
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                   (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    __))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (div_mod.div
                                                                    n
                                                                    p))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    __
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (nat.times
                                                                    p
                                                                    (div_mod.div
                                                                    n
                                                                    p)))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    __
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.div
                                                                    n
                                                                    p)))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    __
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    __)
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    __
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (nat.times
                                                                    __
                                                                    p)))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    __))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    __)
                                                                    (logic.rewrite_l
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    __)
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.times
                                                                    p
                                                                    __))
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    __)))
                                                                    (logic.refl
                                                                    nat.nat
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    (nat.commutative_plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (let_clause_73
                                                                    n
                                                                    m
                                                                    p
                                                                    posp
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (nat.distributive_times_plus
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))))
                                                                    (nat.commutative_plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                                    (nat.times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    p)
                                                                    (nat.commutative_times
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.commutative_times
                                                                    (div_mod.mod
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p)
                                                                    (nat.commutative_times
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.div
                                                                    n
                                                                    p))
                                                                    (nat.commutative_times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.div
                                                                    n
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (nat.times
                                                                    p
                                                                    (div_mod.div
                                                                    n
                                                                    p)))
                                                                    (nat.times_times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    p
                                                                    (div_mod.div
                                                                    n
                                                                    p)))
                                                                    (nat.times
                                                                    (nat.times
                                                                    p
                                                                    (div_mod.div
                                                                    n
                                                                    p))
                                                                    (div_mod.div
                                                                    m
                                                                    p))
                                                                    (nat.commutative_times
                                                                    (nat.times
                                                                    p
                                                                    (div_mod.div
                                                                    n
                                                                    p))
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p)
                                                                    (nat.commutative_times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    p))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))
                                                                    (nat.commutative_plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                   (nat.plus
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                   (let_clause_73
                                                                    n
                                                                    m
                                                                    p
                                                                    posp
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                (nat.plus
                                                                   (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))
                                                                   (nat.times
                                                                    p
                                                                    (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                                (nat.distributive_times_plus
                                                                   p
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))
                                                                   (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p)))))
                                                             (nat.plus
                                                                (nat.times
                                                                   p
                                                                   (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                (nat.times
                                                                   p
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p))))
                                                             (nat.commutative_plus
                                                                (nat.times
                                                                   p
                                                                   (nat.plus
                                                                    (nat.times
                                                                    p
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.div
                                                                    m
                                                                    p)))
                                                                    (nat.times
                                                                    (div_mod.div
                                                                    n
                                                                    p)
                                                                    (div_mod.mod
                                                                    m
                                                                    p))))
                                                                (nat.times
                                                                   p
                                                                   (nat.times
                                                                    (div_mod.div
                                                                    m
                                                                    p)
                                                                    (div_mod.mod
                                                                    n
                                                                    p)))))
                                                          (nat.times
                                                             (div_mod.mod n p)
                                                             (div_mod.div m p))
                                                          (nat.commutative_times
                                                             (div_mod.mod n p)
                                                             (div_mod.div m p)))
                                                       (nat.times
                                                          (div_mod.mod n p)
                                                          (nat.times
                                                             p
                                                             (div_mod.div m p)))
                                                       (nat.times_times
                                                          (div_mod.mod n p)
                                                          p
                                                          (div_mod.div m p)))
                                                    (nat.times (div_mod.div m p) p)
                                                    (nat.commutative_times
                                                       (div_mod.div m p)
                                                       p))
                                                 (nat.plus
                                                    (nat.times
                                                       p
                                                       (nat.times
                                                          p
                                                          (nat.times
                                                             (div_mod.div n p)
                                                             (div_mod.div m p))))
                                                    (nat.times
                                                       p
                                                       (nat.times
                                                          (div_mod.div n p)
                                                          (div_mod.mod m p))))
                                                 (nat.distributive_times_plus
                                                    p
                                                    (nat.times
                                                       p
                                                       (nat.times
                                                          (div_mod.div n p)
                                                          (div_mod.div m p)))
                                                    (nat.times
                                                       (div_mod.div n p)
                                                       (div_mod.mod m p))))
                                              (nat.times
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.mod m p))
                                                 p)
                                              (nat.commutative_times
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.mod m p))
                                                 p))
                                           (nat.times
                                              (nat.times
                                                 p
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.div m p)))
                                              p)
                                           (nat.commutative_times
                                              (nat.times
                                                 p
                                                 (nat.times
                                                    (div_mod.div n p)
                                                    (div_mod.div m p)))
                                              p))
                                        (nat.times (div_mod.div m p) (div_mod.div n p))
                                        (nat.commutative_times
                                           (div_mod.div m p)
                                           (div_mod.div n p)))
                                     (nat.times
                                        (div_mod.div m p)
                                        (nat.times p (div_mod.div n p)))
                                     (nat.times_times
                                        (div_mod.div m p)
                                        p
                                        (div_mod.div n p)))
                                  (nat.times
                                     (nat.times p (div_mod.div n p))
                                     (div_mod.div m p))
                                  (nat.commutative_times
                                     (nat.times p (div_mod.div n p))
                                     (div_mod.div m p)))
                               (nat.times (div_mod.div n p) p)
                               (nat.commutative_times (div_mod.div n p) p))
                            (nat.times
                               (nat.plus
                                  (nat.plus
                                     (nat.times
                                        (nat.times (div_mod.div n p) p)
                                        (div_mod.div m p))
                                     (nat.times (div_mod.div n p) (div_mod.mod m p)))
                                  (nat.times (div_mod.mod n p) (div_mod.div m p)))
                               p)
                            (nat.distributive_times_plus_r
                               p
                               (nat.plus
                                  (nat.times
                                     (nat.times (div_mod.div n p) p)
                                     (div_mod.div m p))
                                  (nat.times (div_mod.div n p) (div_mod.mod m p)))
                               (nat.times (div_mod.mod n p) (div_mod.div m p))))
                         (nat.times (div_mod.div n p) (nat.times (div_mod.mod m p) p))
                         (nat.associative_times (div_mod.div n p) (div_mod.mod m p) p))
                      (nat.times p (div_mod.mod m p))
                      (nat.commutative_times p (div_mod.mod m p)))
                   (nat.times (nat.times (div_mod.div n p) p) (div_mod.mod m p))
                   (nat.associative_times (div_mod.div n p) p (div_mod.mod m p)))
                (nat.times (nat.times (div_mod.div n p) p) (nat.times (div_mod.div m p) p))
                (nat.associative_times (nat.times (div_mod.div n p) p) (div_mod.div m p) p))
             (logic.refl nat.nat (nat.times (div_mod.mod n p) (div_mod.mod m p)))))).

def congruent_times :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (nat.lt nat.O x3)
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (congruent x x1 x3)
                         (x5 =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (congruent x0 x2 x3)
                            (x6 => congruent (nat.times x x0) (nat.times x1 x2) x3)))))))))
  :=
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  m1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  posp:(cts.Term cts.star (nat.lt nat.O p)) =>
  Hcongn:(cts.Term cts.star (congruent n n1 p)) =>
  Hcongm:(cts.Term cts.star (congruent m m1 p)) =>
  logic.eq_ind_r
    nat.nat
    (div_mod.mod (nat.times (div_mod.mod n p) (div_mod.mod m p)) p)
    (x:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     logic.eq nat.nat x (div_mod.mod (nat.times n1 m1) p))
    (logic.eq_ind_r
       nat.nat
       (div_mod.mod n1 p)
       (x:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                nat.nat)) =>
        logic.eq
          nat.nat
          (div_mod.mod (nat.times x (div_mod.mod m p)) p)
          (div_mod.mod (nat.times n1 m1) p))
       (logic.eq_ind_r
          nat.nat
          (div_mod.mod m1 p)
          (x:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           logic.eq
             nat.nat
             (div_mod.mod (nat.times (div_mod.mod n1 p) x) p)
             (div_mod.mod (nat.times n1 m1) p))
          (logic.sym_eq
             nat.nat
             (div_mod.mod (nat.times n1 m1) p)
             (div_mod.mod (nat.times (div_mod.mod n1 p) (div_mod.mod m1 p)) p)
             (mod_times n1 m1 p posp))
          (div_mod.mod m p)
          Hcongm)
       (div_mod.mod n p)
       Hcongn)
    (div_mod.mod (nat.times n m) p)
    (mod_times n m p posp).

