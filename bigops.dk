def sameF_upto :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => x))
                   (x2 => cts.univ cts.star cts.box cts.I))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  g:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  cts.prod
    cts.box
    cts.star
    cts.star
    cts.I
    nat.nat
    (x => cts.prod cts.star cts.star cts.star cts.I (nat.lt x k) (x0 => logic.eq A (f x) (g x))).

def sameF_p :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => x))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => cts.univ cts.star cts.box cts.I)))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  g:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  cts.prod
    cts.box
    cts.star
    cts.star
    cts.I
    nat.nat
    (x =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (nat.lt x k)
       (x0 =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p x) bool.true)
          (x1 => logic.eq A (f x) (g x)))).

def sameF_upto_le :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => x))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (nat.le x2 x3)
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (sameF_upto x x3 x0 x1)
                         (x5 => sameF_upto x x2 x0 x1))))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  g:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lenm:(cts.Term cts.star (nat.le n m)) =>
  samef:(cts.Term cts.star (sameF_upto A m f g)) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  ltin:(cts.Term cts.star (nat.lt i n)) => samef i (nat.lt_to_le_to_lt i n m ltin lenm).

def sameF_p_le :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => x))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      nat.nat
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (nat.le x3 x4)
                         (x5 =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (sameF_p x x4 x0 x1 x2)
                            (x6 => sameF_p x x3 x0 x1 x2)))))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  g:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A)))) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lenm:(cts.Term cts.star (nat.le n m)) =>
  samef:(cts.Term cts.star (sameF_p A m p f g)) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  ltin:(cts.Term cts.star (nat.lt i n)) =>
  pi:(cts.Term cts.star (logic.eq bool.bool (p i) bool.true)) =>
  samef
    i
    (nat.lt_to_le_to_lt i n m ltin lenm)
    (logic.rewrite_r
       bool.bool
       bool.true
       (__:(cts.Term
              cts.diamond
              (cts.cast
                 cts.triangle
                 cts.sinf
                 (cts.univ cts.box cts.triangle cts.I)
                 (cts.univ cts.diamond cts.sinf cts.I)
                 cts.I
                 bool.bool)) =>
        logic.eq bool.bool __ bool.true)
       (logic.refl bool.bool bool.true)
       (p i)
       pi).

bigop :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))))).

bigop_body :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))))).

axiom_bigop_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        connectives.equal
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => x)))))
          (bigop x nat.O)
          (bigop_body x nat.O))).

def eq_bigop_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        leibniz.leibniz
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => x)))))
          (bigop x nat.O)
          (bigop_body x nat.O)))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  connectives.equal_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop H nat.O)
    (bigop_body H nat.O)
    (axiom_bigop_O H).

def sym_eq_bigop_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        leibniz.leibniz
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => x)))))
          (bigop_body x nat.O)
          (bigop x nat.O)))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  leibniz.sym_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop H nat.O)
    (bigop_body H nat.O)
    (eq_bigop_O H).

axiom_bigop_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           connectives.equal
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))
             (bigop x (nat.S x0))
             (bigop_body x (nat.S x0))))).

def eq_bigop_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           leibniz.leibniz
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))
             (bigop x (nat.S x0))
             (bigop_body x (nat.S x0)))))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  connectives.equal_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop H (nat.S n))
    (bigop_body H (nat.S n))
    (axiom_bigop_S H n).

def sym_eq_bigop_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           leibniz.leibniz
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))
             (bigop_body x (nat.S x0))
             (bigop x (nat.S x0)))))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  leibniz.sym_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop H (nat.S n))
    (bigop_body H (nat.S n))
    (eq_bigop_S H n).

axiom_bigop_body_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        connectives.equal
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => x)))))
          (bigop_body x nat.O)
          (p:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool)))) =>
           nil:(cts.Term
                  cts.diamond
                  (cts.cast
                     cts.triangle
                     cts.sinf
                     (cts.univ cts.box cts.triangle cts.I)
                     (cts.univ cts.diamond cts.sinf cts.I)
                     cts.I
                     x)) =>
           op:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    (cts.prod
                       cts.box
                       cts.box
                       cts.box
                       cts.I
                       x
                       (x0 => cts.prod cts.box cts.box cts.box cts.I x (x1 => x))))) =>
           f:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => x)))) =>
           nil))).

def eq_bigop_body_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        leibniz.leibniz
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => x)))))
          (bigop_body x nat.O)
          (p:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool)))) =>
           nil:(cts.Term
                  cts.diamond
                  (cts.cast
                     cts.triangle
                     cts.sinf
                     (cts.univ cts.box cts.triangle cts.I)
                     (cts.univ cts.diamond cts.sinf cts.I)
                     cts.I
                     x)) =>
           op:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    (cts.prod
                       cts.box
                       cts.box
                       cts.box
                       cts.I
                       x
                       (x0 => cts.prod cts.box cts.box cts.box cts.I x (x1 => x))))) =>
           f:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => x)))) =>
           nil)))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  connectives.equal_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop_body H nat.O)
    (p:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
     nil:(cts.Term
            cts.diamond
            (cts.cast
               cts.triangle
               cts.sinf
               (cts.univ cts.box cts.triangle cts.I)
               (cts.univ cts.diamond cts.sinf cts.I)
               cts.I
               H)) =>
     op:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              (cts.prod
                 cts.box
                 cts.box
                 cts.box
                 cts.I
                 H
                 (x => cts.prod cts.box cts.box cts.box cts.I H (x0 => H))))) =>
     f:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => H)))) =>
     nil)
    (axiom_bigop_body_O H).

def sym_eq_bigop_body_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        leibniz.leibniz
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                      (x3 => x)))))
          (p:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool)))) =>
           nil:(cts.Term
                  cts.diamond
                  (cts.cast
                     cts.triangle
                     cts.sinf
                     (cts.univ cts.box cts.triangle cts.I)
                     (cts.univ cts.diamond cts.sinf cts.I)
                     cts.I
                     x)) =>
           op:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    (cts.prod
                       cts.box
                       cts.box
                       cts.box
                       cts.I
                       x
                       (x0 => cts.prod cts.box cts.box cts.box cts.I x (x1 => x))))) =>
           f:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => x)))) =>
           nil)
          (bigop_body x nat.O)))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  leibniz.sym_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop_body H nat.O)
    (p:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
     nil:(cts.Term
            cts.diamond
            (cts.cast
               cts.triangle
               cts.sinf
               (cts.univ cts.box cts.triangle cts.I)
               (cts.univ cts.diamond cts.sinf cts.I)
               cts.I
               H)) =>
     op:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              (cts.prod
                 cts.box
                 cts.box
                 cts.box
                 cts.I
                 H
                 (x => cts.prod cts.box cts.box cts.box cts.I H (x0 => H))))) =>
     f:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => H)))) =>
     nil)
    (eq_bigop_body_O H).

axiom_bigop_body_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           connectives.equal
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))
             (bigop_body x (nat.S x0))
             (p:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool)))) =>
              nil:(cts.Term
                     cts.diamond
                     (cts.cast
                        cts.triangle
                        cts.sinf
                        (cts.univ cts.box cts.triangle cts.I)
                        (cts.univ cts.diamond cts.sinf cts.I)
                        cts.I
                        x)) =>
              op:(cts.Term
                    cts.diamond
                    (cts.cast
                       cts.triangle
                       cts.sinf
                       (cts.univ cts.box cts.triangle cts.I)
                       (cts.univ cts.diamond cts.sinf cts.I)
                       cts.I
                       (cts.prod
                          cts.box
                          cts.box
                          cts.box
                          cts.I
                          x
                          (x1 => cts.prod cts.box cts.box cts.box cts.I x (x2 => x))))) =>
              f:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x)))) =>
              bool.match_bool_type
                x
                (op (f x0) (bigop x x0 p nil op f))
                (bigop x x0 p nil op f)
                (p x0))))).

def eq_bigop_body_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           leibniz.leibniz
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))
             (bigop_body x (nat.S x0))
             (p:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool)))) =>
              nil:(cts.Term
                     cts.diamond
                     (cts.cast
                        cts.triangle
                        cts.sinf
                        (cts.univ cts.box cts.triangle cts.I)
                        (cts.univ cts.diamond cts.sinf cts.I)
                        cts.I
                        x)) =>
              op:(cts.Term
                    cts.diamond
                    (cts.cast
                       cts.triangle
                       cts.sinf
                       (cts.univ cts.box cts.triangle cts.I)
                       (cts.univ cts.diamond cts.sinf cts.I)
                       cts.I
                       (cts.prod
                          cts.box
                          cts.box
                          cts.box
                          cts.I
                          x
                          (x1 => cts.prod cts.box cts.box cts.box cts.I x (x2 => x))))) =>
              f:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x)))) =>
              bool.match_bool_type
                x
                (op (f x0) (bigop x x0 p nil op f))
                (bigop x x0 p nil op f)
                (p x0)))))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  connectives.equal_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop_body H (nat.S n))
    (p:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
     nil:(cts.Term
            cts.diamond
            (cts.cast
               cts.triangle
               cts.sinf
               (cts.univ cts.box cts.triangle cts.I)
               (cts.univ cts.diamond cts.sinf cts.I)
               cts.I
               H)) =>
     op:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              (cts.prod
                 cts.box
                 cts.box
                 cts.box
                 cts.I
                 H
                 (x => cts.prod cts.box cts.box cts.box cts.I H (x0 => H))))) =>
     f:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => H)))) =>
     bool.match_bool_type H (op (f n) (bigop H n p nil op f)) (bigop H n p nil op f) (p n))
    (axiom_bigop_body_S H n).

def sym_eq_bigop_body_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           leibniz.leibniz
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                         (x4 => x)))))
             (p:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool)))) =>
              nil:(cts.Term
                     cts.diamond
                     (cts.cast
                        cts.triangle
                        cts.sinf
                        (cts.univ cts.box cts.triangle cts.I)
                        (cts.univ cts.diamond cts.sinf cts.I)
                        cts.I
                        x)) =>
              op:(cts.Term
                    cts.diamond
                    (cts.cast
                       cts.triangle
                       cts.sinf
                       (cts.univ cts.box cts.triangle cts.I)
                       (cts.univ cts.diamond cts.sinf cts.I)
                       cts.I
                       (cts.prod
                          cts.box
                          cts.box
                          cts.box
                          cts.I
                          x
                          (x1 => cts.prod cts.box cts.box cts.box cts.I x (x2 => x))))) =>
              f:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x)))) =>
              bool.match_bool_type
                x
                (op (f x0) (bigop x x0 p nil op f))
                (bigop x x0 p nil op f)
                (p x0))
             (bigop_body x (nat.S x0)))))
  :=
  H:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  leibniz.sym_leibniz
    (cts.prod
       cts.box
       cts.box
       cts.box
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          H
          (x0 =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                H
                (x1 => cts.prod cts.box cts.box cts.box cts.I H (x2 => H)))
             (x1 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => H))
                (x2 => H)))))
    (bigop_body H (nat.S n))
    (p:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
     nil:(cts.Term
            cts.diamond
            (cts.cast
               cts.triangle
               cts.sinf
               (cts.univ cts.box cts.triangle cts.I)
               (cts.univ cts.diamond cts.sinf cts.I)
               cts.I
               H)) =>
     op:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              (cts.prod
                 cts.box
                 cts.box
                 cts.box
                 cts.I
                 H
                 (x => cts.prod cts.box cts.box cts.box cts.I H (x0 => H))))) =>
     f:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => H)))) =>
     bool.match_bool_type H (op (f n) (bigop H n p nil op f)) (bigop H n p nil op f) (p n))
    (eq_bigop_body_S H n).

def bigop_Strue :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                x
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (logic.eq bool.bool (x1 x0) bool.true)
                         (x5 =>
                          logic.eq
                            x
                            (bigop
                               x
                               (nat.S x0)
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x1 i)
                               x2
                               x3
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x4 i))
                            (x3
                               (x4 x0)
                               (bigop
                                  x
                                  x0
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   x1 i)
                                  x2
                                  x3
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   x4 i)))))))))))
  :=
  B:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  nil:(cts.Term
         cts.diamond
         (cts.cast
            cts.triangle
            cts.sinf
            (cts.univ cts.box cts.triangle cts.I)
            (cts.univ cts.diamond cts.sinf cts.I)
            cts.I
            B)) =>
  op:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod
              cts.box
              cts.box
              cts.box
              cts.I
              B
              (x => cts.prod cts.box cts.box cts.box cts.I B (x0 => B))))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => B)))) =>
  sym_eq_bigop_S
    B
    k
    (y:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                (x =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   B
                   (x0 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         B
                         (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                      (x1 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                         (x2 => B))))))) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (logic.eq bool.bool (p k) bool.true)
       (x =>
        logic.eq
          B
          (y
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p i)
             nil
             op
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i))
          (op
             (f k)
             (bigop
                B
                k
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i)))))
    (sym_eq_bigop_body_S
       B
       k
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                   (x =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      B
                      (x0 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                         (x1 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                            (x2 => B))))))) =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p k) bool.true)
          (x =>
           logic.eq
             B
             (y
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (op
                (f k)
                (bigop
                   B
                   k
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i)))))
       (H:(cts.Term cts.star (logic.eq bool.bool (p k) bool.true)) =>
        logic.eq_ind_r
          bool.bool
          bool.true
          (x:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   bool.bool)) =>
           logic.eq
             B
             (bool.match_bool_type
                B
                (op
                   (f k)
                   (bigop
                      B
                      k
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i)))
                (bigop
                   B
                   k
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i))
                x)
             (op
                (f k)
                (bigop
                   B
                   k
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i))))
          (bool.eq_match_bool_type_true
             B
             (op
                (f k)
                (bigop
                   B
                   k
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i)))
             (bigop
                B
                k
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      B)) =>
              logic.eq
                B
                (bool.match_bool_type
                   B
                   (op
                      (f k)
                      (bigop
                         B
                         k
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))
                   (bigop
                      B
                      k
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   bool.true)
                y)
             (logic.refl
                B
                (bool.match_bool_type
                   B
                   (op
                      (f k)
                      (bigop
                         B
                         k
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))
                   (bigop
                      B
                      k
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   bool.true)))
          (p k)
          H)).

def bigop_Sfalse :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                x
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x3 => cts.prod cts.box cts.box cts.box cts.I x (x4 => x)))
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => x))
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (logic.eq bool.bool (x1 x0) bool.false)
                         (x5 =>
                          logic.eq
                            x
                            (bigop
                               x
                               (nat.S x0)
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x1 i)
                               x2
                               x3
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x4 i))
                            (bigop
                               x
                               x0
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x1 i)
                               x2
                               x3
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x4 i))))))))))
  :=
  B:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  nil:(cts.Term
         cts.diamond
         (cts.cast
            cts.triangle
            cts.sinf
            (cts.univ cts.box cts.triangle cts.I)
            (cts.univ cts.diamond cts.sinf cts.I)
            cts.I
            B)) =>
  op:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod
              cts.box
              cts.box
              cts.box
              cts.I
              B
              (x => cts.prod cts.box cts.box cts.box cts.I B (x0 => B))))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => B)))) =>
  sym_eq_bigop_S
    B
    k
    (y:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                (x =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   B
                   (x0 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         B
                         (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                      (x1 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                         (x2 => B))))))) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (logic.eq bool.bool (p k) bool.false)
       (x =>
        logic.eq
          B
          (y
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p i)
             nil
             op
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i))
          (bigop
             B
             k
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p i)
             nil
             op
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i))))
    (sym_eq_bigop_body_S
       B
       k
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                   (x =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      B
                      (x0 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                         (x1 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                            (x2 => B))))))) =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p k) bool.false)
          (x =>
           logic.eq
             B
             (y
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (bigop
                B
                k
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))))
       (H:(cts.Term cts.star (logic.eq bool.bool (p k) bool.false)) =>
        logic.eq_ind_r
          bool.bool
          bool.false
          (x:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   bool.bool)) =>
           logic.eq
             B
             (bool.match_bool_type
                B
                (op
                   (f k)
                   (bigop
                      B
                      k
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i)))
                (bigop
                   B
                   k
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i))
                x)
             (bigop
                B
                k
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i)))
          (bool.eq_match_bool_type_false
             B
             (op
                (f k)
                (bigop
                   B
                   k
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i)))
             (bigop
                B
                k
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      B)) =>
              logic.eq
                B
                (bool.match_bool_type
                   B
                   (op
                      (f k)
                      (bigop
                         B
                         k
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))
                   (bigop
                      B
                      k
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   bool.false)
                y)
             (logic.refl
                B
                (bool.match_bool_type
                   B
                   (op
                      (f k)
                      (bigop
                         B
                         k
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))
                   (bigop
                      B
                      k
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   bool.false)))
          (p k)
          H)).

def same_bigop :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => bool.bool))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   x
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         x
                         (x4 => cts.prod cts.box cts.box cts.box cts.I x (x5 => x)))
                      (x4 =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x5 => x))
                         (x5 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x6 => x))
                            (x6 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (sameF_upto bool.bool x0 x1 x2)
                               (x7 =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (sameF_p x x0 x1 x5 x6)
                                  (x8 =>
                                   logic.eq
                                     x
                                     (bigop
                                        x
                                        x0
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         x1 i)
                                        x3
                                        x4
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         x5 i))
                                     (bigop
                                        x
                                        x0
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         x2 i)
                                        x3
                                        x4
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         x6 i)))))))))))))
  :=
  B:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  nil:(cts.Term
         cts.diamond
         (cts.cast
            cts.triangle
            cts.sinf
            (cts.univ cts.box cts.triangle cts.I)
            (cts.univ cts.diamond cts.sinf cts.I)
            cts.I
            B)) =>
  op:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod
              cts.box
              cts.box
              cts.box
              cts.I
              B
              (x => cts.prod cts.box cts.box cts.box cts.I B (x0 => B))))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => B)))) =>
  g:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => B)))) =>
  nat.nat_ind
    (_x_365:(cts.Term
               cts.diamond
               (cts.cast
                  cts.triangle
                  cts.sinf
                  (cts.univ cts.box cts.triangle cts.I)
                  (cts.univ cts.diamond cts.sinf cts.I)
                  cts.I
                  nat.nat)) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (sameF_upto bool.bool _x_365 p1 p2)
       (x =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (sameF_p B _x_365 p1 f g)
          (x0 =>
           logic.eq
             B
             (bigop
                B
                _x_365
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p1 i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (bigop
                B
                _x_365
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p2 i)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 g i)))))
    (sym_eq_bigop_O
       B
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                   (x =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      B
                      (x0 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                         (x1 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                            (x2 => B))))))) =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (sameF_upto bool.bool nat.O p1 p2)
          (x =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (sameF_p B nat.O p1 f g)
             (x0 =>
              logic.eq
                B
                (bigop
                   B
                   nat.O
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p1 i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i))
                (y
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p2 i)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    g i)))))
       (sym_eq_bigop_body_O
          B
          (y:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                      (x =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         B
                         (x0 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               B
                               (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                            (x1 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                               (x2 => B))))))) =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (sameF_upto bool.bool nat.O p1 p2)
             (x =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sameF_p B nat.O p1 f g)
                (x0 =>
                 logic.eq
                   B
                   (bigop
                      B
                      nat.O
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p1 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   (y
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p2 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       g i)))))
          (eq_bigop_body_O
             B
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                         (x =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x0 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  B
                                  (x1 =>
                                   cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                               (x1 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x2 => B))
                                  (x2 => B))))))) =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sameF_upto bool.bool nat.O p1 p2)
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sameF_p B nat.O p1 f g)
                   (x0 =>
                    logic.eq
                      B
                      (bigop
                         B
                         nat.O
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p1 i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i))
                      (y
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p1 i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))))
             (eq_bigop_O
                B
                (y:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x => bool.bool))
                            (x =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               B
                               (x0 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     B
                                     (x1 =>
                                      cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                                  (x1 =>
                                   cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x2 => B))
                                     (x2 => B))))))) =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sameF_upto bool.bool nat.O p1 p2)
                   (x =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sameF_p B nat.O p1 f g)
                      (x0 =>
                       logic.eq
                         B
                         (bigop
                            B
                            nat.O
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p1 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f i))
                         (y
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p1 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f i)))))
                (auto:(cts.Term cts.star (sameF_upto bool.bool nat.O p1 p2)) =>
                 auto':(cts.Term cts.star (sameF_p B nat.O p1 f g)) =>
                 logic.refl
                   B
                   (bigop
                      B
                      nat.O
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p1 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i)))))))
    (n:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     sym_eq_bigop_S
       B
       n
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                   (x =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      B
                      (x0 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                         (x1 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                            (x2 => B))))))) =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (sameF_upto bool.bool n p1 p2)
             (x =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sameF_p B n p1 f g)
                (x0 =>
                 logic.eq
                   B
                   (bigop
                      B
                      n
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p1 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   (bigop
                      B
                      n
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p2 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       g i)))))
          (x =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (sameF_upto bool.bool (nat.S n) p1 p2)
             (x0 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sameF_p B (nat.S n) p1 f g)
                (x1 =>
                 logic.eq
                   B
                   (bigop
                      B
                      (nat.S n)
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p1 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   (y
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p2 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       g i))))))
       (sym_eq_bigop_S
          B
          n
          (y:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                      (x =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         B
                         (x0 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               B
                               (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                            (x1 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                               (x2 => B))))))) =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sameF_upto bool.bool n p1 p2)
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sameF_p B n p1 f g)
                   (x0 =>
                    logic.eq
                      B
                      (bigop
                         B
                         n
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p1 i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i))
                      (bigop
                         B
                         n
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p2 i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          g i)))))
             (x =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sameF_upto bool.bool (nat.S n) p1 p2)
                (x0 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sameF_p B (nat.S n) p1 f g)
                   (x1 =>
                    logic.eq
                      B
                      (y
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p1 i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i))
                      (bigop_body
                         B
                         (nat.S n)
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p2 i)
                         nil
                         op
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          g i))))))
          (sym_eq_bigop_body_S
             B
             n
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                         (x =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x0 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  B
                                  (x1 =>
                                   cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                               (x1 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x2 => B))
                                  (x2 => B))))))) =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sameF_upto bool.bool n p1 p2)
                   (x =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sameF_p B n p1 f g)
                      (x0 =>
                       logic.eq
                         B
                         (bigop
                            B
                            n
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p1 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f i))
                         (bigop
                            B
                            n
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p2 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             g i)))))
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sameF_upto bool.bool (nat.S n) p1 p2)
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sameF_p B (nat.S n) p1 f g)
                      (x1 =>
                       logic.eq
                         B
                         (y
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p1 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f i))
                         (bigop_body
                            B
                            (nat.S n)
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p2 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             g i))))))
             (sym_eq_bigop_body_S
                B
                n
                (y:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x => bool.bool))
                            (x =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               B
                               (x0 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     B
                                     (x1 =>
                                      cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                                  (x1 =>
                                   cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x2 => B))
                                     (x2 => B))))))) =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sameF_upto bool.bool n p1 p2)
                      (x =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (sameF_p B n p1 f g)
                         (x0 =>
                          logic.eq
                            B
                            (bigop
                               B
                               n
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p1 i)
                               nil
                               op
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                f i))
                            (bigop
                               B
                               n
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p2 i)
                               nil
                               op
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                g i)))))
                   (x =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sameF_upto bool.bool (nat.S n) p1 p2)
                      (x0 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (sameF_p B (nat.S n) p1 f g)
                         (x1 =>
                          logic.eq
                            B
                            (bool.match_bool_type
                               B
                               (op
                                  (f n)
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p1 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      f i)))
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p1 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   f i))
                               (p1 n))
                            (y
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p2 i)
                               nil
                               op
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                g i))))))
                (Hind:(cts.Term
                         cts.star
                         (cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (sameF_upto bool.bool n p1 p2)
                            (x =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (sameF_p B n p1 f g)
                               (x0 =>
                                logic.eq
                                  B
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p1 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      f i))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i)))))) =>
                 samep:(cts.Term cts.star (sameF_upto bool.bool (nat.S n) p1 p2)) =>
                 samef:(cts.Term cts.star (sameF_p B (nat.S n) p1 f g)) =>
                 logic.eq_ind_r
                   B
                   (bigop
                      B
                      n
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p2 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       g i))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            B)) =>
                    logic.eq
                      B
                      (bool.match_bool_type B (op (f n) x) x (p1 n))
                      (bool.match_bool_type
                         B
                         (op
                            (g n)
                            (bigop
                               B
                               n
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p2 i)
                               nil
                               op
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                g i)))
                         (bigop
                            B
                            n
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p2 i)
                            nil
                            op
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             g i))
                         (p2 n)))
                   (logic.eq_ind
                      bool.bool
                      (p1 n)
                      (x_1:(cts.Term
                              cts.diamond
                              (cts.cast
                                 cts.triangle
                                 cts.sinf
                                 (cts.univ cts.box cts.triangle cts.I)
                                 (cts.univ cts.diamond cts.sinf cts.I)
                                 cts.I
                                 bool.bool)) =>
                       logic.eq
                         B
                         (bool.match_bool_type
                            B
                            (op
                               (f n)
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p2 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   g i)))
                            (bigop
                               B
                               n
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p2 i)
                               nil
                               op
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                g i))
                            (p1 n))
                         (bool.match_bool_type
                            B
                            (op
                               (g n)
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p2 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   g i)))
                            (bigop
                               B
                               n
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p2 i)
                               nil
                               op
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                g i))
                            x_1))
                      (connectives.match_Or_prop
                         (logic.eq bool.bool (p1 n) bool.true)
                         (logic.eq bool.bool (p1 n) bool.false)
                         (logic.eq
                            B
                            (bool.match_bool_type
                               B
                               (op
                                  (f n)
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i)))
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p2 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   g i))
                               (p1 n))
                            (bool.match_bool_type
                               B
                               (op
                                  (g n)
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i)))
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p2 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   g i))
                               (p1 n)))
                         (H1:(cts.Term cts.star (logic.eq bool.bool (p1 n) bool.true)) =>
                          logic.eq_ind_r
                            bool.bool
                            bool.true
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     bool.bool)) =>
                             logic.eq
                               B
                               (bool.match_bool_type
                                  B
                                  (op
                                     (f n)
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i))
                                  x)
                               (bool.match_bool_type
                                  B
                                  (op
                                     (g n)
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i))
                                  x))
                            (bool.sym_eq_match_bool_type_true
                               B
                               (op
                                  (f n)
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i)))
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p2 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   g i))
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        B)) =>
                                logic.eq
                                  B
                                  y
                                  (bool.match_bool_type
                                     B
                                     (op
                                        (g n)
                                        (bigop
                                           B
                                           n
                                           (i:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            p2 i)
                                           nil
                                           op
                                           (i:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            g i)))
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i))
                                     bool.true))
                               (bool.sym_eq_match_bool_type_true
                                  B
                                  (op
                                     (g n)
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i))
                                  (y:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           B)) =>
                                   logic.eq
                                     B
                                     (op
                                        (f n)
                                        (bigop
                                           B
                                           n
                                           (i:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            p2 i)
                                           nil
                                           op
                                           (i:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            g i)))
                                     y)
                                  (logic.eq_ind
                                     B
                                     (f n)
                                     (x_1:(cts.Term
                                             cts.diamond
                                             (cts.cast
                                                cts.triangle
                                                cts.sinf
                                                (cts.univ cts.box cts.triangle cts.I)
                                                (cts.univ cts.diamond cts.sinf cts.I)
                                                cts.I
                                                B)) =>
                                      logic.eq
                                        B
                                        (op
                                           (f n)
                                           (bigop
                                              B
                                              n
                                              (i:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       nat.nat)) =>
                                               p2 i)
                                              nil
                                              op
                                              (i:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       nat.nat)) =>
                                               g i)))
                                        (op
                                           x_1
                                           (bigop
                                              B
                                              n
                                              (i:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       nat.nat)) =>
                                               p2 i)
                                              nil
                                              op
                                              (i:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       nat.nat)) =>
                                               g i))))
                                     (logic.refl
                                        B
                                        (op
                                           (f n)
                                           (bigop
                                              B
                                              n
                                              (i:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       nat.nat)) =>
                                               p2 i)
                                              nil
                                              op
                                              (i:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       nat.nat)) =>
                                               g i))))
                                     (g n)
                                     (samef n (nat.le_n (nat.S n)) H1))))
                            (p1 n)
                            H1)
                         (H1:(cts.Term cts.star (logic.eq bool.bool (p1 n) bool.false)) =>
                          logic.eq_ind_r
                            bool.bool
                            bool.false
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     bool.bool)) =>
                             logic.eq
                               B
                               (bool.match_bool_type
                                  B
                                  (op
                                     (f n)
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i))
                                  x)
                               (bool.match_bool_type
                                  B
                                  (op
                                     (g n)
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i))
                                  x))
                            (bool.sym_eq_match_bool_type_false
                               B
                               (op
                                  (f n)
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i)))
                               (bigop
                                  B
                                  n
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p2 i)
                                  nil
                                  op
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   g i))
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        B)) =>
                                logic.eq
                                  B
                                  y
                                  (bool.match_bool_type
                                     B
                                     (op
                                        (g n)
                                        (bigop
                                           B
                                           n
                                           (i:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            p2 i)
                                           nil
                                           op
                                           (i:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            g i)))
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i))
                                     bool.false))
                               (bool.sym_eq_match_bool_type_false
                                  B
                                  (op
                                     (g n)
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))
                                  (bigop
                                     B
                                     n
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p2 i)
                                     nil
                                     op
                                     (i:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      g i))
                                  (y:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           B)) =>
                                   logic.eq
                                     B
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i))
                                     y)
                                  (logic.refl
                                     B
                                     (bigop
                                        B
                                        n
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         p2 i)
                                        nil
                                        op
                                        (i:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         g i)))))
                            (p1 n)
                            H1)
                         (bool.true_or_false (p1 n)))
                      (p2 n)
                      (samep n (nat.le_n (nat.S n))))
                   (bigop
                      B
                      n
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p1 i)
                      nil
                      op
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i))
                   (Hind
                      (sameF_upto_le
                         bool.bool
                         p1
                         p2
                         n
                         (nat.S n)
                         (logic.eq_coerc
                            (nat.le (nat.pred (nat.S n)) (nat.S n))
                            (nat.le n (nat.S n))
                            (nat.le_pred_n (nat.S n))
                            (logic.rewrite_l
                               nat.nat
                               n
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                logic.eq
                                  (cts.univ cts.star cts.box cts.I)
                                  (nat.le __ (nat.S n))
                                  (nat.le n (nat.S n)))
                               (logic.refl
                                  (cts.univ cts.star cts.box cts.I)
                                  (nat.le n (nat.S n)))
                               (nat.pred (nat.S n))
                               (nat.pred_Sn n)))
                         samep)
                      (sameF_p_le
                         B
                         p1
                         f
                         g
                         n
                         (nat.S n)
                         (logic.eq_coerc
                            (nat.le (nat.pred (nat.S n)) (nat.S n))
                            (nat.le n (nat.S n))
                            (nat.le_pred_n (nat.S n))
                            (logic.rewrite_l
                               nat.nat
                               n
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                logic.eq
                                  (cts.univ cts.star cts.box cts.I)
                                  (nat.le __ (nat.S n))
                                  (nat.le n (nat.S n)))
                               (logic.refl
                                  (cts.univ cts.star cts.box cts.I)
                                  (nat.le n (nat.S n)))
                               (nat.pred (nat.S n))
                               (nat.pred_Sn n)))
                         samef)))))))
    k.

def bigop_false :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             x
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 => cts.prod cts.box cts.box cts.box cts.I x (x3 => x)))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => x))
                   (x3 =>
                    logic.eq
                      x
                      (bigop
                         x
                         x0
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.false)
                         x1
                         x2
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          x3 i))
                      x1))))))
  :=
  B:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  nil:(cts.Term
         cts.diamond
         (cts.cast
            cts.triangle
            cts.sinf
            (cts.univ cts.box cts.triangle cts.I)
            (cts.univ cts.diamond cts.sinf cts.I)
            cts.I
            B)) =>
  op:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod
              cts.box
              cts.box
              cts.box
              cts.I
              B
              (x => cts.prod cts.box cts.box cts.box cts.I B (x0 => B))))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => B)))) =>
  nat.nat_ind
    (_x_365:(cts.Term
               cts.diamond
               (cts.cast
                  cts.triangle
                  cts.sinf
                  (cts.univ cts.box cts.triangle cts.I)
                  (cts.univ cts.diamond cts.sinf cts.I)
                  cts.I
                  nat.nat)) =>
     logic.eq
       B
       (bigop
          B
          _x_365
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           bool.false)
          nil
          op
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           f i))
       nil)
    (eq_bigop_body_O
       B
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                   (x =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      B
                      (x0 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            B
                            (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                         (x1 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                            (x2 => B))))))) =>
        logic.eq
          B
          (bigop
             B
             nat.O
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              bool.false)
             nil
             op
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i))
          (y
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              bool.false)
             nil
             op
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i)))
       (eq_bigop_O
          B
          (y:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                      (x =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         B
                         (x0 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               B
                               (x1 => cts.prod cts.box cts.box cts.box cts.I B (x2 => B)))
                            (x1 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => B))
                               (x2 => B))))))) =>
           logic.eq
             B
             (bigop
                B
                nat.O
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.false)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (y
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.false)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i)))
          (logic.refl
             B
             (bigop
                B
                nat.O
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.false)
                nil
                op
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i)))))
    (n1:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
     Hind:(cts.Term
             cts.star
             (logic.eq
                B
                (bigop
                   B
                   n1
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.false)
                   nil
                   op
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i))
                nil)) =>
     logic.eq_ind_r
       B
       (bigop
          B
          n1
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           bool.false)
          nil
          op
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           f i))
       (x:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                B)) =>
        logic.eq B x nil)
       (logic.rewrite_r
          B
          nil
          (__:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    B)) =>
           logic.eq B __ nil)
          (logic.refl B nil)
          (bigop
             B
             n1
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              bool.false)
             nil
             op
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i))
          Hind)
       (bigop
          B
          (nat.S n1)
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           bool.false)
          nil
          op
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           f i))
       (bigop_Sfalse
          B
          n1
          (__:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    nat.nat)) =>
           bool.false)
          nil
          op
          f
          (logic.refl bool.bool bool.false)))
    n.

Aop :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I x (x0 => cts.univ cts.star cts.box cts.I)))).

mk_Aop :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 => cts.prod cts.box cts.box cts.box cts.I x (x2 => x)))
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.star cts.star cts.I x (x2 => logic.eq x (x1 x0 x2) x2))
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.star cts.star cts.I x (x3 => logic.eq x (x1 x3 x0) x3))
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         x
                         (x4 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            x
                            (x5 =>
                             cts.prod
                               cts.box
                               cts.star
                               cts.star
                               cts.I
                               x
                               (x6 => logic.eq x (x1 x4 (x1 x5 x6)) (x1 (x1 x4 x5) x6)))))
                      (x4 => Aop x x0))))))).

def assoc :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              logic.eq nat.nat (nat.times x (nat.times x0 x1)) (nat.times (nat.times x x0) x1)))))
  :=
  a:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  b:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  c:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  logic.sym_eq
    nat.nat
    (nat.times (nat.times a b) c)
    (nat.times a (nat.times b c))
    (nat.associative_times a b c).

def timesA :
  cts.Term cts.star (Aop nat.nat (nat.S nat.O))
  :=
  mk_Aop
    nat.nat
    (nat.S nat.O)
    nat.times
    (a:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     nat.sym_eq_times
       (nat.S nat.O)
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
        logic.eq nat.nat (y a) a)
       (nat.sym_eq_filter_nat_type_S
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
          nat.times_body
          nat.O
          (y:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
           logic.eq nat.nat (y a) a)
          (nat.sym_eq_times_body_S
             nat.O
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
              logic.eq nat.nat (y a) a)
             (nat.sym_eq_times
                nat.O
                (y:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
                 logic.eq nat.nat (nat.plus a (y a)) a)
                (nat.sym_eq_filter_nat_type_O
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                   nat.times_body
                   (y:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
                    logic.eq nat.nat (nat.plus a (y a)) a)
                   (nat.sym_eq_times_body_O
                      (y:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => nat.nat)))) =>
                       logic.eq nat.nat (nat.plus a (y a)) a)
                      (logic.sym_eq nat.nat a (nat.plus a nat.O) (nat.plus_n_O a))))))))
    (n:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     logic.sym_eq nat.nat n (nat.times n (nat.S nat.O)) (nat.times_n_1 n))
    (a:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     b:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     c:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     logic.sym_eq
       nat.nat
       (nat.times (nat.times a b) c)
       (nat.times a (nat.times b c))
       (nat.associative_times a b c)).

def bigop_I_gen :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => nat.nat))
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.le x x0)
                   (x3 =>
                    logic.eq
                      nat.nat
                      (bigop
                         nat.nat
                         (nat.minus x0 x)
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          x1 (nat.plus i x))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          x2 (nat.plus i x)))
                      (bigop
                         nat.nat
                         x0
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.andb (nat.leb x i) (x1 i))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          x2 i))))))))
  :=
  a:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  b:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  nat.nat_ind
    (_x_365:(cts.Term
               cts.diamond
               (cts.cast
                  cts.triangle
                  cts.sinf
                  (cts.univ cts.box cts.triangle cts.I)
                  (cts.univ cts.diamond cts.sinf cts.I)
                  cts.I
                  nat.nat)) =>
     cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (nat.le a _x_365)
             (x1 =>
              logic.eq
                nat.nat
                (bigop
                   nat.nat
                   (nat.minus _x_365 a)
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    x (nat.plus i a))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    x0 (nat.plus i a)))
                (bigop
                   nat.nat
                   _x_365
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (nat.leb a i) (x i))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    x0 i))))))
    (p:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
     f:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
     sym_eq_bigop_O
       nat.nat
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                   (x =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      nat.nat
                      (x0 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            nat.nat
                            (x1 =>
                             cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => nat.nat)))
                         (x1 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => nat.nat))
                            (x2 => nat.nat))))))) =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (nat.le a nat.O)
          (x =>
           logic.eq
             nat.nat
             (bigop
                nat.nat
                (nat.minus nat.O a)
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p (nat.plus i a))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f (nat.plus i a)))
             (y
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (nat.leb a i) (p i))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))))
       (sym_eq_bigop_body_O
          nat.nat
          (y:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                      (x =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         nat.nat
                         (x0 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x1 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x2 => nat.nat)))
                            (x1 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x2 => nat.nat))
                               (x2 => nat.nat))))))) =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (nat.le a nat.O)
             (x =>
              logic.eq
                nat.nat
                (bigop
                   nat.nat
                   (nat.minus nat.O a)
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p (nat.plus i a))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f (nat.plus i a)))
                (y
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (nat.leb a i) (p i))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i))))
          (eq_bigop_body_O
             nat.nat
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                         (x =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            nat.nat
                            (x0 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x1 =>
                                   cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x2 => nat.nat)))
                               (x1 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x2 => nat.nat))
                                  (x2 => nat.nat))))))) =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.le a nat.O)
                (x =>
                 logic.eq
                   nat.nat
                   (bigop
                      nat.nat
                      (nat.minus nat.O a)
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (y
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))))
             (eq_bigop_O
                nat.nat
                (y:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x => bool.bool))
                            (x =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x0 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x1 =>
                                      cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x2 => nat.nat)))
                                  (x1 =>
                                   cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x2 => nat.nat))
                                     (x2 => nat.nat))))))) =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.le a nat.O)
                   (x =>
                    logic.eq
                      nat.nat
                      (bigop
                         nat.nat
                         (nat.minus nat.O a)
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p (nat.plus i a))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f (nat.plus i a)))
                      (y
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p (nat.plus i a))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f (nat.plus i a)))))
                (nat.eq_minus_body_O
                   (y:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (nat.le a nat.O)
                      (x =>
                       logic.eq
                         nat.nat
                         (bigop
                            nat.nat
                            (nat.minus nat.O a)
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p (nat.plus i a))
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f (nat.plus i a)))
                         (bigop
                            nat.nat
                            (y a)
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p (nat.plus i a))
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f (nat.plus i a)))))
                   (nat.eq_filter_nat_type_O
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                      nat.minus_body
                      (y:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => nat.nat)))) =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (nat.le a nat.O)
                         (x =>
                          logic.eq
                            nat.nat
                            (bigop
                               nat.nat
                               (nat.minus nat.O a)
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p (nat.plus i a))
                               (nat.S nat.O)
                               nat.times
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                f (nat.plus i a)))
                            (bigop
                               nat.nat
                               (y a)
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p (nat.plus i a))
                               (nat.S nat.O)
                               nat.times
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                f (nat.plus i a)))))
                      (nat.eq_minus
                         nat.O
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x => nat.nat)))) =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (nat.le a nat.O)
                            (x =>
                             logic.eq
                               nat.nat
                               (bigop
                                  nat.nat
                                  (nat.minus nat.O a)
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p (nat.plus i a))
                                  (nat.S nat.O)
                                  nat.times
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   f (nat.plus i a)))
                               (bigop
                                  nat.nat
                                  (y a)
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   p (nat.plus i a))
                                  (nat.S nat.O)
                                  nat.times
                                  (i:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   f (nat.plus i a)))))
                         (auto:(cts.Term cts.star (nat.le a nat.O)) =>
                          logic.refl
                            nat.nat
                            (bigop
                               nat.nat
                               (nat.minus nat.O a)
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p (nat.plus i a))
                               (nat.S nat.O)
                               nat.times
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                f (nat.plus i a)))))))))))
    (b0:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
     Hind:(cts.Term
             cts.star
             (cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                (x =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (nat.le a b0)
                      (x1 =>
                       logic.eq
                         nat.nat
                         (bigop
                            nat.nat
                            (nat.minus b0 a)
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             x (nat.plus i a))
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             x0 (nat.plus i a)))
                         (bigop
                            nat.nat
                            b0
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             bool.andb (nat.leb a i) (x i))
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             x0 i))))))) =>
     p:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
     f:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
     lea:(cts.Term cts.star (nat.le a (nat.S b0))) =>
     connectives.match_Or_prop
       (nat.lt a (nat.S b0))
       (logic.eq nat.nat a (nat.S b0))
       (logic.eq
          nat.nat
          (bigop
             nat.nat
             (nat.minus (nat.S b0) a)
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p (nat.plus i a))
             (nat.S nat.O)
             nat.times
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f (nat.plus i a)))
          (bigop
             nat.nat
             (nat.S b0)
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              bool.andb (nat.leb a i) (p i))
             (nat.S nat.O)
             nat.times
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f i)))
       (Ha:(cts.Term cts.star (nat.lt a (nat.S b0))) =>
        connectives.match_Or_prop
          (logic.eq bool.bool (p b0) bool.true)
          (logic.eq bool.bool (p b0) bool.false)
          (logic.eq
             nat.nat
             (bigop
                nat.nat
                (nat.minus (nat.S b0) a)
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p (nat.plus i a))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f (nat.plus i a)))
             (bigop
                nat.nat
                (nat.S b0)
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (nat.leb a i) (p i))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i)))
          (Hcase:(cts.Term cts.star (logic.eq bool.bool (p b0) bool.true)) =>
           logic.eq_ind_r
             nat.nat
             (nat.times
                (f b0)
                (bigop
                   nat.nat
                   b0
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (nat.leb a i) (p i))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i)))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                (bigop
                   nat.nat
                   (nat.minus (nat.S b0) a)
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p (nat.plus i a))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f (nat.plus i a)))
                x)
             (logic.eq_ind_r
                nat.nat
                (nat.S (nat.minus b0 a))
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 logic.eq
                   nat.nat
                   (bigop
                      nat.nat
                      x
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (nat.times
                      (f b0)
                      (bigop
                         nat.nat
                         b0
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.andb (nat.leb a i) (p i))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i))))
                (logic.eq_ind_r
                   nat.nat
                   (nat.times
                      (f (nat.plus (nat.minus b0 a) a))
                      (bigop
                         nat.nat
                         (nat.minus b0 a)
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p (nat.plus i a))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f (nat.plus i a))))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      x
                      (nat.times
                         (f b0)
                         (bigop
                            nat.nat
                            b0
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             bool.andb (nat.leb a i) (p i))
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f i))))
                   (logic.eq_f2
                      nat.nat
                      nat.nat
                      nat.nat
                      nat.times
                      (f (nat.plus (nat.minus b0 a) a))
                      (f b0)
                      (bigop
                         nat.nat
                         (nat.minus b0 a)
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p (nat.plus i a))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f (nat.plus i a)))
                      (bigop
                         nat.nat
                         b0
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.andb (nat.leb a i) (p i))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i))
                      (logic.eq_f
                         nat.nat
                         nat.nat
                         f
                         (nat.plus (nat.minus b0 a) a)
                         b0
                         (logic.eq_ind
                            nat.nat
                            b0
                            (x_1:(cts.Term
                                    cts.diamond
                                    (cts.cast
                                       cts.triangle
                                       cts.sinf
                                       (cts.univ cts.box cts.triangle cts.I)
                                       (cts.univ cts.diamond cts.sinf cts.I)
                                       cts.I
                                       nat.nat)) =>
                             logic.eq nat.nat x_1 b0)
                            (logic.refl nat.nat b0)
                            (nat.plus (nat.minus b0 a) a)
                            (nat.plus_minus_m_m b0 a (nat.le_S_S_to_le a b0 Ha))))
                      (Hind p f (nat.le_S_S_to_le a b0 Ha)))
                   (bigop
                      nat.nat
                      (nat.S (nat.minus b0 a))
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (bigop_Strue
                      nat.nat
                      (nat.minus b0 a)
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       p (nat.plus __ a))
                      (nat.S nat.O)
                      nat.times
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f (nat.plus __ a))
                      (logic.eq_ind
                         nat.nat
                         b0
                         (x_1:(cts.Term
                                 cts.diamond
                                 (cts.cast
                                    cts.triangle
                                    cts.sinf
                                    (cts.univ cts.box cts.triangle cts.I)
                                    (cts.univ cts.diamond cts.sinf cts.I)
                                    cts.I
                                    nat.nat)) =>
                          logic.eq bool.bool (p x_1) bool.true)
                         (logic.rewrite_r
                            bool.bool
                            bool.true
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      bool.bool)) =>
                             logic.eq bool.bool __ bool.true)
                            (logic.refl bool.bool bool.true)
                            (p b0)
                            Hcase)
                         (nat.plus (nat.minus b0 a) a)
                         (nat.plus_minus_m_m b0 a (nat.le_S_S_to_le a b0 Ha)))))
                (nat.minus (nat.S b0) a)
                (nat.match_nat_prop
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (nat.le __ b0)
                      (x =>
                       logic.eq nat.nat (nat.minus (nat.S b0) __) (nat.S (nat.minus b0 __))))
                   (auto:(cts.Term cts.star (nat.le nat.O b0)) =>
                    logic.rewrite_l
                      nat.nat
                      (nat.S b0)
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq nat.nat __ (nat.S (nat.minus b0 nat.O)))
                      (logic.rewrite_l
                         nat.nat
                         b0
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          logic.eq nat.nat (nat.S b0) (nat.S __))
                         (logic.refl nat.nat (nat.S b0))
                         (nat.minus b0 nat.O)
                         (nat.minus_n_O b0))
                      (nat.minus (nat.S b0) nat.O)
                      (nat.minus_n_O (nat.S b0)))
                   (nat.sym_eq_minus
                      (nat.S b0)
                      (y:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => nat.nat)))) =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         nat.nat
                         (x =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (nat.le (nat.S x) b0)
                            (x0 =>
                             logic.eq nat.nat (y (nat.S x)) (nat.S (nat.minus b0 (nat.S x))))))
                      (nat.sym_eq_filter_nat_type_S
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                         nat.minus_body
                         b0
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x => nat.nat)))) =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            nat.nat
                            (x =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (nat.le (nat.S x) b0)
                               (x0 =>
                                logic.eq
                                  nat.nat
                                  (y (nat.S x))
                                  (nat.S (nat.minus b0 (nat.S x))))))
                         (a1:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          nat.sym_eq_minus_body_S
                            b0
                            (y:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x => nat.nat)))) =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (nat.le (nat.S a1) b0)
                               (x =>
                                logic.eq
                                  nat.nat
                                  (y (nat.S a1))
                                  (nat.S (nat.minus b0 (nat.S a1)))))
                            (nat.sym_eq_match_nat_type_S
                               nat.nat
                               (nat.S b0)
                               (q:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                nat.minus b0 q)
                               a1
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (nat.le (nat.S a1) b0)
                                  (x =>
                                   logic.eq nat.nat y (nat.S (nat.minus b0 (nat.S a1)))))
                               (lta1:(cts.Term cts.star (nat.le (nat.S a1) b0)) =>
                                logic.eq_ind_r
                                  nat.nat
                                  (nat.pred (nat.minus b0 a1))
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   logic.eq nat.nat (nat.minus b0 a1) (nat.S x))
                                  (logic.eq_ind_r
                                     nat.nat
                                     (nat.minus b0 a1)
                                     (x:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      logic.eq nat.nat (nat.minus b0 a1) x)
                                     (logic.refl nat.nat (nat.minus b0 a1))
                                     (nat.S (nat.pred (nat.minus b0 a1)))
                                     (nat.S_pred
                                        (nat.minus b0 a1)
                                        (nat.lt_plus_to_minus_r
                                           nat.O
                                           a1
                                           b0
                                           (nat.sym_eq_plus
                                              nat.O
                                              (y:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       (cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x => nat.nat)))) =>
                                               nat.le (nat.S (y a1)) b0)
                                              (nat.sym_eq_filter_nat_type_O
                                                 (cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    nat.nat
                                                    (x => nat.nat))
                                                 nat.plus_body
                                                 (y:(cts.Term
                                                       cts.diamond
                                                       (cts.cast
                                                          cts.triangle
                                                          cts.sinf
                                                          (cts.univ
                                                             cts.box
                                                             cts.triangle
                                                             cts.I)
                                                          (cts.univ
                                                             cts.diamond
                                                             cts.sinf
                                                             cts.I)
                                                          cts.I
                                                          (cts.prod
                                                             cts.box
                                                             cts.box
                                                             cts.box
                                                             cts.I
                                                             nat.nat
                                                             (x => nat.nat)))) =>
                                                  nat.le (nat.S (y a1)) b0)
                                                 (nat.sym_eq_plus_body_O
                                                    (y:(cts.Term
                                                          cts.diamond
                                                          (cts.cast
                                                             cts.triangle
                                                             cts.sinf
                                                             (cts.univ
                                                                cts.box
                                                                cts.triangle
                                                                cts.I)
                                                             (cts.univ
                                                                cts.diamond
                                                                cts.sinf
                                                                cts.I)
                                                             cts.I
                                                             (cts.prod
                                                                cts.box
                                                                cts.box
                                                                cts.box
                                                                cts.I
                                                                nat.nat
                                                                (x => nat.nat)))) =>
                                                     nat.le (nat.S (y a1)) b0)
                                                    lta1))))))
                                  (nat.minus b0 (nat.S a1))
                                  (nat.eq_minus_S_pred b0 a1))))))
                   a
                   (nat.le_S_S_to_le a b0 Ha)))
             (bigop
                nat.nat
                (nat.S b0)
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (nat.leb a i) (p i))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (bigop_Strue
                nat.nat
                b0
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 bool.andb (nat.leb a __) (p __))
                (nat.S nat.O)
                nat.times
                f
                (logic.eq_ind_r
                   bool.bool
                   bool.true
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            bool.bool)) =>
                    logic.eq bool.bool (bool.andb (nat.leb a b0) x) bool.true)
                   (logic.eq_ind_r
                      bool.bool
                      bool.true
                      (x:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               bool.bool)) =>
                       logic.eq bool.bool (bool.andb x bool.true) bool.true)
                      (bool.eq_match_bool_type_true
                         bool.bool
                         bool.true
                         bool.false
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  bool.bool)) =>
                          logic.eq
                            bool.bool
                            (bool.match_bool_type bool.bool bool.true bool.false bool.true)
                            y)
                         (logic.refl bool.bool (bool.andb bool.true bool.true)))
                      (nat.leb a b0)
                      (nat.le_to_leb_true a b0 (nat.le_S_S_to_le a b0 Ha)))
                   (p b0)
                   Hcase)))
          (Hcase:(cts.Term cts.star (logic.eq bool.bool (p b0) bool.false)) =>
           logic.eq_ind_r
             nat.nat
             (bigop
                nat.nat
                b0
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (nat.leb a i) (p i))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                (bigop
                   nat.nat
                   (nat.minus (nat.S b0) a)
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p (nat.plus i a))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f (nat.plus i a)))
                x)
             (logic.eq_ind_r
                nat.nat
                (nat.S (nat.minus b0 a))
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 logic.eq
                   nat.nat
                   (bigop
                      nat.nat
                      x
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (bigop
                      nat.nat
                      b0
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       bool.andb (nat.leb a i) (p i))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i)))
                (logic.eq_ind_r
                   nat.nat
                   (bigop
                      nat.nat
                      (nat.minus b0 a)
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      x
                      (bigop
                         nat.nat
                         b0
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.andb (nat.leb a i) (p i))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))
                   (Hind p f (nat.le_S_S_to_le a b0 Ha))
                   (bigop
                      nat.nat
                      (nat.S (nat.minus b0 a))
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (bigop_Sfalse
                      nat.nat
                      (nat.minus b0 a)
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       p (nat.plus __ a))
                      (nat.S nat.O)
                      nat.times
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f (nat.plus __ a))
                      (logic.eq_ind
                         nat.nat
                         b0
                         (x_1:(cts.Term
                                 cts.diamond
                                 (cts.cast
                                    cts.triangle
                                    cts.sinf
                                    (cts.univ cts.box cts.triangle cts.I)
                                    (cts.univ cts.diamond cts.sinf cts.I)
                                    cts.I
                                    nat.nat)) =>
                          logic.eq bool.bool (p x_1) bool.false)
                         (logic.rewrite_r
                            bool.bool
                            bool.false
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      bool.bool)) =>
                             logic.eq bool.bool __ bool.false)
                            (logic.refl bool.bool bool.false)
                            (p b0)
                            Hcase)
                         (nat.plus (nat.minus b0 a) a)
                         (nat.plus_minus_m_m b0 a (nat.le_S_S_to_le a b0 Ha)))))
                (nat.minus (nat.S b0) a)
                (nat.match_nat_prop
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (nat.le __ b0)
                      (x =>
                       logic.eq nat.nat (nat.minus (nat.S b0) __) (nat.S (nat.minus b0 __))))
                   (auto:(cts.Term cts.star (nat.le nat.O b0)) =>
                    logic.rewrite_l
                      nat.nat
                      (nat.S b0)
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq nat.nat __ (nat.S (nat.minus b0 nat.O)))
                      (logic.rewrite_l
                         nat.nat
                         b0
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          logic.eq nat.nat (nat.S b0) (nat.S __))
                         (logic.refl nat.nat (nat.S b0))
                         (nat.minus b0 nat.O)
                         (nat.minus_n_O b0))
                      (nat.minus (nat.S b0) nat.O)
                      (nat.minus_n_O (nat.S b0)))
                   (nat.sym_eq_minus
                      (nat.S b0)
                      (y:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => nat.nat)))) =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         nat.nat
                         (x =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (nat.le (nat.S x) b0)
                            (x0 =>
                             logic.eq nat.nat (y (nat.S x)) (nat.S (nat.minus b0 (nat.S x))))))
                      (nat.sym_eq_filter_nat_type_S
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                         nat.minus_body
                         b0
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x => nat.nat)))) =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            nat.nat
                            (x =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (nat.le (nat.S x) b0)
                               (x0 =>
                                logic.eq
                                  nat.nat
                                  (y (nat.S x))
                                  (nat.S (nat.minus b0 (nat.S x))))))
                         (a1:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          nat.sym_eq_minus_body_S
                            b0
                            (y:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x => nat.nat)))) =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (nat.le (nat.S a1) b0)
                               (x =>
                                logic.eq
                                  nat.nat
                                  (y (nat.S a1))
                                  (nat.S (nat.minus b0 (nat.S a1)))))
                            (nat.sym_eq_match_nat_type_S
                               nat.nat
                               (nat.S b0)
                               (q:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                nat.minus b0 q)
                               a1
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (nat.le (nat.S a1) b0)
                                  (x =>
                                   logic.eq nat.nat y (nat.S (nat.minus b0 (nat.S a1)))))
                               (lta1:(cts.Term cts.star (nat.le (nat.S a1) b0)) =>
                                logic.eq_ind_r
                                  nat.nat
                                  (nat.pred (nat.minus b0 a1))
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   logic.eq nat.nat (nat.minus b0 a1) (nat.S x))
                                  (logic.eq_ind_r
                                     nat.nat
                                     (nat.minus b0 a1)
                                     (x:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      logic.eq nat.nat (nat.minus b0 a1) x)
                                     (logic.refl nat.nat (nat.minus b0 a1))
                                     (nat.S (nat.pred (nat.minus b0 a1)))
                                     (nat.S_pred
                                        (nat.minus b0 a1)
                                        (nat.lt_plus_to_minus_r
                                           nat.O
                                           a1
                                           b0
                                           (nat.sym_eq_plus
                                              nat.O
                                              (y:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       (cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x => nat.nat)))) =>
                                               nat.le (nat.S (y a1)) b0)
                                              (nat.sym_eq_filter_nat_type_O
                                                 (cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    nat.nat
                                                    (x => nat.nat))
                                                 nat.plus_body
                                                 (y:(cts.Term
                                                       cts.diamond
                                                       (cts.cast
                                                          cts.triangle
                                                          cts.sinf
                                                          (cts.univ
                                                             cts.box
                                                             cts.triangle
                                                             cts.I)
                                                          (cts.univ
                                                             cts.diamond
                                                             cts.sinf
                                                             cts.I)
                                                          cts.I
                                                          (cts.prod
                                                             cts.box
                                                             cts.box
                                                             cts.box
                                                             cts.I
                                                             nat.nat
                                                             (x => nat.nat)))) =>
                                                  nat.le (nat.S (y a1)) b0)
                                                 (nat.sym_eq_plus_body_O
                                                    (y:(cts.Term
                                                          cts.diamond
                                                          (cts.cast
                                                             cts.triangle
                                                             cts.sinf
                                                             (cts.univ
                                                                cts.box
                                                                cts.triangle
                                                                cts.I)
                                                             (cts.univ
                                                                cts.diamond
                                                                cts.sinf
                                                                cts.I)
                                                             cts.I
                                                             (cts.prod
                                                                cts.box
                                                                cts.box
                                                                cts.box
                                                                cts.I
                                                                nat.nat
                                                                (x => nat.nat)))) =>
                                                     nat.le (nat.S (y a1)) b0)
                                                    lta1))))))
                                  (nat.minus b0 (nat.S a1))
                                  (nat.eq_minus_S_pred b0 a1))))))
                   a
                   (nat.le_S_S_to_le a b0 Ha)))
             (bigop
                nat.nat
                (nat.S b0)
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (nat.leb a i) (p i))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i))
             (bigop_Sfalse
                nat.nat
                b0
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 bool.andb (nat.leb a __) (p __))
                (nat.S nat.O)
                nat.times
                f
                (logic.eq_ind_r
                   bool.bool
                   bool.false
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            bool.bool)) =>
                    logic.eq bool.bool (bool.andb (nat.leb a b0) x) bool.false)
                   (bool.match_bool_prop
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                bool.bool)) =>
                       logic.eq bool.bool (bool.andb __ bool.false) bool.false)
                      (bool.eq_match_bool_type_true
                         bool.bool
                         bool.false
                         bool.false
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  bool.bool)) =>
                          logic.eq
                            bool.bool
                            (bool.match_bool_type bool.bool bool.false bool.false bool.true)
                            y)
                         (logic.refl bool.bool (bool.andb bool.true bool.false)))
                      (bool.eq_match_bool_type_false
                         bool.bool
                         bool.false
                         bool.false
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  bool.bool)) =>
                          logic.eq
                            bool.bool
                            (bool.match_bool_type bool.bool bool.false bool.false bool.false)
                            y)
                         (logic.refl bool.bool (bool.andb bool.false bool.false)))
                      (nat.leb a b0))
                   (p b0)
                   Hcase)))
          (bool.true_or_false (p b0)))
       (Ha:(cts.Term cts.star (logic.eq nat.nat a (nat.S b0))) =>
        logic.eq_ind
          nat.nat
          a
          (x_1:(cts.Term
                  cts.diamond
                  (cts.cast
                     cts.triangle
                     cts.sinf
                     (cts.univ cts.box cts.triangle cts.I)
                     (cts.univ cts.diamond cts.sinf cts.I)
                     cts.I
                     nat.nat)) =>
           logic.eq
             nat.nat
             (bigop
                nat.nat
                (nat.minus x_1 a)
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p (nat.plus i a))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f (nat.plus i a)))
             (bigop
                nat.nat
                x_1
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (nat.leb a i) (p i))
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f i)))
          (logic.eq_ind
             nat.nat
             nat.O
             (x_1:(cts.Term
                     cts.diamond
                     (cts.cast
                        cts.triangle
                        cts.sinf
                        (cts.univ cts.box cts.triangle cts.I)
                        (cts.univ cts.diamond cts.sinf cts.I)
                        cts.I
                        nat.nat)) =>
              logic.eq
                nat.nat
                (bigop
                   nat.nat
                   x_1
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    p (nat.plus i a))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f (nat.plus i a)))
                (bigop
                   nat.nat
                   a
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (nat.leb a i) (p i))
                   (nat.S nat.O)
                   nat.times
                   (i:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f i)))
             (sym_eq_bigop_O
                nat.nat
                (y:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x => bool.bool))
                            (x =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x0 =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x1 =>
                                      cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x2 => nat.nat)))
                                  (x1 =>
                                   cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x2 => nat.nat))
                                     (x2 => nat.nat))))))) =>
                 logic.eq
                   nat.nat
                   (y
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p (nat.plus i a))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f (nat.plus i a)))
                   (bigop
                      nat.nat
                      a
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       bool.andb (nat.leb a i) (p i))
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f i)))
                (sym_eq_bigop_body_O
                   nat.nat
                   (y:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => bool.bool))
                               (x =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x0 =>
                                   cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x1 =>
                                         cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           nat.nat
                                           (x2 => nat.nat)))
                                     (x1 =>
                                      cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        (cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           nat.nat
                                           (x2 => nat.nat))
                                        (x2 => nat.nat))))))) =>
                    logic.eq
                      nat.nat
                      (y
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          p (nat.plus i a))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f (nat.plus i a)))
                      (bigop
                         nat.nat
                         a
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.andb (nat.leb a i) (p i))
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i)))
                   (logic.eq_ind
                      nat.nat
                      (bigop
                         nat.nat
                         a
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.false)
                         (nat.S nat.O)
                         nat.times
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f i))
                      (x_1:(cts.Term
                              cts.diamond
                              (cts.cast
                                 cts.triangle
                                 cts.sinf
                                 (cts.univ cts.box cts.triangle cts.I)
                                 (cts.univ cts.diamond cts.sinf cts.I)
                                 cts.I
                                 nat.nat)) =>
                       logic.eq
                         nat.nat
                         x_1
                         (bigop
                            nat.nat
                            a
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             bool.andb (nat.leb a i) (p i))
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f i)))
                      (same_bigop
                         nat.nat
                         a
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          bool.false)
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          bool.andb (nat.leb a __) (p __))
                         (nat.S nat.O)
                         nat.times
                         f
                         f
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          ltia:(cts.Term cts.star (nat.lt i a)) =>
                          logic.eq_ind_r
                            bool.bool
                            bool.false
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     bool.bool)) =>
                             logic.eq bool.bool bool.false (bool.andb x (p i)))
                            (bool.sym_eq_match_bool_type_false
                               bool.bool
                               (p i)
                               bool.false
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        bool.bool)) =>
                                logic.eq bool.bool bool.false y)
                               (logic.refl bool.bool bool.false))
                            (nat.leb a i)
                            (nat.not_le_to_leb_false a i (nat.lt_to_not_le i a ltia)))
                         (i:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          auto:(cts.Term cts.star (nat.lt i a)) =>
                          auto':(cts.Term
                                   cts.star
                                   (logic.eq bool.bool bool.false bool.true)) =>
                          logic.refl nat.nat (f i)))
                      (nat.S nat.O)
                      (bigop_false nat.nat a (nat.S nat.O) nat.times f))))
             (nat.minus a a)
             (nat.minus_n_n a))
          (nat.S b0)
          Ha)
       (nat.le_to_or_lt_eq a (nat.S b0) lea))
    b.

ACop :
  cts.Term
    cts.diamond
    (cts.prod
       cts.triangle
       cts.diamond
       cts.diamond
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I x (x0 => cts.univ cts.star cts.box cts.I)))).

mk_ACop :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                x
                (x1 => cts.prod cts.box cts.box cts.box cts.I x (x2 => x)))
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.star cts.star cts.I x (x2 => logic.eq x (x1 x0 x2) x2))
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.star cts.star cts.I x (x3 => logic.eq x (x1 x3 x0) x3))
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         x
                         (x4 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            x
                            (x5 =>
                             cts.prod
                               cts.box
                               cts.star
                               cts.star
                               cts.I
                               x
                               (x6 => logic.eq x (x1 x4 (x1 x5 x6)) (x1 (x1 x4 x5) x6)))))
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            x
                            (x5 =>
                             cts.prod
                               cts.box
                               cts.star
                               cts.star
                               cts.I
                               x
                               (x6 => logic.eq x (x1 x5 x6) (x1 x6 x5))))
                         (x5 => ACop x x0)))))))).

def timesAC :
  cts.Term cts.star (ACop nat.nat (nat.S nat.O))
  :=
  mk_ACop
    nat.nat
    (nat.S nat.O)
    nat.times
    (a:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     nat.sym_eq_times
       (nat.S nat.O)
       (y:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
        logic.eq nat.nat (y a) a)
       (nat.sym_eq_filter_nat_type_S
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
          nat.times_body
          nat.O
          (y:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
           logic.eq nat.nat (y a) a)
          (nat.sym_eq_times_body_S
             nat.O
             (y:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
              logic.eq nat.nat (y a) a)
             (nat.sym_eq_times
                nat.O
                (y:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
                 logic.eq nat.nat (nat.plus a (y a)) a)
                (nat.sym_eq_filter_nat_type_O
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                   nat.times_body
                   (y:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
                    logic.eq nat.nat (nat.plus a (y a)) a)
                   (nat.sym_eq_times_body_O
                      (y:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => nat.nat)))) =>
                       logic.eq nat.nat (nat.plus a (y a)) a)
                      (logic.sym_eq nat.nat a (nat.plus a nat.O) (nat.plus_n_O a))))))))
    (n:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     logic.sym_eq nat.nat n (nat.times n (nat.S nat.O)) (nat.times_n_1 n))
    (a:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     b:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     c:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     logic.sym_eq
       nat.nat
       (nat.times (nat.times a b) c)
       (nat.times a (nat.times b c))
       (nat.associative_times a b c))
    nat.commutative_times.

def bigop_diff :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt x1 x2)
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq bool.bool (x x1) bool.true)
                      (x4 =>
                       logic.eq
                         nat.nat
                         (bigop
                            nat.nat
                            x2
                            (x5:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             x x5)
                            (nat.S nat.O)
                            nat.times
                            (x5:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             x0 x5))
                         (nat.times
                            (x0 x1)
                            (bigop
                               nat.nat
                               x2
                               (x5:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                bool.andb (bool.notb (nat.eqb x1 x5)) (x x5))
                               (nat.S nat.O)
                               nat.times
                               (x5:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                x0 x5))))))))))
  :=
  p:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  nat.nat_ind
    (_x_365:(cts.Term
               cts.diamond
               (cts.cast
                  cts.triangle
                  cts.sinf
                  (cts.univ cts.box cts.triangle cts.I)
                  (cts.univ cts.diamond cts.sinf cts.I)
                  cts.I
                  nat.nat)) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (nat.lt i _x_365)
       (x =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p i) bool.true)
          (x0 =>
           logic.eq
             nat.nat
             (bigop
                nat.nat
                _x_365
                (x1:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 p x1)
                (nat.S nat.O)
                nat.times
                (x1:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 f x1))
             (nat.times
                (f i)
                (bigop
                   nat.nat
                   _x_365
                   (x1:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i x1)) (p x1))
                   (nat.S nat.O)
                   nat.times
                   (x1:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f x1))))))
    (ltO:(cts.Term cts.star (nat.lt i nat.O)) =>
     connectives.falsity
       (cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p i) bool.true)
          (x =>
           logic.eq
             nat.nat
             (bigop
                nat.nat
                nat.O
                (x0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 p x0)
                (nat.S nat.O)
                nat.times
                (x0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 f x0))
             (nat.times
                (f i)
                (bigop
                   nat.nat
                   nat.O
                   (x0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i x0)) (p x0))
                   (nat.S nat.O)
                   nat.times
                   (x0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f x0)))))
       (logic.absurd (nat.le (nat.S i) nat.O) ltO (nat.not_le_Sn_O i)))
    (n0:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
     Hind:(cts.Term
             cts.star
             (cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt i n0)
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (logic.eq bool.bool (p i) bool.true)
                   (x0 =>
                    logic.eq
                      nat.nat
                      (bigop
                         nat.nat
                         n0
                         (x1:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          p x1)
                         (nat.S nat.O)
                         nat.times
                         (x1:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          f x1))
                      (nat.times
                         (f i)
                         (bigop
                            nat.nat
                            n0
                            (x1:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             bool.andb (bool.notb (nat.eqb i x1)) (p x1))
                            (nat.S nat.O)
                            nat.times
                            (x1:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f x1))))))) =>
     lein:(cts.Term cts.star (nat.lt i (nat.S n0))) =>
     pi:(cts.Term cts.star (logic.eq bool.bool (p i) bool.true)) =>
     connectives.match_Or_prop
       (nat.lt i n0)
       (logic.eq nat.nat i n0)
       (logic.eq
          nat.nat
          (bigop
             nat.nat
             (nat.S n0)
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p x)
             (nat.S nat.O)
             nat.times
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f x))
          (nat.times
             (f i)
             (bigop
                nat.nat
                (nat.S n0)
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 bool.andb (bool.notb (nat.eqb i x)) (p x))
                (nat.S nat.O)
                nat.times
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f x))))
       (Hi:(cts.Term cts.star (nat.lt i n0)) =>
        connectives.match_Or_prop
          (logic.eq bool.bool (p n0) bool.true)
          (logic.eq bool.bool (p n0) bool.false)
          (logic.eq
             nat.nat
             (bigop
                nat.nat
                (nat.S n0)
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p x)
                (nat.S nat.O)
                nat.times
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f x))
             (nat.times
                (f i)
                (bigop
                   nat.nat
                   (nat.S n0)
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i x)) (p x))
                   (nat.S nat.O)
                   nat.times
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f x))))
          (pn:(cts.Term cts.star (logic.eq bool.bool (p n0) bool.true)) =>
           logic.eq_ind_r
             nat.nat
             (nat.times
                (f n0)
                (bigop
                   nat.nat
                   n0
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    p i0)
                   (nat.S nat.O)
                   nat.times
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f i0)))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                x
                (nat.times
                   (f i)
                   (bigop
                      nat.nat
                      (nat.S n0)
                      (x0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i x0)) (p x0))
                      (nat.S nat.O)
                      nat.times
                      (x0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f x0))))
             (logic.eq_ind_r
                nat.nat
                (nat.times
                   (f n0)
                   (bigop
                      nat.nat
                      n0
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                      (nat.S nat.O)
                      nat.times
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f i0)))
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 logic.eq
                   nat.nat
                   (nat.times
                      (f n0)
                      (bigop
                         nat.nat
                         n0
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          p i0)
                         (nat.S nat.O)
                         nat.times
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          f i0)))
                   (nat.times (f i) x))
                (logic.eq_ind_r
                   nat.nat
                   (nat.times
                      (nat.times (f i) (f n0))
                      (bigop
                         nat.nat
                         n0
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          bool.match_bool_type
                            bool.bool
                            (p i0)
                            bool.false
                            (bool.match_bool_type
                               bool.bool
                               bool.false
                               bool.true
                               (nat.eqb i i0)))
                         (nat.S nat.O)
                         nat.times
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          f i0)))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      (nat.times
                         (f n0)
                         (bigop
                            nat.nat
                            n0
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f i0)))
                      x)
                   (logic.eq_ind_r
                      nat.nat
                      (nat.times (f n0) (f i))
                      (x:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       logic.eq
                         nat.nat
                         (nat.times
                            (f n0)
                            (bigop
                               nat.nat
                               n0
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                p i0)
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f i0)))
                         (nat.times
                            x
                            (bigop
                               nat.nat
                               n0
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                bool.match_bool_type
                                  bool.bool
                                  (p i0)
                                  bool.false
                                  (bool.match_bool_type
                                     bool.bool
                                     bool.false
                                     bool.true
                                     (nat.eqb i i0)))
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f i0))))
                      (logic.eq_ind
                         nat.nat
                         (nat.times
                            (f n0)
                            (nat.times
                               (f i)
                               (bigop
                                  nat.nat
                                  n0
                                  (i0:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   bool.match_bool_type
                                     bool.bool
                                     (p i0)
                                     bool.false
                                     (bool.match_bool_type
                                        bool.bool
                                        bool.false
                                        bool.true
                                        (nat.eqb i i0)))
                                  (nat.S nat.O)
                                  nat.times
                                  (i0:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   f i0))))
                         (x_1:(cts.Term
                                 cts.diamond
                                 (cts.cast
                                    cts.triangle
                                    cts.sinf
                                    (cts.univ cts.box cts.triangle cts.I)
                                    (cts.univ cts.diamond cts.sinf cts.I)
                                    cts.I
                                    nat.nat)) =>
                          logic.eq
                            nat.nat
                            (nat.times
                               (f n0)
                               (bigop
                                  nat.nat
                                  n0
                                  (i0:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   p i0)
                                  (nat.S nat.O)
                                  nat.times
                                  (i0:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   f i0)))
                            x_1)
                         (logic.eq_ind_r
                            nat.nat
                            (nat.times
                               (f i)
                               (bigop
                                  nat.nat
                                  n0
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   bool.andb (bool.notb (nat.eqb i x)) (p x))
                                  (nat.S nat.O)
                                  nat.times
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   f x)))
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             logic.eq
                               nat.nat
                               (nat.times (f n0) x)
                               (nat.times
                                  (f n0)
                                  (nat.times
                                     (f i)
                                     (bigop
                                        nat.nat
                                        n0
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         bool.match_bool_type
                                           bool.bool
                                           (p i0)
                                           bool.false
                                           (bool.match_bool_type
                                              bool.bool
                                              bool.false
                                              bool.true
                                              (nat.eqb i i0)))
                                        (nat.S nat.O)
                                        nat.times
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f i0)))))
                            (logic.refl
                               nat.nat
                               (nat.times
                                  (f n0)
                                  (nat.times
                                     (f i)
                                     (bigop
                                        nat.nat
                                        n0
                                        (x:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         bool.andb (bool.notb (nat.eqb i x)) (p x))
                                        (nat.S nat.O)
                                        nat.times
                                        (x:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         f x)))))
                            (bigop
                               nat.nat
                               n0
                               (x:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                p x)
                               (nat.S nat.O)
                               nat.times
                               (x:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                f x))
                            (Hind
                               Hi
                               (logic.rewrite_r
                                  bool.bool
                                  bool.true
                                  (__:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            bool.bool)) =>
                                   logic.eq bool.bool __ bool.true)
                                  (logic.refl bool.bool bool.true)
                                  (p i)
                                  pi)))
                         (nat.times
                            (nat.times (f n0) (f i))
                            (bigop
                               nat.nat
                               n0
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                bool.match_bool_type
                                  bool.bool
                                  (p i0)
                                  bool.false
                                  (bool.match_bool_type
                                     bool.bool
                                     bool.false
                                     bool.true
                                     (nat.eqb i i0)))
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f i0)))
                         (assoc
                            (f n0)
                            (f i)
                            (bigop
                               nat.nat
                               n0
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                bool.match_bool_type
                                  bool.bool
                                  (p i0)
                                  bool.false
                                  (bool.match_bool_type
                                     bool.bool
                                     bool.false
                                     bool.true
                                     (nat.eqb i i0)))
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f i0))))
                      (nat.times (f i) (f n0))
                      (nat.commutative_times (f i) (f n0)))
                   (nat.times
                      (f i)
                      (nat.times
                         (f n0)
                         (bigop
                            nat.nat
                            n0
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             bool.match_bool_type
                               bool.bool
                               (p i0)
                               bool.false
                               (bool.match_bool_type
                                  bool.bool
                                  bool.false
                                  bool.true
                                  (nat.eqb i i0)))
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f i0))))
                   (assoc
                      (f i)
                      (f n0)
                      (bigop
                         nat.nat
                         n0
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          bool.match_bool_type
                            bool.bool
                            (p i0)
                            bool.false
                            (bool.match_bool_type
                               bool.bool
                               bool.false
                               bool.true
                               (nat.eqb i i0)))
                         (nat.S nat.O)
                         nat.times
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          f i0))))
                (bigop
                   nat.nat
                   (nat.S n0)
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                   (nat.S nat.O)
                   nat.times
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f i0))
                (bigop_Strue
                   nat.nat
                   n0
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i __)) (p __))
                   (nat.S nat.O)
                   nat.times
                   f
                   (logic.rewrite_r
                      bool.bool
                      bool.true
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                bool.bool)) =>
                       logic.eq bool.bool (bool.andb (bool.notb (nat.eqb i n0)) __) bool.true)
                      (logic.rewrite_r
                         bool.bool
                         bool.true
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   bool.bool)) =>
                          logic.eq bool.bool __ bool.true)
                         (logic.refl bool.bool bool.true)
                         (bool.andb (bool.notb (nat.eqb i n0)) bool.true)
                         (logic.rewrite_l
                            bool.bool
                            (p n0)
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      bool.bool)) =>
                             logic.eq
                               bool.bool
                               (bool.andb (bool.notb (nat.eqb i n0)) bool.true)
                               __)
                            (logic.rewrite_l
                               bool.bool
                               (p n0)
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         bool.bool)) =>
                                logic.eq
                                  bool.bool
                                  (bool.andb (bool.notb (nat.eqb i n0)) __)
                                  (p n0))
                               (logic.eq_ind_r
                                  bool.bool
                                  bool.false
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           bool.bool)) =>
                                   logic.eq
                                     bool.bool
                                     (bool.andb (bool.notb x) (p n0))
                                     (p n0))
                                  (bool.sym_eq_match_bool_type_false
                                     bool.bool
                                     bool.false
                                     bool.true
                                     (y:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              bool.bool)) =>
                                      logic.eq
                                        bool.bool
                                        (bool.match_bool_type
                                           bool.bool
                                           (p n0)
                                           bool.false
                                           y)
                                        (p n0))
                                     (bool.eq_match_bool_type_true
                                        bool.bool
                                        (p n0)
                                        bool.false
                                        (y:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 bool.bool)) =>
                                         logic.eq
                                           bool.bool
                                           (bool.match_bool_type
                                              bool.bool
                                              (p n0)
                                              bool.false
                                              bool.true)
                                           y)
                                        (bool.eq_match_bool_type_false
                                           bool.bool
                                           bool.false
                                           bool.true
                                           (y:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    bool.bool)) =>
                                            logic.eq
                                              bool.bool
                                              (bool.match_bool_type
                                                 bool.bool
                                                 (p n0)
                                                 bool.false
                                                 bool.true)
                                              (bool.match_bool_type
                                                 bool.bool
                                                 (p n0)
                                                 bool.false
                                                 y))
                                           (bool.eq_match_bool_type_false
                                              bool.bool
                                              bool.false
                                              bool.true
                                              (y:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       bool.bool)) =>
                                               logic.eq
                                                 bool.bool
                                                 (bool.match_bool_type
                                                    bool.bool
                                                    (p n0)
                                                    bool.false
                                                    y)
                                                 (bool.match_bool_type
                                                    bool.bool
                                                    (p n0)
                                                    bool.false
                                                    (bool.match_bool_type
                                                       bool.bool
                                                       bool.false
                                                       bool.true
                                                       bool.false)))
                                              (logic.refl
                                                 bool.bool
                                                 (bool.andb
                                                    (bool.notb bool.false)
                                                    (p n0)))))))
                                  (nat.eqb i n0)
                                  (nat.not_eq_to_eqb_false i n0 (nat.lt_to_not_eq i n0 Hi)))
                               bool.true
                               pn)
                            bool.true
                            pn))
                      (p n0)
                      pn)))
             (bigop
                nat.nat
                (nat.S n0)
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 p i0)
                (nat.S nat.O)
                nat.times
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 f i0))
             (bigop_Strue
                nat.nat
                n0
                p
                (nat.S nat.O)
                nat.times
                f
                (logic.rewrite_r
                   bool.bool
                   bool.true
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             bool.bool)) =>
                    logic.eq bool.bool __ bool.true)
                   (logic.refl bool.bool bool.true)
                   (p n0)
                   pn)))
          (pn:(cts.Term cts.star (logic.eq bool.bool (p n0) bool.false)) =>
           logic.eq_ind_r
             nat.nat
             (bigop
                nat.nat
                n0
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 p i0)
                (nat.S nat.O)
                nat.times
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 f i0))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                x
                (nat.times
                   (f i)
                   (bigop
                      nat.nat
                      (nat.S n0)
                      (x0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i x0)) (p x0))
                      (nat.S nat.O)
                      nat.times
                      (x0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f x0))))
             (logic.eq_ind_r
                nat.nat
                (bigop
                   nat.nat
                   n0
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                   (nat.S nat.O)
                   nat.times
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f i0))
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 logic.eq
                   nat.nat
                   (bigop
                      nat.nat
                      n0
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       p i0)
                      (nat.S nat.O)
                      nat.times
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f i0))
                   (nat.times (f i) x))
                (logic.eq_ind_r
                   nat.nat
                   (nat.times
                      (f i)
                      (bigop
                         nat.nat
                         n0
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          bool.andb (bool.notb (nat.eqb i x)) (p x))
                         (nat.S nat.O)
                         nat.times
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          f x)))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      x
                      (nat.times
                         (f i)
                         (bigop
                            nat.nat
                            n0
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f i0))))
                   (logic.refl
                      nat.nat
                      (nat.times
                         (f i)
                         (bigop
                            nat.nat
                            n0
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             bool.andb (bool.notb (nat.eqb i x)) (p x))
                            (nat.S nat.O)
                            nat.times
                            (x:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f x))))
                   (bigop
                      nat.nat
                      n0
                      (x:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p x)
                      (nat.S nat.O)
                      nat.times
                      (x:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f x))
                   (Hind
                      Hi
                      (logic.rewrite_r
                         bool.bool
                         bool.true
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   bool.bool)) =>
                          logic.eq bool.bool __ bool.true)
                         (logic.refl bool.bool bool.true)
                         (p i)
                         pi)))
                (bigop
                   nat.nat
                   (nat.S n0)
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                   (nat.S nat.O)
                   nat.times
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f i0))
                (bigop_Sfalse
                   nat.nat
                   n0
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i __)) (p __))
                   (nat.S nat.O)
                   nat.times
                   f
                   (logic.rewrite_r
                      bool.bool
                      bool.false
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                bool.bool)) =>
                       logic.eq bool.bool (bool.andb (bool.notb (nat.eqb i n0)) __) bool.false)
                      (logic.rewrite_r
                         bool.bool
                         bool.false
                         (__:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   bool.bool)) =>
                          logic.eq bool.bool __ bool.false)
                         (logic.refl bool.bool bool.false)
                         (bool.andb (bool.notb (nat.eqb i n0)) bool.false)
                         (logic.rewrite_l
                            bool.bool
                            (p n0)
                            (__:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      bool.bool)) =>
                             logic.eq
                               bool.bool
                               (bool.andb (bool.notb (nat.eqb i n0)) bool.false)
                               __)
                            (logic.rewrite_l
                               bool.bool
                               (p n0)
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         bool.bool)) =>
                                logic.eq
                                  bool.bool
                                  (bool.andb (bool.notb (nat.eqb i n0)) __)
                                  (p n0))
                               (logic.eq_ind_r
                                  bool.bool
                                  bool.false
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           bool.bool)) =>
                                   logic.eq
                                     bool.bool
                                     (bool.andb (bool.notb x) (p n0))
                                     (p n0))
                                  (bool.sym_eq_match_bool_type_false
                                     bool.bool
                                     bool.false
                                     bool.true
                                     (y:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              bool.bool)) =>
                                      logic.eq
                                        bool.bool
                                        (bool.match_bool_type
                                           bool.bool
                                           (p n0)
                                           bool.false
                                           y)
                                        (p n0))
                                     (bool.eq_match_bool_type_true
                                        bool.bool
                                        (p n0)
                                        bool.false
                                        (y:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 bool.bool)) =>
                                         logic.eq
                                           bool.bool
                                           (bool.match_bool_type
                                              bool.bool
                                              (p n0)
                                              bool.false
                                              bool.true)
                                           y)
                                        (bool.eq_match_bool_type_false
                                           bool.bool
                                           bool.false
                                           bool.true
                                           (y:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    bool.bool)) =>
                                            logic.eq
                                              bool.bool
                                              (bool.match_bool_type
                                                 bool.bool
                                                 (p n0)
                                                 bool.false
                                                 bool.true)
                                              (bool.match_bool_type
                                                 bool.bool
                                                 (p n0)
                                                 bool.false
                                                 y))
                                           (bool.eq_match_bool_type_false
                                              bool.bool
                                              bool.false
                                              bool.true
                                              (y:(cts.Term
                                                    cts.diamond
                                                    (cts.cast
                                                       cts.triangle
                                                       cts.sinf
                                                       (cts.univ
                                                          cts.box
                                                          cts.triangle
                                                          cts.I)
                                                       (cts.univ
                                                          cts.diamond
                                                          cts.sinf
                                                          cts.I)
                                                       cts.I
                                                       bool.bool)) =>
                                               logic.eq
                                                 bool.bool
                                                 (bool.match_bool_type
                                                    bool.bool
                                                    (p n0)
                                                    bool.false
                                                    y)
                                                 (bool.match_bool_type
                                                    bool.bool
                                                    (p n0)
                                                    bool.false
                                                    (bool.match_bool_type
                                                       bool.bool
                                                       bool.false
                                                       bool.true
                                                       bool.false)))
                                              (logic.refl
                                                 bool.bool
                                                 (bool.andb
                                                    (bool.notb bool.false)
                                                    (p n0)))))))
                                  (nat.eqb i n0)
                                  (nat.not_eq_to_eqb_false i n0 (nat.lt_to_not_eq i n0 Hi)))
                               bool.false
                               pn)
                            bool.false
                            pn))
                      (p n0)
                      pn)))
             (bigop
                nat.nat
                (nat.S n0)
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 p i0)
                (nat.S nat.O)
                nat.times
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 f i0))
             (bigop_Sfalse
                nat.nat
                n0
                p
                (nat.S nat.O)
                nat.times
                f
                (logic.rewrite_r
                   bool.bool
                   bool.false
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             bool.bool)) =>
                    logic.eq bool.bool __ bool.false)
                   (logic.refl bool.bool bool.false)
                   (p n0)
                   pn)))
          (bool.true_or_false (p n0)))
       (Hi:(cts.Term cts.star (logic.eq nat.nat i n0)) =>
        logic.eq_ind
          nat.nat
          i
          (x_1:(cts.Term
                  cts.diamond
                  (cts.cast
                     cts.triangle
                     cts.sinf
                     (cts.univ cts.box cts.triangle cts.I)
                     (cts.univ cts.diamond cts.sinf cts.I)
                     cts.I
                     nat.nat)) =>
           logic.eq
             nat.nat
             (bigop
                nat.nat
                (nat.S x_1)
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p x)
                (nat.S nat.O)
                nat.times
                (x:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f x))
             (nat.times
                (f i)
                (bigop
                   nat.nat
                   (nat.S x_1)
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i x)) (p x))
                   (nat.S nat.O)
                   nat.times
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f x))))
          (logic.eq_ind_r
             nat.nat
             (nat.times
                (f i)
                (bigop
                   nat.nat
                   i
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    p i0)
                   (nat.S nat.O)
                   nat.times
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f i0)))
             (x:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              logic.eq
                nat.nat
                x
                (nat.times
                   (f i)
                   (bigop
                      nat.nat
                      (nat.S i)
                      (x0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i x0)) (p x0))
                      (nat.S nat.O)
                      nat.times
                      (x0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f x0))))
             (logic.eq_f
                nat.nat
                nat.nat
                (nat.times (f i))
                (bigop
                   nat.nat
                   i
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    p i0)
                   (nat.S nat.O)
                   nat.times
                   (i0:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    f i0))
                (bigop
                   nat.nat
                   (nat.S i)
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    bool.andb (bool.notb (nat.eqb i x)) (p x))
                   (nat.S nat.O)
                   nat.times
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    f x))
                (logic.eq_ind_r
                   nat.nat
                   (bigop
                      nat.nat
                      i
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                      (nat.S nat.O)
                      nat.times
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f i0))
                   (x:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    logic.eq
                      nat.nat
                      (bigop
                         nat.nat
                         i
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          p i0)
                         (nat.S nat.O)
                         nat.times
                         (i0:(cts.Term
                                cts.diamond
                                (cts.cast
                                   cts.triangle
                                   cts.sinf
                                   (cts.univ cts.box cts.triangle cts.I)
                                   (cts.univ cts.diamond cts.sinf cts.I)
                                   cts.I
                                   nat.nat)) =>
                          f i0))
                      x)
                   (same_bigop
                      nat.nat
                      i
                      p
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i __)) (p __))
                      (nat.S nat.O)
                      nat.times
                      f
                      f
                      (k:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       ltki:(cts.Term cts.star (nat.lt k i)) =>
                       logic.eq_ind_r
                         bool.bool
                         bool.false
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  bool.bool)) =>
                          logic.eq bool.bool (p k) (bool.andb (bool.notb x) (p k)))
                         (bool.sym_eq_match_bool_type_false
                            bool.bool
                            bool.false
                            bool.true
                            (y:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     bool.bool)) =>
                             logic.eq
                               bool.bool
                               (p k)
                               (bool.match_bool_type bool.bool (p k) bool.false y))
                            (bool.sym_eq_match_bool_type_true
                               bool.bool
                               (p k)
                               bool.false
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        bool.bool)) =>
                                logic.eq bool.bool (p k) y)
                               (logic.refl bool.bool (p k))))
                         (nat.eqb i k)
                         (nat.not_eq_to_eqb_false
                            i
                            k
                            (logic.not_to_not
                               (logic.eq nat.nat i k)
                               (nat.le (nat.S i) i)
                               (auto:(cts.Term cts.star (logic.eq nat.nat i k)) =>
                                logic.eq_coerc
                                  (nat.le (nat.S k) i)
                                  (nat.le (nat.S i) i)
                                  ltki
                                  (logic.rewrite_l
                                     nat.nat
                                     i
                                     (__:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      logic.eq
                                        (cts.univ cts.star cts.box cts.I)
                                        (nat.le (nat.S __) i)
                                        (nat.le (nat.S i) i))
                                     (logic.refl
                                        (cts.univ cts.star cts.box cts.I)
                                        (nat.le (nat.S i) i))
                                     k
                                     auto))
                               (nat.not_le_Sn_n i))))
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       auto:(cts.Term cts.star (nat.lt i0 i)) =>
                       auto':(cts.Term cts.star (logic.eq bool.bool (p i0) bool.true)) =>
                       logic.refl nat.nat (f i0)))
                   (bigop
                      nat.nat
                      (nat.S i)
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i i0)) (p i0))
                      (nat.S nat.O)
                      nat.times
                      (i0:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       f i0))
                   (bigop_Sfalse
                      nat.nat
                      i
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       bool.andb (bool.notb (nat.eqb i __)) (p __))
                      (nat.S nat.O)
                      nat.times
                      f
                      (logic.eq_ind_r
                         bool.bool
                         bool.true
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  bool.bool)) =>
                          logic.eq bool.bool (bool.andb (bool.notb x) (p i)) bool.false)
                         (bool.eq_match_bool_type_false
                            bool.bool
                            (p i)
                            bool.false
                            (y:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     bool.bool)) =>
                             logic.eq
                               bool.bool
                               (bool.match_bool_type
                                  bool.bool
                                  (p i)
                                  bool.false
                                  (bool.match_bool_type
                                     bool.bool
                                     bool.false
                                     bool.true
                                     bool.true))
                               y)
                            (bool.eq_match_bool_type_true
                               bool.bool
                               bool.false
                               bool.true
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        bool.bool)) =>
                                logic.eq
                                  bool.bool
                                  (bool.match_bool_type
                                     bool.bool
                                     (p i)
                                     bool.false
                                     (bool.match_bool_type
                                        bool.bool
                                        bool.false
                                        bool.true
                                        bool.true))
                                  (bool.match_bool_type bool.bool (p i) bool.false y))
                               (logic.refl bool.bool (bool.andb (bool.notb bool.true) (p i)))))
                         (nat.eqb i i)
                         (nat.eq_to_eqb_true i i (logic.refl nat.nat i))))))
             (bigop
                nat.nat
                (nat.S i)
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 p i0)
                (nat.S nat.O)
                nat.times
                (i0:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 f i0))
             (bigop_Strue
                nat.nat
                i
                p
                (nat.S nat.O)
                nat.times
                f
                (logic.rewrite_r
                   bool.bool
                   bool.true
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             bool.bool)) =>
                    logic.eq bool.bool __ bool.true)
                   (logic.refl bool.bool bool.true)
                   (p i)
                   pi)))
          n0
          Hi)
       (nat.le_to_or_lt_eq i n0 (nat.le_S_S_to_le i n0 lein)))
    n.

def sub_hk :
  cts.Term
    cts.diamond
    (cts.cast
       cts.triangle
       cts.sinf
       (cts.univ cts.box cts.triangle cts.I)
       (cts.univ cts.diamond cts.sinf cts.I)
       cts.I
       (cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
          (x =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                nat.nat
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   nat.nat
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => bool.bool))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => bool.bool))
                         (x4 =>
                          cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x5 => nat.nat))
                            (x5 =>
                             cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x6 => nat.nat))
                               (x6 => cts.univ cts.star cts.box cts.I))))))))))
  :=
  h:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  cts.prod
    cts.box
    cts.star
    cts.star
    cts.I
    nat.nat
    (x =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (nat.lt x n1)
       (x0 =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p1 x) bool.true)
          (x1 =>
           connectives.And
             (connectives.And (nat.lt (h x) n2) (logic.eq bool.bool (p2 (h x)) bool.true))
             (logic.eq nat.nat (k (h x)) x)))).

def iso :
  cts.Term
    cts.diamond
    (cts.cast
       cts.triangle
       cts.sinf
       (cts.univ cts.box cts.triangle cts.I)
       (cts.univ cts.diamond cts.sinf cts.I)
       cts.I
       (cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          nat.nat
          (x =>
           cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x0 =>
              cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => bool.bool))
                   (x2 =>
                    cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => nat.nat))
                      (x3 =>
                       cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => nat.nat))
                         (x4 => cts.univ cts.star cts.box cts.I))))))))
  :=
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  connectives.ex
    (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
    (h:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
     connectives.ex
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (k:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
        connectives.And
          (connectives.And
             (cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt x n1)
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq bool.bool (p1 x) bool.true)
                      (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
             (sub_hk h k n1 n2 p1 p2 f1 f2))
          (sub_hk k h n2 n1 p2 p1 f2 f1))).

def sub_hkO :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => bool.bool))
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => bool.bool))
                      (x4 =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x5 => nat.nat))
                         (x5 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x6 => nat.nat))
                            (x6 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (logic.eq nat.nat x1 nat.O)
                               (x7 => sub_hk x x0 x1 x2 x3 x4 x5 x6))))))))))
  :=
  h:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  up0:(cts.Term cts.star (logic.eq nat.nat n1 nat.O)) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lti:(cts.Term cts.star (nat.lt i n1)) =>
  logic.eq_ind_r
    nat.nat
    nat.O
    (x:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             nat.nat)) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (logic.eq bool.bool (p1 i) bool.true)
       (x0 =>
        connectives.And
          (connectives.And (nat.lt (h i) n2) (logic.eq bool.bool (p2 (h i)) bool.true))
          (logic.eq nat.nat (k (h i)) i)))
    (connectives.falsity
       (cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq bool.bool (p1 i) bool.true)
          (x =>
           connectives.And
             (connectives.And (nat.lt (h i) n2) (logic.eq bool.bool (p2 (h i)) bool.true))
             (logic.eq nat.nat (k (h i)) i)))
       (logic.absurd
          (nat.le (nat.S i) nat.O)
          (logic.eq_coerc
             (nat.le (nat.S i) n1)
             (nat.le (nat.S i) nat.O)
             lti
             (logic.rewrite_r
                nat.nat
                nat.O
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 logic.eq
                   (cts.univ cts.star cts.box cts.I)
                   (nat.le (nat.S i) __)
                   (nat.le (nat.S i) nat.O))
                (logic.refl (cts.univ cts.star cts.box cts.I) (nat.le (nat.S i) nat.O))
                n1
                up0))
          (nat.not_le_Sn_O i)))
    n1
    up0.

def sub0_to_false :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => bool.bool))
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => bool.bool))
                      (x4 =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x5 => nat.nat))
                         (x5 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x6 => nat.nat))
                            (x6 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (logic.eq nat.nat x1 nat.O)
                               (x7 =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (sub_hk x x0 x2 x1 x4 x3 x6 x5)
                                  (x8 =>
                                   cts.prod
                                     cts.box
                                     cts.star
                                     cts.star
                                     cts.I
                                     nat.nat
                                     (x9 =>
                                      cts.prod
                                        cts.star
                                        cts.star
                                        cts.star
                                        cts.I
                                        (nat.lt x9 x2)
                                        (x10 => logic.eq bool.bool (x4 x9) bool.false)))))))))))))
  :=
  h:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  up0:(cts.Term cts.star (logic.eq nat.nat n1 nat.O)) =>
  sub:(cts.Term cts.star (sub_hk h k n2 n1 p2 p1 f2 f1)) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lti:(cts.Term cts.star (nat.lt i n2)) =>
  connectives.match_Or_prop
    (logic.eq bool.bool (p2 i) bool.true)
    (logic.eq bool.bool (p2 i) bool.false)
    (logic.eq bool.bool (p2 i) bool.false)
    (ptrue:(cts.Term cts.star (logic.eq bool.bool (p2 i) bool.true)) =>
     connectives.match_And_prop
       (connectives.And (nat.lt (h i) n1) (logic.eq bool.bool (p1 (h i)) bool.true))
       (logic.eq nat.nat (k (h i)) i)
       (logic.eq bool.bool (p2 i) bool.false)
       (_clearme:(cts.Term
                    cts.star
                    (connectives.And (nat.lt (h i) n1) (logic.eq bool.bool (p1 (h i)) bool.true))) =>
        connectives.match_And_prop
          (nat.lt (h i) n1)
          (logic.eq bool.bool (p1 (h i)) bool.true)
          (cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (logic.eq nat.nat (k (h i)) i)
             (x => logic.eq bool.bool (p2 i) bool.false))
          (hi:(cts.Term cts.star (nat.lt (h i) n1)) =>
           connectives.falsity
             (cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (logic.eq bool.bool (p1 (h i)) bool.true)
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (logic.eq nat.nat (k (h i)) i)
                   (x0 => logic.eq bool.bool (p2 i) bool.false)))
             (logic.absurd
                (nat.le (nat.S (h i)) nat.O)
                (logic.eq_coerc
                   (nat.le (nat.S (h i)) n1)
                   (nat.le (nat.S (h i)) nat.O)
                   hi
                   (logic.rewrite_r
                      nat.nat
                      nat.O
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq
                         (cts.univ cts.star cts.box cts.I)
                         (nat.le (nat.S (h i)) __)
                         (nat.le (nat.S (h i)) nat.O))
                      (logic.refl
                         (cts.univ cts.star cts.box cts.I)
                         (nat.le (nat.S (h i)) nat.O))
                      n1
                      up0))
                (nat.not_le_Sn_O (h i))))
          _clearme)
       (sub i lti ptrue))
    (auto:(cts.Term cts.star (logic.eq bool.bool (p2 i) bool.false)) =>
     logic.rewrite_r
       bool.bool
       bool.false
       (__:(cts.Term
              cts.diamond
              (cts.cast
                 cts.triangle
                 cts.sinf
                 (cts.univ cts.box cts.triangle cts.I)
                 (cts.univ cts.diamond cts.sinf cts.I)
                 cts.I
                 bool.bool)) =>
        logic.eq bool.bool __ bool.false)
       (logic.refl bool.bool bool.false)
       (p2 i)
       auto)
    (bool.true_or_false (p2 i)).

def sub_lt :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => bool.bool))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.le x1 x2)
                   (x3 =>
                    sub_hk
                      (x4:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       x4)
                      (x4:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       x4)
                      x1
                      x2
                      x0
                      x0
                      x
                      x))))))
  :=
  e:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  n:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lenm:(cts.Term cts.star (nat.le n m)) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lti:(cts.Term cts.star (nat.lt i n)) =>
  fi:(cts.Term cts.star (logic.eq bool.bool (f i) bool.true)) =>
  connectives.conj
    (connectives.And (nat.lt i m) (logic.eq bool.bool (f i) bool.true))
    (logic.eq nat.nat i i)
    (connectives.conj
       (nat.lt i m)
       (logic.eq bool.bool (f i) bool.true)
       (nat.lt_to_le_to_lt i n m lti lenm)
       (logic.rewrite_r
          bool.bool
          bool.true
          (__:(cts.Term
                 cts.diamond
                 (cts.cast
                    cts.triangle
                    cts.sinf
                    (cts.univ cts.box cts.triangle cts.I)
                    (cts.univ cts.diamond cts.sinf cts.I)
                    cts.I
                    bool.bool)) =>
           logic.eq bool.bool __ bool.true)
          (logic.refl bool.bool bool.true)
          (f i)
          fi))
    (logic.refl nat.nat i).

def transitive_sub :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => nat.nat))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => nat.nat))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      nat.nat
                      (x4 =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         nat.nat
                         (x5 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x6 => bool.bool))
                            (x6 =>
                             cts.prod
                               cts.box
                               cts.star
                               cts.star
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x7 => bool.bool))
                               (x7 =>
                                cts.prod
                                  cts.box
                                  cts.star
                                  cts.star
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x8 => bool.bool))
                                  (x8 =>
                                   cts.prod
                                     cts.box
                                     cts.star
                                     cts.star
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x9 => nat.nat))
                                     (x9 =>
                                      cts.prod
                                        cts.box
                                        cts.star
                                        cts.star
                                        cts.I
                                        (cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           nat.nat
                                           (x10 => nat.nat))
                                        (x10 =>
                                         cts.prod
                                           cts.box
                                           cts.star
                                           cts.star
                                           cts.I
                                           (cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              nat.nat
                                              (x11 => nat.nat))
                                           (x11 =>
                                            cts.prod
                                              cts.star
                                              cts.star
                                              cts.star
                                              cts.I
                                              (sub_hk x x0 x3 x4 x6 x7 x9 x10)
                                              (x12 =>
                                               cts.prod
                                                 cts.star
                                                 cts.star
                                                 cts.star
                                                 cts.I
                                                 (sub_hk x1 x2 x4 x5 x7 x8 x10 x11)
                                                 (x13 =>
                                                  sub_hk
                                                    (x14:(cts.Term
                                                            cts.diamond
                                                            (cts.cast
                                                               cts.triangle
                                                               cts.sinf
                                                               (cts.univ
                                                                  cts.box
                                                                  cts.triangle
                                                                  cts.I)
                                                               (cts.univ
                                                                  cts.diamond
                                                                  cts.sinf
                                                                  cts.I)
                                                               cts.I
                                                               nat.nat)) =>
                                                     x1 (x x14))
                                                    (x14:(cts.Term
                                                            cts.diamond
                                                            (cts.cast
                                                               cts.triangle
                                                               cts.sinf
                                                               (cts.univ
                                                                  cts.box
                                                                  cts.triangle
                                                                  cts.I)
                                                               (cts.univ
                                                                  cts.diamond
                                                                  cts.sinf
                                                                  cts.I)
                                                               cts.I
                                                               nat.nat)) =>
                                                     x0 (x2 x14))
                                                    x3
                                                    x5
                                                    x6
                                                    x8
                                                    x9
                                                    x11))))))))))))))))
  :=
  h1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  k1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  h2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  k2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n3:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p3:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f3:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  sub1:(cts.Term cts.star (sub_hk h1 k1 n1 n2 p1 p2 f1 f2)) =>
  sub2:(cts.Term cts.star (sub_hk h2 k2 n2 n3 p2 p3 f2 f3)) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  lti:(cts.Term cts.star (nat.lt i n1)) =>
  fi:(cts.Term cts.star (logic.eq bool.bool (p1 i) bool.true)) =>
  connectives.match_And_prop
    (connectives.And (nat.lt (h1 i) n2) (logic.eq bool.bool (p2 (h1 i)) bool.true))
    (logic.eq nat.nat (k1 (h1 i)) i)
    (connectives.And
       (connectives.And (nat.lt (h2 (h1 i)) n3) (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))
       (logic.eq nat.nat (k1 (k2 (h2 (h1 i)))) i))
    (_clearme:(cts.Term
                 cts.star
                 (connectives.And (nat.lt (h1 i) n2) (logic.eq bool.bool (p2 (h1 i)) bool.true))) =>
     connectives.match_And_prop
       (nat.lt (h1 i) n2)
       (logic.eq bool.bool (p2 (h1 i)) bool.true)
       (cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (logic.eq nat.nat (k1 (h1 i)) i)
          (x =>
           connectives.And
             (connectives.And
                (nat.lt (h2 (h1 i)) n3)
                (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))
             (logic.eq nat.nat (k1 (k2 (h2 (h1 i)))) i)))
       (lth1i:(cts.Term cts.star (nat.lt (h1 i) n2)) =>
        fh1i:(cts.Term cts.star (logic.eq bool.bool (p2 (h1 i)) bool.true)) =>
        ei:(cts.Term cts.star (logic.eq nat.nat (k1 (h1 i)) i)) =>
        connectives.match_And_prop
          (connectives.And (nat.lt (h2 (h1 i)) n3) (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))
          (logic.eq nat.nat (k2 (h2 (h1 i))) (h1 i))
          (connectives.And
             (connectives.And
                (nat.lt (h2 (h1 i)) n3)
                (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))
             (logic.eq nat.nat (k1 (k2 (h2 (h1 i)))) i))
          (_clearme0:(cts.Term
                        cts.star
                        (connectives.And
                           (nat.lt (h2 (h1 i)) n3)
                           (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))) =>
           connectives.match_And_prop
             (nat.lt (h2 (h1 i)) n3)
             (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true)
             (cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (logic.eq nat.nat (k2 (h2 (h1 i))) (h1 i))
                (x =>
                 connectives.And
                   (connectives.And
                      (nat.lt (h2 (h1 i)) n3)
                      (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))
                   (logic.eq nat.nat (k1 (k2 (h2 (h1 i)))) i)))
             (H1:(cts.Term cts.star (nat.lt (h2 (h1 i)) n3)) =>
              H2:(cts.Term cts.star (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true)) =>
              H3:(cts.Term cts.star (logic.eq nat.nat (k2 (h2 (h1 i))) (h1 i))) =>
              connectives.conj
                (connectives.And
                   (nat.lt (h2 (h1 i)) n3)
                   (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true))
                (logic.eq nat.nat (k1 (k2 (h2 (h1 i)))) i)
                (connectives.conj
                   (nat.lt (h2 (h1 i)) n3)
                   (logic.eq bool.bool (p3 (h2 (h1 i))) bool.true)
                   H1
                   (logic.rewrite_r
                      bool.bool
                      bool.true
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                bool.bool)) =>
                       logic.eq bool.bool __ bool.true)
                      (logic.refl bool.bool bool.true)
                      (p3 (h2 (h1 i)))
                      H2))
                (logic.rewrite_r
                   nat.nat
                   (h1 i)
                   (__:(cts.Term
                          cts.diamond
                          (cts.cast
                             cts.triangle
                             cts.sinf
                             (cts.univ cts.box cts.triangle cts.I)
                             (cts.univ cts.diamond cts.sinf cts.I)
                             cts.I
                             nat.nat)) =>
                    logic.eq nat.nat (k1 __) i)
                   (logic.rewrite_r
                      nat.nat
                      i
                      (__:(cts.Term
                             cts.diamond
                             (cts.cast
                                cts.triangle
                                cts.sinf
                                (cts.univ cts.box cts.triangle cts.I)
                                (cts.univ cts.diamond cts.sinf cts.I)
                                cts.I
                                nat.nat)) =>
                       logic.eq nat.nat __ i)
                      (logic.refl nat.nat i)
                      (k1 (h1 i))
                      ei)
                   (k2 (h2 (h1 i)))
                   H3))
             _clearme0)
          (sub2 (h1 i) lth1i fh1i))
       _clearme)
    (sub1 i lti fi).

def let_clause_10471 :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => bool.bool))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => nat.nat))
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => nat.nat))
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (iso x x0 x1 x2 x3 x4)
                         (x5 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x6 => nat.nat))
                            (x6 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (connectives.ex
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x7 => nat.nat))
                                  (k:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           (cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              nat.nat
                                              (x7 => nat.nat)))) =>
                                   connectives.And
                                     (connectives.And
                                        (cts.prod
                                           cts.box
                                           cts.star
                                           cts.star
                                           cts.I
                                           nat.nat
                                           (x7 =>
                                            cts.prod
                                              cts.star
                                              cts.star
                                              cts.star
                                              cts.I
                                              (nat.lt x7 x)
                                              (x8 =>
                                               cts.prod
                                                 cts.star
                                                 cts.star
                                                 cts.star
                                                 cts.I
                                                 (logic.eq bool.bool (x1 x7) bool.true)
                                                 (x9 =>
                                                  logic.eq
                                                    nat.nat
                                                    (x3 x7)
                                                    (x4 (x6 x7))))))
                                        (sub_hk x6 k x x0 x1 x2 x3 x4))
                                     (sub_hk k x6 x0 x x2 x1 x4 x3)))
                               (x7 =>
                                cts.prod
                                  cts.box
                                  cts.star
                                  cts.star
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x8 => nat.nat))
                                  (x8 =>
                                   cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (connectives.And
                                        (connectives.And
                                           (cts.prod
                                              cts.box
                                              cts.star
                                              cts.star
                                              cts.I
                                              nat.nat
                                              (x9 =>
                                               cts.prod
                                                 cts.star
                                                 cts.star
                                                 cts.star
                                                 cts.I
                                                 (nat.lt x9 x)
                                                 (x10 =>
                                                  cts.prod
                                                    cts.star
                                                    cts.star
                                                    cts.star
                                                    cts.I
                                                    (logic.eq
                                                       bool.bool
                                                       (x1 x9)
                                                       bool.true)
                                                    (x11 =>
                                                     logic.eq
                                                       nat.nat
                                                       (x3 x9)
                                                       (x4 (x6 x9))))))
                                           (sub_hk x6 x8 x x0 x1 x2 x3 x4))
                                        (sub_hk x8 x6 x0 x x2 x1 x4 x3))
                                     (x9 =>
                                      cts.prod
                                        cts.star
                                        cts.star
                                        cts.star
                                        cts.I
                                        (connectives.And
                                           (cts.prod
                                              cts.box
                                              cts.star
                                              cts.star
                                              cts.I
                                              nat.nat
                                              (x10 =>
                                               cts.prod
                                                 cts.star
                                                 cts.star
                                                 cts.star
                                                 cts.I
                                                 (nat.lt x10 x)
                                                 (x11 =>
                                                  cts.prod
                                                    cts.star
                                                    cts.star
                                                    cts.star
                                                    cts.I
                                                    (logic.eq
                                                       bool.bool
                                                       (x1 x10)
                                                       bool.true)
                                                    (x12 =>
                                                     logic.eq
                                                       nat.nat
                                                       (x3 x10)
                                                       (x4 (x6 x10))))))
                                           (sub_hk x6 x8 x x0 x1 x2 x3 x4))
                                        (x10 =>
                                         cts.prod
                                           cts.star
                                           cts.star
                                           cts.star
                                           cts.I
                                           (cts.prod
                                              cts.box
                                              cts.star
                                              cts.star
                                              cts.I
                                              nat.nat
                                              (x11 =>
                                               cts.prod
                                                 cts.star
                                                 cts.star
                                                 cts.star
                                                 cts.I
                                                 (nat.lt x11 x)
                                                 (x12 =>
                                                  cts.prod
                                                    cts.star
                                                    cts.star
                                                    cts.star
                                                    cts.I
                                                    (logic.eq
                                                       bool.bool
                                                       (x1 x11)
                                                       bool.true)
                                                    (x13 =>
                                                     logic.eq
                                                       nat.nat
                                                       (x3 x11)
                                                       (x4 (x6 x11))))))
                                           (x11 =>
                                            cts.prod
                                              cts.box
                                              cts.star
                                              cts.star
                                              cts.I
                                              nat.nat
                                              (x12 =>
                                               cts.prod
                                                 cts.box
                                                 cts.star
                                                 cts.star
                                                 cts.I
                                                 nat.nat
                                                 (x13 =>
                                                  cts.prod
                                                    cts.star
                                                    cts.star
                                                    cts.star
                                                    cts.I
                                                    (cts.prod
                                                       cts.box
                                                       cts.star
                                                       cts.star
                                                       cts.I
                                                       (cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x14 => bool.bool))
                                                       (x14 =>
                                                        cts.prod
                                                          cts.star
                                                          cts.star
                                                          cts.star
                                                          cts.I
                                                          (nat.le nat.O x)
                                                          (x15 =>
                                                           cts.prod
                                                             cts.star
                                                             cts.star
                                                             cts.star
                                                             cts.I
                                                             (sub_hk
                                                                x6
                                                                x8
                                                                nat.O
                                                                x13
                                                                x1
                                                                x14
                                                                x3
                                                                x4)
                                                             (x16 =>
                                                              cts.prod
                                                                cts.star
                                                                cts.star
                                                                cts.star
                                                                cts.I
                                                                (sub_hk
                                                                   x8
                                                                   x6
                                                                   x13
                                                                   nat.O
                                                                   x14
                                                                   x1
                                                                   x4
                                                                   x3)
                                                                (x17 =>
                                                                 logic.eq
                                                                   nat.nat
                                                                   (bigop
                                                                    nat.nat
                                                                    nat.O
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    x1 i0)
                                                                    (nat.S
                                                                    nat.O)
                                                                    nat.times
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    x3 i0))
                                                                   (bigop
                                                                    nat.nat
                                                                    x13
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    x14 i0)
                                                                    (nat.S
                                                                    nat.O)
                                                                    nat.times
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    x4 i0)))))))
                                                    (x14 =>
                                                     cts.prod
                                                       cts.box
                                                       cts.star
                                                       cts.star
                                                       cts.I
                                                       (cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x15 => bool.bool))
                                                       (x15 =>
                                                        cts.prod
                                                          cts.star
                                                          cts.star
                                                          cts.star
                                                          cts.I
                                                          (nat.le nat.O x)
                                                          (x16 =>
                                                           cts.prod
                                                             cts.star
                                                             cts.star
                                                             cts.star
                                                             cts.I
                                                             (sub_hk
                                                                x6
                                                                x8
                                                                nat.O
                                                                (nat.S x13)
                                                                x1
                                                                x15
                                                                x3
                                                                x4)
                                                             (x17 =>
                                                              cts.prod
                                                                cts.star
                                                                cts.star
                                                                cts.star
                                                                cts.I
                                                                (sub_hk
                                                                   x8
                                                                   x6
                                                                   (nat.S x13)
                                                                   nat.O
                                                                   x15
                                                                   x1
                                                                   x4
                                                                   x3)
                                                                (x18 =>
                                                                 cts.prod
                                                                   cts.box
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   nat.nat
                                                                   (x19 =>
                                                                    cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    nat.nat
                                                                    (x20 =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    x19
                                                                    (nat.plus
                                                                    (nat.times
                                                                    x20
                                                                    (div_mod.div
                                                                    x19
                                                                    x20))
                                                                    (div_mod.mod
                                                                    x19
                                                                    x20)))))))))))))))))))))))))
  :=
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  _clearme:(cts.Term cts.star (iso n1 n2 p1 p2 f1 f2)) =>
  h:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  _clearme0:(cts.Term
               cts.star
               (connectives.ex
                  (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                  (k:(cts.Term
                        cts.diamond
                        (cts.cast
                           cts.triangle
                           cts.sinf
                           (cts.univ cts.box cts.triangle cts.I)
                           (cts.univ cts.diamond cts.sinf cts.I)
                           cts.I
                           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
                   connectives.And
                     (connectives.And
                        (cts.prod
                           cts.box
                           cts.star
                           cts.star
                           cts.I
                           nat.nat
                           (x =>
                            cts.prod
                              cts.star
                              cts.star
                              cts.star
                              cts.I
                              (nat.lt x n1)
                              (x0 =>
                               cts.prod
                                 cts.star
                                 cts.star
                                 cts.star
                                 cts.I
                                 (logic.eq bool.bool (p1 x) bool.true)
                                 (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
                        (sub_hk h k n1 n2 p1 p2 f1 f2))
                     (sub_hk k h n2 n1 p2 p1 f2 f1)))) =>
  k:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  _clearme1:(cts.Term
               cts.star
               (connectives.And
                  (connectives.And
                     (cts.prod
                        cts.box
                        cts.star
                        cts.star
                        cts.I
                        nat.nat
                        (x =>
                         cts.prod
                           cts.star
                           cts.star
                           cts.star
                           cts.I
                           (nat.lt x n1)
                           (x0 =>
                            cts.prod
                              cts.star
                              cts.star
                              cts.star
                              cts.I
                              (logic.eq bool.bool (p1 x) bool.true)
                              (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
                     (sub_hk h k n1 n2 p1 p2 f1 f2))
                  (sub_hk k h n2 n1 p2 p1 f2 f1))) =>
  _clearme2:(cts.Term
               cts.star
               (connectives.And
                  (cts.prod
                     cts.box
                     cts.star
                     cts.star
                     cts.I
                     nat.nat
                     (x =>
                      cts.prod
                        cts.star
                        cts.star
                        cts.star
                        cts.I
                        (nat.lt x n1)
                        (x0 =>
                         cts.prod
                           cts.star
                           cts.star
                           cts.star
                           cts.I
                           (logic.eq bool.bool (p1 x) bool.true)
                           (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
                  (sub_hk h k n1 n2 p1 p2 f1 f2))) =>
  same:(cts.Term
          cts.star
          (cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.lt x n1)
                (x0 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (logic.eq bool.bool (p1 x) bool.true)
                   (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))) =>
  i:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  m:(cts.Term
       cts.diamond
       (cts.cast
          cts.triangle
          cts.sinf
          (cts.univ cts.box cts.triangle cts.I)
          (cts.univ cts.diamond cts.sinf cts.I)
          cts.I
          nat.nat)) =>
  Hind:(cts.Term
          cts.star
          (cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
             (x =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (nat.le nat.O n1)
                (x0 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sub_hk h k nat.O m p1 x f1 f2)
                   (x1 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sub_hk k h m nat.O x p1 f2 f1)
                      (x2 =>
                       logic.eq
                         nat.nat
                         (bigop
                            nat.nat
                            nat.O
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p1 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f1 i0))
                         (bigop
                            nat.nat
                            m
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             x i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f2 i0)))))))) =>
  p20:(cts.Term
         cts.diamond
         (cts.cast
            cts.triangle
            cts.sinf
            (cts.univ cts.box cts.triangle cts.I)
            (cts.univ cts.diamond cts.sinf cts.I)
            cts.I
            (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  __:(cts.Term cts.star (nat.le nat.O n1)) =>
  sub1:(cts.Term cts.star (sub_hk h k nat.O (nat.S m) p1 p20 f1 f2)) =>
  sub2:(cts.Term cts.star (sub_hk k h (nat.S m) nat.O p20 p1 f2 f1)) =>
  x2571:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
  x2572:(cts.Term
           cts.diamond
           (cts.cast
              cts.triangle
              cts.sinf
              (cts.univ cts.box cts.triangle cts.I)
              (cts.univ cts.diamond cts.sinf cts.I)
              cts.I
              nat.nat)) =>
  logic.rewrite_l
    nat.nat
    (nat.times (div_mod.div x2571 x2572) x2572)
    (__1:(cts.Term
            cts.diamond
            (cts.cast
               cts.triangle
               cts.sinf
               (cts.univ cts.box cts.triangle cts.I)
               (cts.univ cts.diamond cts.sinf cts.I)
               cts.I
               nat.nat)) =>
     logic.eq nat.nat x2571 (nat.plus __1 (div_mod.mod x2571 x2572)))
    (div_mod.div_mod x2571 x2572)
    (nat.times x2572 (div_mod.div x2571 x2572))
    (nat.commutative_times (div_mod.div x2571 x2572) x2572).

def bigop_iso :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => bool.bool))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x2 => bool.bool))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x3 => nat.nat))
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x4 => nat.nat))
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (iso x x0 x1 x2 x3 x4)
                         (x5 =>
                          logic.eq
                            nat.nat
                            (bigop
                               nat.nat
                               x
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x1 i)
                               (nat.S nat.O)
                               nat.times
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x3 i))
                            (bigop
                               nat.nat
                               x0
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x2 i)
                               (nat.S nat.O)
                               nat.times
                               (i:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x4 i))))))))))
  :=
  n1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  n2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           nat.nat)) =>
  p1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  p2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool)))) =>
  f1:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  f2:(cts.Term
        cts.diamond
        (cts.cast
           cts.triangle
           cts.sinf
           (cts.univ cts.box cts.triangle cts.I)
           (cts.univ cts.diamond cts.sinf cts.I)
           cts.I
           (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
  _clearme:(cts.Term cts.star (iso n1 n2 p1 p2 f1 f2)) =>
  connectives.match_ex_prop
    (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
    (h:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
     connectives.ex
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (k:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
        connectives.And
          (connectives.And
             (cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt x n1)
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq bool.bool (p1 x) bool.true)
                      (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
             (sub_hk h k n1 n2 p1 p2 f1 f2))
          (sub_hk k h n2 n1 p2 p1 f2 f1)))
    (logic.eq
       nat.nat
       (bigop
          nat.nat
          n1
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           p1 i)
          (nat.S nat.O)
          nat.times
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           f1 i))
       (bigop
          nat.nat
          n2
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           p2 i)
          (nat.S nat.O)
          nat.times
          (i:(cts.Term
                cts.diamond
                (cts.cast
                   cts.triangle
                   cts.sinf
                   (cts.univ cts.box cts.triangle cts.I)
                   (cts.univ cts.diamond cts.sinf cts.I)
                   cts.I
                   nat.nat)) =>
           f2 i)))
    (h:(cts.Term
          cts.diamond
          (cts.cast
             cts.triangle
             cts.sinf
             (cts.univ cts.box cts.triangle cts.I)
             (cts.univ cts.diamond cts.sinf cts.I)
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
     _clearme0:(cts.Term
                  cts.star
                  (connectives.ex
                     (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
                     (k:(cts.Term
                           cts.diamond
                           (cts.cast
                              cts.triangle
                              cts.sinf
                              (cts.univ cts.box cts.triangle cts.I)
                              (cts.univ cts.diamond cts.sinf cts.I)
                              cts.I
                              (cts.prod
                                 cts.box
                                 cts.box
                                 cts.box
                                 cts.I
                                 nat.nat
                                 (x => nat.nat)))) =>
                      connectives.And
                        (connectives.And
                           (cts.prod
                              cts.box
                              cts.star
                              cts.star
                              cts.I
                              nat.nat
                              (x =>
                               cts.prod
                                 cts.star
                                 cts.star
                                 cts.star
                                 cts.I
                                 (nat.lt x n1)
                                 (x0 =>
                                  cts.prod
                                    cts.star
                                    cts.star
                                    cts.star
                                    cts.I
                                    (logic.eq bool.bool (p1 x) bool.true)
                                    (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
                           (sub_hk h k n1 n2 p1 p2 f1 f2))
                        (sub_hk k h n2 n1 p2 p1 f2 f1)))) =>
     connectives.match_ex_prop
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (k:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
        connectives.And
          (connectives.And
             (cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt x n1)
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq bool.bool (p1 x) bool.true)
                      (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
             (sub_hk h k n1 n2 p1 p2 f1 f2))
          (sub_hk k h n2 n1 p2 p1 f2 f1))
       (logic.eq
          nat.nat
          (bigop
             nat.nat
             n1
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p1 i)
             (nat.S nat.O)
             nat.times
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f1 i))
          (bigop
             nat.nat
             n2
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              p2 i)
             (nat.S nat.O)
             nat.times
             (i:(cts.Term
                   cts.diamond
                   (cts.cast
                      cts.triangle
                      cts.sinf
                      (cts.univ cts.box cts.triangle cts.I)
                      (cts.univ cts.diamond cts.sinf cts.I)
                      cts.I
                      nat.nat)) =>
              f2 i)))
       (k:(cts.Term
             cts.diamond
             (cts.cast
                cts.triangle
                cts.sinf
                (cts.univ cts.box cts.triangle cts.I)
                (cts.univ cts.diamond cts.sinf cts.I)
                cts.I
                (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat)))) =>
        _clearme1:(cts.Term
                     cts.star
                     (connectives.And
                        (connectives.And
                           (cts.prod
                              cts.box
                              cts.star
                              cts.star
                              cts.I
                              nat.nat
                              (x =>
                               cts.prod
                                 cts.star
                                 cts.star
                                 cts.star
                                 cts.I
                                 (nat.lt x n1)
                                 (x0 =>
                                  cts.prod
                                    cts.star
                                    cts.star
                                    cts.star
                                    cts.I
                                    (logic.eq bool.bool (p1 x) bool.true)
                                    (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
                           (sub_hk h k n1 n2 p1 p2 f1 f2))
                        (sub_hk k h n2 n1 p2 p1 f2 f1))) =>
        connectives.match_And_prop
          (connectives.And
             (cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt x n1)
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq bool.bool (p1 x) bool.true)
                      (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
             (sub_hk h k n1 n2 p1 p2 f1 f2))
          (sub_hk k h n2 n1 p2 p1 f2 f1)
          (logic.eq
             nat.nat
             (bigop
                nat.nat
                n1
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p1 i)
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f1 i))
             (bigop
                nat.nat
                n2
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 p2 i)
                (nat.S nat.O)
                nat.times
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 f2 i)))
          (_clearme2:(cts.Term
                        cts.star
                        (connectives.And
                           (cts.prod
                              cts.box
                              cts.star
                              cts.star
                              cts.I
                              nat.nat
                              (x =>
                               cts.prod
                                 cts.star
                                 cts.star
                                 cts.star
                                 cts.I
                                 (nat.lt x n1)
                                 (x0 =>
                                  cts.prod
                                    cts.star
                                    cts.star
                                    cts.star
                                    cts.I
                                    (logic.eq bool.bool (p1 x) bool.true)
                                    (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
                           (sub_hk h k n1 n2 p1 p2 f1 f2))) =>
           connectives.match_And_prop
             (cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (nat.lt x n1)
                   (x0 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (logic.eq bool.bool (p1 x) bool.true)
                      (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))
             (sub_hk h k n1 n2 p1 p2 f1 f2)
             (cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (sub_hk k h n2 n1 p2 p1 f2 f1)
                (x =>
                 logic.eq
                   nat.nat
                   (bigop
                      nat.nat
                      n1
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p1 i)
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f1 i))
                   (bigop
                      nat.nat
                      n2
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       p2 i)
                      (nat.S nat.O)
                      nat.times
                      (i:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       f2 i))))
             (same:(cts.Term
                      cts.star
                      (cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         nat.nat
                         (x =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (nat.lt x n1)
                            (x0 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (logic.eq bool.bool (p1 x) bool.true)
                               (x1 => logic.eq nat.nat (f1 x) (f2 (h x))))))) =>
              nat.le_gen
                (__:(cts.Term
                       cts.diamond
                       (cts.cast
                          cts.triangle
                          cts.sinf
                          (cts.univ cts.box cts.triangle cts.I)
                          (cts.univ cts.diamond cts.sinf cts.I)
                          cts.I
                          nat.nat)) =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (sub_hk h k __ n2 p1 p2 f1 f2)
                   (x =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (sub_hk k h n2 __ p2 p1 f2 f1)
                      (x0 =>
                       logic.eq
                         nat.nat
                         (bigop
                            nat.nat
                            __
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p1 i)
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f1 i))
                         (bigop
                            nat.nat
                            n2
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             p2 i)
                            (nat.S nat.O)
                            nat.times
                            (i:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     nat.nat)) =>
                             f2 i)))))
                n1
                (i:(cts.Term
                      cts.diamond
                      (cts.cast
                         cts.triangle
                         cts.sinf
                         (cts.univ cts.box cts.triangle cts.I)
                         (cts.univ cts.diamond cts.sinf cts.I)
                         cts.I
                         nat.nat)) =>
                 nat.nat_ind
                   (_x_365:(cts.Term
                              cts.diamond
                              (cts.cast
                                 cts.triangle
                                 cts.sinf
                                 (cts.univ cts.box cts.triangle cts.I)
                                 (cts.univ cts.diamond cts.sinf cts.I)
                                 cts.I
                                 nat.nat)) =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                      (x =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (nat.le _x_365 n1)
                         (x0 =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (sub_hk h k _x_365 n2 p1 x f1 f2)
                            (x1 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (sub_hk k h n2 _x_365 x p1 f2 f1)
                               (x2 =>
                                logic.eq
                                  nat.nat
                                  (bigop
                                     nat.nat
                                     _x_365
                                     (i0:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      p1 i0)
                                     (nat.S nat.O)
                                     nat.times
                                     (i0:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      f1 i0))
                                  (bigop
                                     nat.nat
                                     n2
                                     (i0:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      x i0)
                                     (nat.S nat.O)
                                     nat.times
                                     (i0:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      f2 i0)))))))
                   (nat.nat_ind
                      (_x_365:(cts.Term
                                 cts.diamond
                                 (cts.cast
                                    cts.triangle
                                    cts.sinf
                                    (cts.univ cts.box cts.triangle cts.I)
                                    (cts.univ cts.diamond cts.sinf cts.I)
                                    cts.I
                                    nat.nat)) =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
                         (x =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (nat.le nat.O n1)
                            (x0 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (sub_hk h k nat.O _x_365 p1 x f1 f2)
                               (x1 =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (sub_hk k h _x_365 nat.O x p1 f2 f1)
                                  (x2 =>
                                   logic.eq
                                     nat.nat
                                     (bigop
                                        nat.nat
                                        nat.O
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         p1 i0)
                                        (nat.S nat.O)
                                        nat.times
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f1 i0))
                                     (bigop
                                        nat.nat
                                        _x_365
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         x i0)
                                        (nat.S nat.O)
                                        nat.times
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f2 i0)))))))
                      (f:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => bool.bool)))) =>
                       sym_eq_bigop_O
                         nat.nat
                         (y:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x => bool.bool))
                                     (x =>
                                      cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        nat.nat
                                        (x0 =>
                                         cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           (cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              nat.nat
                                              (x1 =>
                                               cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 nat.nat
                                                 (x2 => nat.nat)))
                                           (x1 =>
                                            cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              (cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 nat.nat
                                                 (x2 => nat.nat))
                                              (x2 => nat.nat))))))) =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (nat.le nat.O n1)
                            (x =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (sub_hk h k nat.O nat.O p1 f f1 f2)
                               (x0 =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (sub_hk k h nat.O nat.O f p1 f2 f1)
                                  (x1 =>
                                   logic.eq
                                     nat.nat
                                     (bigop
                                        nat.nat
                                        nat.O
                                        (iO:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         p1 iO)
                                        (nat.S nat.O)
                                        nat.times
                                        (iO:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f1 iO))
                                     (y
                                        (iO:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f iO)
                                        (nat.S nat.O)
                                        nat.times
                                        (iO:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f2 iO))))))
                         (sym_eq_bigop_body_O
                            nat.nat
                            (y:(cts.Term
                                  cts.diamond
                                  (cts.cast
                                     cts.triangle
                                     cts.sinf
                                     (cts.univ cts.box cts.triangle cts.I)
                                     (cts.univ cts.diamond cts.sinf cts.I)
                                     cts.I
                                     (cts.prod
                                        cts.box
                                        cts.box
                                        cts.box
                                        cts.I
                                        (cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           nat.nat
                                           (x => bool.bool))
                                        (x =>
                                         cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           nat.nat
                                           (x0 =>
                                            cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              (cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 nat.nat
                                                 (x1 =>
                                                  cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    nat.nat
                                                    (x2 => nat.nat)))
                                              (x1 =>
                                               cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 (cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    nat.nat
                                                    (x2 => nat.nat))
                                                 (x2 => nat.nat))))))) =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (nat.le nat.O n1)
                               (x =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (sub_hk h k nat.O nat.O p1 f f1 f2)
                                  (x0 =>
                                   cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (sub_hk k h nat.O nat.O f p1 f2 f1)
                                     (x1 =>
                                      logic.eq
                                        nat.nat
                                        (bigop
                                           nat.nat
                                           nat.O
                                           (iO:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            p1 iO)
                                           (nat.S nat.O)
                                           nat.times
                                           (iO:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            f1 iO))
                                        (y
                                           (iO:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            f iO)
                                           (nat.S nat.O)
                                           nat.times
                                           (iO:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            f2 iO))))))
                            (eq_bigop_body_O
                               nat.nat
                               (y:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        (cts.prod
                                           cts.box
                                           cts.box
                                           cts.box
                                           cts.I
                                           (cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              nat.nat
                                              (x => bool.bool))
                                           (x =>
                                            cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              nat.nat
                                              (x0 =>
                                               cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 (cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    nat.nat
                                                    (x1 =>
                                                     cts.prod
                                                       cts.box
                                                       cts.box
                                                       cts.box
                                                       cts.I
                                                       nat.nat
                                                       (x2 => nat.nat)))
                                                 (x1 =>
                                                  cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    (cts.prod
                                                       cts.box
                                                       cts.box
                                                       cts.box
                                                       cts.I
                                                       nat.nat
                                                       (x2 => nat.nat))
                                                    (x2 => nat.nat))))))) =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (nat.le nat.O n1)
                                  (x =>
                                   cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (sub_hk h k nat.O nat.O p1 f f1 f2)
                                     (x0 =>
                                      cts.prod
                                        cts.star
                                        cts.star
                                        cts.star
                                        cts.I
                                        (sub_hk k h nat.O nat.O f p1 f2 f1)
                                        (x1 =>
                                         logic.eq
                                           nat.nat
                                           (bigop
                                              nat.nat
                                              nat.O
                                              (iO:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               p1 iO)
                                              (nat.S nat.O)
                                              nat.times
                                              (iO:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               f1 iO))
                                           (y
                                              (iO:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               p1 iO)
                                              (nat.S nat.O)
                                              nat.times
                                              (iO:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               f1 iO))))))
                               (eq_bigop_O
                                  nat.nat
                                  (y:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           (cts.prod
                                              cts.box
                                              cts.box
                                              cts.box
                                              cts.I
                                              (cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 nat.nat
                                                 (x => bool.bool))
                                              (x =>
                                               cts.prod
                                                 cts.box
                                                 cts.box
                                                 cts.box
                                                 cts.I
                                                 nat.nat
                                                 (x0 =>
                                                  cts.prod
                                                    cts.box
                                                    cts.box
                                                    cts.box
                                                    cts.I
                                                    (cts.prod
                                                       cts.box
                                                       cts.box
                                                       cts.box
                                                       cts.I
                                                       nat.nat
                                                       (x1 =>
                                                        cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x2 => nat.nat)))
                                                    (x1 =>
                                                     cts.prod
                                                       cts.box
                                                       cts.box
                                                       cts.box
                                                       cts.I
                                                       (cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x2 => nat.nat))
                                                       (x2 => nat.nat))))))) =>
                                   cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (nat.le nat.O n1)
                                     (x =>
                                      cts.prod
                                        cts.star
                                        cts.star
                                        cts.star
                                        cts.I
                                        (sub_hk h k nat.O nat.O p1 f f1 f2)
                                        (x0 =>
                                         cts.prod
                                           cts.star
                                           cts.star
                                           cts.star
                                           cts.I
                                           (sub_hk k h nat.O nat.O f p1 f2 f1)
                                           (x1 =>
                                            logic.eq
                                              nat.nat
                                              (bigop
                                                 nat.nat
                                                 nat.O
                                                 (iO:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  p1 iO)
                                                 (nat.S nat.O)
                                                 nat.times
                                                 (iO:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  f1 iO))
                                              (y
                                                 (iO:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  p1 iO)
                                                 (nat.S nat.O)
                                                 nat.times
                                                 (iO:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  f1 iO))))))
                                  (auto:(cts.Term cts.star (nat.le nat.O n1)) =>
                                   auto':(cts.Term
                                            cts.star
                                            (sub_hk h k nat.O nat.O p1 f f1 f2)) =>
                                   auto'':(cts.Term
                                             cts.star
                                             (sub_hk k h nat.O nat.O f p1 f2 f1)) =>
                                   logic.refl
                                     nat.nat
                                     (bigop
                                        nat.nat
                                        nat.O
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         p1 i0)
                                        (nat.S nat.O)
                                        nat.times
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f1 i0)))))))
                      (m:(cts.Term
                            cts.diamond
                            (cts.cast
                               cts.triangle
                               cts.sinf
                               (cts.univ cts.box cts.triangle cts.I)
                               (cts.univ cts.diamond cts.sinf cts.I)
                               cts.I
                               nat.nat)) =>
                       Hind:(cts.Term
                               cts.star
                               (cts.prod
                                  cts.box
                                  cts.star
                                  cts.star
                                  cts.I
                                  (cts.prod
                                     cts.box
                                     cts.box
                                     cts.box
                                     cts.I
                                     nat.nat
                                     (x => bool.bool))
                                  (x =>
                                   cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (nat.le nat.O n1)
                                     (x0 =>
                                      cts.prod
                                        cts.star
                                        cts.star
                                        cts.star
                                        cts.I
                                        (sub_hk h k nat.O m p1 x f1 f2)
                                        (x1 =>
                                         cts.prod
                                           cts.star
                                           cts.star
                                           cts.star
                                           cts.I
                                           (sub_hk k h m nat.O x p1 f2 f1)
                                           (x2 =>
                                            logic.eq
                                              nat.nat
                                              (bigop
                                                 nat.nat
                                                 nat.O
                                                 (i0:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  p1 i0)
                                                 (nat.S nat.O)
                                                 nat.times
                                                 (i0:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  f1 i0))
                                              (bigop
                                                 nat.nat
                                                 m
                                                 (i0:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  x i0)
                                                 (nat.S nat.O)
                                                 nat.times
                                                 (i0:(cts.Term
                                                        cts.diamond
                                                        (cts.cast
                                                           cts.triangle
                                                           cts.sinf
                                                           (cts.univ
                                                              cts.box
                                                              cts.triangle
                                                              cts.I)
                                                           (cts.univ
                                                              cts.diamond
                                                              cts.sinf
                                                              cts.I)
                                                           cts.I
                                                           nat.nat)) =>
                                                  f2 i0)))))))) =>
                       p20:(cts.Term
                              cts.diamond
                              (cts.cast
                                 cts.triangle
                                 cts.sinf
                                 (cts.univ cts.box cts.triangle cts.I)
                                 (cts.univ cts.diamond cts.sinf cts.I)
                                 cts.I
                                 (cts.prod
                                    cts.box
                                    cts.box
                                    cts.box
                                    cts.I
                                    nat.nat
                                    (x => bool.bool)))) =>
                       __:(cts.Term cts.star (nat.le nat.O n1)) =>
                       sub1:(cts.Term cts.star (sub_hk h k nat.O (nat.S m) p1 p20 f1 f2)) =>
                       sub2:(cts.Term cts.star (sub_hk k h (nat.S m) nat.O p20 p1 f2 f1)) =>
                       logic.eq_ind_r
                         nat.nat
                         (bigop
                            nat.nat
                            m
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p20 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f2 i0))
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          logic.eq
                            nat.nat
                            (bigop
                               nat.nat
                               nat.O
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                p1 i0)
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f1 i0))
                            x)
                         (Hind
                            p20
                            (nat.le_O_n n1)
                            (sub_hkO h k nat.O m p1 p20 f1 f2 (logic.refl nat.nat nat.O))
                            (transitive_sub
                               (x:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x)
                               (x:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x)
                               k
                               h
                               m
                               (nat.S m)
                               nat.O
                               p20
                               p20
                               p1
                               f2
                               f2
                               f1
                               (sub_lt f2 p20 m (nat.S m) (nat.le_n_Sn m))
                               sub2))
                         (bigop
                            nat.nat
                            (nat.S m)
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p20 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f2 i0))
                         (bigop_Sfalse
                            nat.nat
                            m
                            p20
                            (nat.S nat.O)
                            nat.times
                            f2
                            (sub0_to_false
                               k
                               h
                               nat.O
                               (nat.S m)
                               p1
                               p20
                               f1
                               f2
                               (logic.refl nat.nat nat.O)
                               sub2
                               m
                               (logic.eq_coerc
                                  (nat.lt
                                     (div_mod.mod m nat.O)
                                     (nat.plus
                                        (nat.plus
                                           (div_mod.mod m nat.O)
                                           (nat.times nat.O (div_mod.div m nat.O)))
                                        (nat.S nat.O)))
                                  (nat.lt m (nat.S m))
                                  (nat.lt_plus_Sn_r
                                     (div_mod.mod m nat.O)
                                     (nat.times nat.O (div_mod.div m nat.O))
                                     nat.O)
                                  (logic.rewrite_l
                                     nat.nat
                                     m
                                     (__1:(cts.Term
                                             cts.diamond
                                             (cts.cast
                                                cts.triangle
                                                cts.sinf
                                                (cts.univ cts.box cts.triangle cts.I)
                                                (cts.univ cts.diamond cts.sinf cts.I)
                                                cts.I
                                                nat.nat)) =>
                                      logic.eq
                                        (cts.univ cts.star cts.box cts.I)
                                        (nat.lt
                                           (div_mod.mod m nat.O)
                                           (nat.plus __1 (nat.S nat.O)))
                                        (nat.lt m (nat.S m)))
                                     (logic.rewrite_l
                                        nat.nat
                                        m
                                        (__1:(cts.Term
                                                cts.diamond
                                                (cts.cast
                                                   cts.triangle
                                                   cts.sinf
                                                   (cts.univ
                                                      cts.box
                                                      cts.triangle
                                                      cts.I)
                                                   (cts.univ
                                                      cts.diamond
                                                      cts.sinf
                                                      cts.I)
                                                   cts.I
                                                   nat.nat)) =>
                                         logic.eq
                                           (cts.univ cts.star cts.box cts.I)
                                           (nat.lt __1 (nat.plus m (nat.S nat.O)))
                                           (nat.lt m (nat.S m)))
                                        (logic.rewrite_l
                                           nat.nat
                                           (nat.S m)
                                           (__1:(cts.Term
                                                   cts.diamond
                                                   (cts.cast
                                                      cts.triangle
                                                      cts.sinf
                                                      (cts.univ
                                                         cts.box
                                                         cts.triangle
                                                         cts.I)
                                                      (cts.univ
                                                         cts.diamond
                                                         cts.sinf
                                                         cts.I)
                                                      cts.I
                                                      nat.nat)) =>
                                            logic.eq
                                              (cts.univ cts.star cts.box cts.I)
                                              (nat.lt m __1)
                                              (nat.lt m (nat.S m)))
                                           (logic.refl
                                              (cts.univ cts.star cts.box cts.I)
                                              (nat.lt m (nat.S m)))
                                           (nat.plus m (nat.S nat.O))
                                           (logic.rewrite_r
                                              nat.nat
                                              (nat.plus m nat.O)
                                              (__1:(cts.Term
                                                      cts.diamond
                                                      (cts.cast
                                                         cts.triangle
                                                         cts.sinf
                                                         (cts.univ
                                                            cts.box
                                                            cts.triangle
                                                            cts.I)
                                                         (cts.univ
                                                            cts.diamond
                                                            cts.sinf
                                                            cts.I)
                                                         cts.I
                                                         nat.nat)) =>
                                               logic.eq
                                                 nat.nat
                                                 (nat.S __1)
                                                 (nat.plus m (nat.S nat.O)))
                                              (nat.plus_n_Sm m nat.O)
                                              m
                                              (nat.plus_n_O m)))
                                        (div_mod.mod m nat.O)
                                        (logic.rewrite_r
                                           nat.nat
                                           (nat.plus nat.O (div_mod.mod m nat.O))
                                           (__1:(cts.Term
                                                   cts.diamond
                                                   (cts.cast
                                                      cts.triangle
                                                      cts.sinf
                                                      (cts.univ
                                                         cts.box
                                                         cts.triangle
                                                         cts.I)
                                                      (cts.univ
                                                         cts.diamond
                                                         cts.sinf
                                                         cts.I)
                                                      cts.I
                                                      nat.nat)) =>
                                            logic.eq nat.nat m __1)
                                           (logic.rewrite_l
                                              nat.nat
                                              (nat.plus (div_mod.mod m nat.O) nat.O)
                                              (__1:(cts.Term
                                                      cts.diamond
                                                      (cts.cast
                                                         cts.triangle
                                                         cts.sinf
                                                         (cts.univ
                                                            cts.box
                                                            cts.triangle
                                                            cts.I)
                                                         (cts.univ
                                                            cts.diamond
                                                            cts.sinf
                                                            cts.I)
                                                         cts.I
                                                         nat.nat)) =>
                                               logic.eq nat.nat m __1)
                                              (logic.rewrite_r
                                                 nat.nat
                                                 (nat.times
                                                    nat.O
                                                    (div_mod.div m nat.O))
                                                 (__1:(cts.Term
                                                         cts.diamond
                                                         (cts.cast
                                                            cts.triangle
                                                            cts.sinf
                                                            (cts.univ
                                                               cts.box
                                                               cts.triangle
                                                               cts.I)
                                                            (cts.univ
                                                               cts.diamond
                                                               cts.sinf
                                                               cts.I)
                                                            cts.I
                                                            nat.nat)) =>
                                                  logic.eq
                                                    nat.nat
                                                    m
                                                    (nat.plus
                                                       (div_mod.mod m nat.O)
                                                       __1))
                                                 (logic.rewrite_l
                                                    nat.nat
                                                    (nat.plus
                                                       (nat.times
                                                          nat.O
                                                          (div_mod.div m nat.O))
                                                       (div_mod.mod m nat.O))
                                                    (__1:(cts.Term
                                                            cts.diamond
                                                            (cts.cast
                                                               cts.triangle
                                                               cts.sinf
                                                               (cts.univ
                                                                  cts.box
                                                                  cts.triangle
                                                                  cts.I)
                                                               (cts.univ
                                                                  cts.diamond
                                                                  cts.sinf
                                                                  cts.I)
                                                               cts.I
                                                               nat.nat)) =>
                                                     logic.eq nat.nat m __1)
                                                    (let_clause_10471
                                                       n1
                                                       n2
                                                       p1
                                                       p2
                                                       f1
                                                       f2
                                                       _clearme
                                                       h
                                                       _clearme0
                                                       k
                                                       _clearme1
                                                       _clearme2
                                                       same
                                                       i
                                                       m
                                                       Hind
                                                       p20
                                                       __
                                                       sub1
                                                       sub2
                                                       m
                                                       nat.O)
                                                    (nat.plus
                                                       (div_mod.mod m nat.O)
                                                       (nat.times
                                                          nat.O
                                                          (div_mod.div m nat.O)))
                                                    (nat.commutative_plus
                                                       (nat.times
                                                          nat.O
                                                          (div_mod.div m nat.O))
                                                       (div_mod.mod m nat.O)))
                                                 nat.O
                                                 (nat.times_O_n (div_mod.div m nat.O)))
                                              (nat.plus nat.O (div_mod.mod m nat.O))
                                              (nat.commutative_plus
                                                 (div_mod.mod m nat.O)
                                                 nat.O))
                                           (div_mod.mod m nat.O)
                                           (nat.plus_O_n (div_mod.mod m nat.O))))
                                     (nat.plus
                                        (div_mod.mod m nat.O)
                                        (nat.times nat.O (div_mod.div m nat.O)))
                                     (logic.rewrite_l
                                        nat.nat
                                        (nat.plus
                                           (nat.times nat.O (div_mod.div m nat.O))
                                           (div_mod.mod m nat.O))
                                        (__1:(cts.Term
                                                cts.diamond
                                                (cts.cast
                                                   cts.triangle
                                                   cts.sinf
                                                   (cts.univ
                                                      cts.box
                                                      cts.triangle
                                                      cts.I)
                                                   (cts.univ
                                                      cts.diamond
                                                      cts.sinf
                                                      cts.I)
                                                   cts.I
                                                   nat.nat)) =>
                                         logic.eq nat.nat m __1)
                                        (let_clause_10471
                                           n1
                                           n2
                                           p1
                                           p2
                                           f1
                                           f2
                                           _clearme
                                           h
                                           _clearme0
                                           k
                                           _clearme1
                                           _clearme2
                                           same
                                           i
                                           m
                                           Hind
                                           p20
                                           __
                                           sub1
                                           sub2
                                           m
                                           nat.O)
                                        (nat.plus
                                           (div_mod.mod m nat.O)
                                           (nat.times nat.O (div_mod.div m nat.O)))
                                        (nat.commutative_plus
                                           (nat.times nat.O (div_mod.div m nat.O))
                                           (div_mod.mod m nat.O))))))))
                      n2)
                   (n:(cts.Term
                         cts.diamond
                         (cts.cast
                            cts.triangle
                            cts.sinf
                            (cts.univ cts.box cts.triangle cts.I)
                            (cts.univ cts.diamond cts.sinf cts.I)
                            cts.I
                            nat.nat)) =>
                    Hind:(cts.Term
                            cts.star
                            (cts.prod
                               cts.box
                               cts.star
                               cts.star
                               cts.I
                               (cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x => bool.bool))
                               (x =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (nat.le n n1)
                                  (x0 =>
                                   cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (sub_hk h k n n2 p1 x f1 f2)
                                     (x1 =>
                                      cts.prod
                                        cts.star
                                        cts.star
                                        cts.star
                                        cts.I
                                        (sub_hk k h n2 n x p1 f2 f1)
                                        (x2 =>
                                         logic.eq
                                           nat.nat
                                           (bigop
                                              nat.nat
                                              n
                                              (i0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               p1 i0)
                                              (nat.S nat.O)
                                              nat.times
                                              (i0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               f1 i0))
                                           (bigop
                                              nat.nat
                                              n2
                                              (i0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               x i0)
                                              (nat.S nat.O)
                                              nat.times
                                              (i0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               f2 i0)))))))) =>
                    p20:(cts.Term
                           cts.diamond
                           (cts.cast
                              cts.triangle
                              cts.sinf
                              (cts.univ cts.box cts.triangle cts.I)
                              (cts.univ cts.diamond cts.sinf cts.I)
                              cts.I
                              (cts.prod
                                 cts.box
                                 cts.box
                                 cts.box
                                 cts.I
                                 nat.nat
                                 (x => bool.bool)))) =>
                    ltn:(cts.Term cts.star (nat.le (nat.S n) n1)) =>
                    sub1:(cts.Term cts.star (sub_hk h k (nat.S n) n2 p1 p20 f1 f2)) =>
                    sub2:(cts.Term cts.star (sub_hk k h n2 (nat.S n) p20 p1 f2 f1)) =>
                    connectives.match_Or_prop
                      (logic.eq bool.bool (p1 n) bool.true)
                      (logic.eq bool.bool (p1 n) bool.false)
                      (logic.eq
                         nat.nat
                         (bigop
                            nat.nat
                            (nat.S n)
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p1 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f1 i0))
                         (bigop
                            nat.nat
                            n2
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p20 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f2 i0)))
                      (p1n:(cts.Term cts.star (logic.eq bool.bool (p1 n) bool.true)) =>
                       logic.eq_ind_r
                         nat.nat
                         (nat.times
                            (f1 n)
                            (bigop
                               nat.nat
                               n
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                p1 i0)
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f1 i0)))
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          logic.eq
                            nat.nat
                            x
                            (bigop
                               nat.nat
                               n2
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                p20 i0)
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f2 i0)))
                         (connectives.match_And_prop
                            (connectives.And
                               (nat.lt (h n) n2)
                               (logic.eq bool.bool (p20 (h n)) bool.true))
                            (logic.eq nat.nat (k (h n)) n)
                            (logic.eq
                               nat.nat
                               (nat.times
                                  (f1 n)
                                  (bigop
                                     nat.nat
                                     n
                                     (i0:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      p1 i0)
                                     (nat.S nat.O)
                                     nat.times
                                     (i0:(cts.Term
                                            cts.diamond
                                            (cts.cast
                                               cts.triangle
                                               cts.sinf
                                               (cts.univ cts.box cts.triangle cts.I)
                                               (cts.univ cts.diamond cts.sinf cts.I)
                                               cts.I
                                               nat.nat)) =>
                                      f1 i0)))
                               (bigop
                                  nat.nat
                                  n2
                                  (i0:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   p20 i0)
                                  (nat.S nat.O)
                                  nat.times
                                  (i0:(cts.Term
                                         cts.diamond
                                         (cts.cast
                                            cts.triangle
                                            cts.sinf
                                            (cts.univ cts.box cts.triangle cts.I)
                                            (cts.univ cts.diamond cts.sinf cts.I)
                                            cts.I
                                            nat.nat)) =>
                                   f2 i0)))
                            (_clearme3:(cts.Term
                                          cts.star
                                          (connectives.And
                                             (nat.lt (h n) n2)
                                             (logic.eq bool.bool (p20 (h n)) bool.true))) =>
                             connectives.match_And_prop
                               (nat.lt (h n) n2)
                               (logic.eq bool.bool (p20 (h n)) bool.true)
                               (cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (logic.eq nat.nat (k (h n)) n)
                                  (x =>
                                   logic.eq
                                     nat.nat
                                     (nat.times
                                        (f1 n)
                                        (bigop
                                           nat.nat
                                           n
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            p1 i0)
                                           (nat.S nat.O)
                                           nat.times
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            f1 i0)))
                                     (bigop
                                        nat.nat
                                        n2
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         p20 i0)
                                        (nat.S nat.O)
                                        nat.times
                                        (i0:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         f2 i0))))
                               (hn:(cts.Term cts.star (nat.lt (h n) n2)) =>
                                p2hn:(cts.Term
                                        cts.star
                                        (logic.eq bool.bool (p20 (h n)) bool.true)) =>
                                eqn:(cts.Term cts.star (logic.eq nat.nat (k (h n)) n)) =>
                                logic.eq_ind_r
                                  nat.nat
                                  (nat.times
                                     (f2 (h n))
                                     (bigop
                                        nat.nat
                                        n2
                                        (x:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         bool.andb (bool.notb (nat.eqb (h n) x)) (p20 x))
                                        (nat.S nat.O)
                                        nat.times
                                        (x:(cts.Term
                                              cts.diamond
                                              (cts.cast
                                                 cts.triangle
                                                 cts.sinf
                                                 (cts.univ
                                                    cts.box
                                                    cts.triangle
                                                    cts.I)
                                                 (cts.univ
                                                    cts.diamond
                                                    cts.sinf
                                                    cts.I)
                                                 cts.I
                                                 nat.nat)) =>
                                         f2 x)))
                                  (x:(cts.Term
                                        cts.diamond
                                        (cts.cast
                                           cts.triangle
                                           cts.sinf
                                           (cts.univ cts.box cts.triangle cts.I)
                                           (cts.univ cts.diamond cts.sinf cts.I)
                                           cts.I
                                           nat.nat)) =>
                                   logic.eq
                                     nat.nat
                                     (nat.times
                                        (f1 n)
                                        (bigop
                                           nat.nat
                                           n
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            p1 i0)
                                           (nat.S nat.O)
                                           nat.times
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            f1 i0)))
                                     x)
                                  (logic.eq_ind_r
                                     nat.nat
                                     (f2 (h n))
                                     (x:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      logic.eq
                                        nat.nat
                                        (nat.times
                                           x
                                           (bigop
                                              nat.nat
                                              n
                                              (i0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               p1 i0)
                                              (nat.S nat.O)
                                              nat.times
                                              (i0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               f1 i0)))
                                        (nat.times
                                           (f2 (h n))
                                           (bigop
                                              nat.nat
                                              n2
                                              (x0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               bool.andb
                                                 (bool.notb (nat.eqb (h n) x0))
                                                 (p20 x0))
                                              (nat.S nat.O)
                                              nat.times
                                              (x0:(cts.Term
                                                     cts.diamond
                                                     (cts.cast
                                                        cts.triangle
                                                        cts.sinf
                                                        (cts.univ
                                                           cts.box
                                                           cts.triangle
                                                           cts.I)
                                                        (cts.univ
                                                           cts.diamond
                                                           cts.sinf
                                                           cts.I)
                                                        cts.I
                                                        nat.nat)) =>
                                               f2 x0))))
                                     (logic.eq_f
                                        nat.nat
                                        nat.nat
                                        (nat.times (f2 (h n)))
                                        (bigop
                                           nat.nat
                                           n
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            p1 i0)
                                           (nat.S nat.O)
                                           nat.times
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            f1 i0))
                                        (bigop
                                           nat.nat
                                           n2
                                           (x:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            bool.andb
                                              (bool.notb (nat.eqb (h n) x))
                                              (p20 x))
                                           (nat.S nat.O)
                                           nat.times
                                           (x:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            f2 x))
                                        (Hind
                                           (__:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            bool.andb
                                              (bool.notb (nat.eqb (h n) __))
                                              (p20 __))
                                           (nat.lt_to_le n n1 ltn)
                                           (i0:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     nat.nat)) =>
                                            ltin:(cts.Term cts.star (nat.lt i0 n)) =>
                                            p1i:(cts.Term
                                                   cts.star
                                                   (logic.eq
                                                      bool.bool
                                                      (p1 i0)
                                                      bool.true)) =>
                                            connectives.match_And_prop
                                              (connectives.And
                                                 (nat.lt (h i0) n2)
                                                 (logic.eq
                                                    bool.bool
                                                    (p20 (h i0))
                                                    bool.true))
                                              (logic.eq nat.nat (k (h i0)) i0)
                                              (connectives.And
                                                 (connectives.And
                                                    (nat.lt (h i0) n2)
                                                    (logic.eq
                                                       bool.bool
                                                       (bool.andb
                                                          (bool.notb
                                                             (nat.eqb (h n) (h i0)))
                                                          (p20 (h i0)))
                                                       bool.true))
                                                 (logic.eq nat.nat (k (h i0)) i0))
                                              (_clearme4:(cts.Term
                                                            cts.star
                                                            (connectives.And
                                                               (nat.lt (h i0) n2)
                                                               (logic.eq
                                                                  bool.bool
                                                                  (p20 (h i0))
                                                                  bool.true))) =>
                                               connectives.match_And_prop
                                                 (nat.lt (h i0) n2)
                                                 (logic.eq
                                                    bool.bool
                                                    (p20 (h i0))
                                                    bool.true)
                                                 (cts.prod
                                                    cts.star
                                                    cts.star
                                                    cts.star
                                                    cts.I
                                                    (logic.eq nat.nat (k (h i0)) i0)
                                                    (x =>
                                                     connectives.And
                                                       (connectives.And
                                                          (nat.lt (h i0) n2)
                                                          (logic.eq
                                                             bool.bool
                                                             (bool.andb
                                                                (bool.notb
                                                                   (nat.eqb
                                                                    (h n)
                                                                    (h i0)))
                                                                (p20 (h i0)))
                                                             bool.true))
                                                       (logic.eq
                                                          nat.nat
                                                          (k (h i0))
                                                          i0)))
                                                 (h1i:(cts.Term
                                                         cts.star
                                                         (nat.lt (h i0) n2)) =>
                                                  p2h1i:(cts.Term
                                                           cts.star
                                                           (logic.eq
                                                              bool.bool
                                                              (p20 (h i0))
                                                              bool.true)) =>
                                                  eqi:(cts.Term
                                                         cts.star
                                                         (logic.eq
                                                            nat.nat
                                                            (k (h i0))
                                                            i0)) =>
                                                  connectives.conj
                                                    (connectives.And
                                                       (nat.lt (h i0) n2)
                                                       (logic.eq
                                                          bool.bool
                                                          (bool.andb
                                                             (bool.notb
                                                                (nat.eqb
                                                                   (h n)
                                                                   (h i0)))
                                                             (p20 (h i0)))
                                                          bool.true))
                                                    (logic.eq nat.nat (k (h i0)) i0)
                                                    (connectives.conj
                                                       (nat.lt (h i0) n2)
                                                       (logic.eq
                                                          bool.bool
                                                          (bool.andb
                                                             (bool.notb
                                                                (nat.eqb
                                                                   (h n)
                                                                   (h i0)))
                                                             (p20 (h i0)))
                                                          bool.true)
                                                       h1i
                                                       (logic.eq_ind_r
                                                          bool.bool
                                                          bool.false
                                                          (x:(cts.Term
                                                                cts.diamond
                                                                (cts.cast
                                                                   cts.triangle
                                                                   cts.sinf
                                                                   (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                   (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                   cts.I
                                                                   bool.bool)) =>
                                                           logic.eq
                                                             bool.bool
                                                             (bool.andb
                                                                (bool.notb x)
                                                                (p20 (h i0)))
                                                             bool.true)
                                                          (bool.sym_eq_match_bool_type_false
                                                             bool.bool
                                                             bool.false
                                                             bool.true
                                                             (y:(cts.Term
                                                                   cts.diamond
                                                                   (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                              logic.eq
                                                                bool.bool
                                                                (bool.match_bool_type
                                                                   bool.bool
                                                                   (p20 (h i0))
                                                                   bool.false
                                                                   y)
                                                                bool.true)
                                                             (bool.sym_eq_match_bool_type_true
                                                                bool.bool
                                                                (p20 (h i0))
                                                                bool.false
                                                                (y:(cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                 logic.eq
                                                                   bool.bool
                                                                   y
                                                                   bool.true)
                                                                (logic.rewrite_r
                                                                   bool.bool
                                                                   bool.true
                                                                   (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                    logic.eq
                                                                    bool.bool
                                                                    __
                                                                    bool.true)
                                                                   (logic.refl
                                                                    bool.bool
                                                                    bool.true)
                                                                   (p20 (h i0))
                                                                   p2h1i)))
                                                          (nat.eqb (h n) (h i0))
                                                          (nat.not_eq_to_eqb_false
                                                             (h n)
                                                             (h i0)
                                                             (logic.not_to_not
                                                                (logic.eq
                                                                   nat.nat
                                                                   (h n)
                                                                   (h i0))
                                                                (logic.eq
                                                                   nat.nat
                                                                   i0
                                                                   n)
                                                                (auto:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    (h
                                                                    i0))) =>
                                                                 logic.rewrite_r
                                                                   nat.nat
                                                                   n
                                                                   (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    __
                                                                    n)
                                                                   (logic.refl
                                                                    nat.nat
                                                                    n)
                                                                   i0
                                                                   (logic.rewrite_l
                                                                    nat.nat
                                                                    (k (h n))
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    __
                                                                    n)
                                                                    eqn
                                                                    i0
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    (h i0)
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (k
                                                                    __)
                                                                    i0)
                                                                    eqi
                                                                    (h n)
                                                                    auto)))
                                                                (nat.lt_to_not_eq
                                                                   i0
                                                                   n
                                                                   ltin)))))
                                                    (logic.rewrite_r
                                                       nat.nat
                                                       i0
                                                       (__:(cts.Term
                                                              cts.diamond
                                                              (cts.cast
                                                                 cts.triangle
                                                                 cts.sinf
                                                                 (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                 (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                 cts.I
                                                                 nat.nat)) =>
                                                        logic.eq nat.nat __ i0)
                                                       (logic.refl nat.nat i0)
                                                       (k (h i0))
                                                       eqi))
                                                 _clearme4)
                                              (sub1 i0 (nat.le_S (nat.S i0) n ltin) p1i))
                                           (j:(cts.Term
                                                 cts.diamond
                                                 (cts.cast
                                                    cts.triangle
                                                    cts.sinf
                                                    (cts.univ
                                                       cts.box
                                                       cts.triangle
                                                       cts.I)
                                                    (cts.univ
                                                       cts.diamond
                                                       cts.sinf
                                                       cts.I)
                                                    cts.I
                                                    nat.nat)) =>
                                            ltj:(cts.Term cts.star (nat.lt j n2)) =>
                                            p2j:(cts.Term
                                                   cts.star
                                                   (logic.eq
                                                      bool.bool
                                                      (bool.andb
                                                         (bool.notb
                                                            (nat.eqb (h n) j))
                                                         (p20 j))
                                                      bool.true)) =>
                                            connectives.match_And_prop
                                              (connectives.And
                                                 (nat.lt (k j) (nat.S n))
                                                 (logic.eq
                                                    bool.bool
                                                    (p1 (k j))
                                                    bool.true))
                                              (logic.eq nat.nat (h (k j)) j)
                                              (connectives.And
                                                 (connectives.And
                                                    (nat.lt (k j) n)
                                                    (logic.eq
                                                       bool.bool
                                                       (p1 (k j))
                                                       bool.true))
                                                 (logic.eq nat.nat (h (k j)) j))
                                              (_clearme4:(cts.Term
                                                            cts.star
                                                            (connectives.And
                                                               (nat.lt
                                                                  (k j)
                                                                  (nat.S n))
                                                               (logic.eq
                                                                  bool.bool
                                                                  (p1 (k j))
                                                                  bool.true))) =>
                                               connectives.match_And_prop
                                                 (nat.lt (k j) (nat.S n))
                                                 (logic.eq
                                                    bool.bool
                                                    (p1 (k j))
                                                    bool.true)
                                                 (cts.prod
                                                    cts.star
                                                    cts.star
                                                    cts.star
                                                    cts.I
                                                    (logic.eq nat.nat (h (k j)) j)
                                                    (x =>
                                                     connectives.And
                                                       (connectives.And
                                                          (nat.lt (k j) n)
                                                          (logic.eq
                                                             bool.bool
                                                             (p1 (k j))
                                                             bool.true))
                                                       (logic.eq nat.nat (h (k j)) j)))
                                                 (ltkj:(cts.Term
                                                          cts.star
                                                          (nat.lt (k j) (nat.S n))) =>
                                                  p1kj:(cts.Term
                                                          cts.star
                                                          (logic.eq
                                                             bool.bool
                                                             (p1 (k j))
                                                             bool.true)) =>
                                                  eqj:(cts.Term
                                                         cts.star
                                                         (logic.eq
                                                            nat.nat
                                                            (h (k j))
                                                            j)) =>
                                                  connectives.conj
                                                    (connectives.And
                                                       (nat.lt (k j) n)
                                                       (logic.eq
                                                          bool.bool
                                                          (p1 (k j))
                                                          bool.true))
                                                    (logic.eq nat.nat (h (k j)) j)
                                                    (connectives.conj
                                                       (nat.lt (k j) n)
                                                       (logic.eq
                                                          bool.bool
                                                          (p1 (k j))
                                                          bool.true)
                                                       (connectives.match_Or_prop
                                                          (nat.lt (k j) n)
                                                          (logic.eq nat.nat (k j) n)
                                                          (nat.lt (k j) n)
                                                          (auto:(cts.Term
                                                                   cts.star
                                                                   (nat.lt
                                                                    (k j)
                                                                    n)) =>
                                                           auto)
                                                          (eqkj:(cts.Term
                                                                   cts.star
                                                                   (logic.eq
                                                                    nat.nat
                                                                    (k j)
                                                                    n)) =>
                                                           connectives.falsity
                                                             (nat.lt (k j) n)
                                                             (nat.eqb_elim
                                                                (h n)
                                                                j
                                                                (__:(
                                                                 cts.Term
                                                                   cts.diamond
                                                                   (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                 cts.prod
                                                                   cts.star
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   (logic.eq
                                                                    bool.bool
                                                                    (bool.andb
                                                                    (bool.notb
                                                                    __)
                                                                    (p20
                                                                    j))
                                                                    bool.true)
                                                                   (x =>
                                                                    connectives.False))
                                                                (bool.sym_eq_match_bool_type_true
                                                                   bool.bool
                                                                   bool.false
                                                                   bool.true
                                                                   (y:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h n)
                                                                    j)
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (logic.eq
                                                                    bool.bool
                                                                    (bool.match_bool_type
                                                                    bool.bool
                                                                    (p20
                                                                    j)
                                                                    bool.false
                                                                    y)
                                                                    bool.true)
                                                                    (x0 =>
                                                                    connectives.False)))
                                                                   (bool.sym_eq_match_bool_type_false
                                                                    bool.bool
                                                                    (p20 j)
                                                                    bool.false
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    j)
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (logic.eq
                                                                    bool.bool
                                                                    y
                                                                    bool.true)
                                                                    (x0 =>
                                                                    connectives.False)))
                                                                    (auto:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    j)) =>
                                                                    auto':(
                                                                    cts.Term
                                                                    cts.star
                                                                    (logic.eq
                                                                    bool.bool
                                                                    bool.false
                                                                    bool.true)) =>
                                                                    logic.absurd
                                                                    (logic.eq
                                                                    bool.bool
                                                                    bool.true
                                                                    bool.false)
                                                                    (logic.rewrite_r
                                                                    bool.bool
                                                                    bool.true
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                    logic.eq
                                                                    bool.bool
                                                                    bool.true
                                                                    __)
                                                                    (logic.refl
                                                                    bool.bool
                                                                    bool.true)
                                                                    bool.false
                                                                    auto')
                                                                    bool.not_eq_true_false)))
                                                                (bool.sym_eq_match_bool_type_false
                                                                   bool.bool
                                                                   bool.false
                                                                   bool.true
                                                                   (y:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (connectives.Not
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    j))
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (logic.eq
                                                                    bool.bool
                                                                    (bool.match_bool_type
                                                                    bool.bool
                                                                    (p20
                                                                    j)
                                                                    bool.false
                                                                    y)
                                                                    bool.true)
                                                                    (x0 =>
                                                                    connectives.False)))
                                                                   (bool.sym_eq_match_bool_type_true
                                                                    bool.bool
                                                                    (p20 j)
                                                                    bool.false
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (connectives.Not
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    j))
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (logic.eq
                                                                    bool.bool
                                                                    y
                                                                    bool.true)
                                                                    (x0 =>
                                                                    connectives.False)))
                                                                    (auto:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (connectives.Not
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    j))) =>
                                                                    auto':(
                                                                    cts.Term
                                                                    cts.star
                                                                    (logic.eq
                                                                    bool.bool
                                                                    (p20
                                                                    j)
                                                                    bool.true)) =>
                                                                    logic.absurd
                                                                    (logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    n)
                                                                    j)
                                                                    (logic.rewrite_r
                                                                    nat.nat
                                                                    j
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    __
                                                                    j)
                                                                    (logic.refl
                                                                    nat.nat
                                                                    j)
                                                                    (h
                                                                    n)
                                                                    (logic.rewrite_l
                                                                    nat.nat
                                                                    (k
                                                                    j)
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.diamond
                                                                    (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                                    logic.eq
                                                                    nat.nat
                                                                    (h
                                                                    __)
                                                                    j)
                                                                    eqj
                                                                    n
                                                                    eqkj))
                                                                    auto)))
                                                                p2j))
                                                          (nat.le_to_or_lt_eq
                                                             (k j)
                                                             n
                                                             (nat.le_S_S_to_le
                                                                (k j)
                                                                n
                                                                ltkj)))
                                                       (logic.rewrite_r
                                                          bool.bool
                                                          bool.true
                                                          (__:(cts.Term
                                                                 cts.diamond
                                                                 (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (
                                                                    cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (
                                                                    cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    bool.bool)) =>
                                                           logic.eq
                                                             bool.bool
                                                             __
                                                             bool.true)
                                                          (logic.refl
                                                             bool.bool
                                                             bool.true)
                                                          (p1 (k j))
                                                          p1kj))
                                                    (logic.rewrite_r
                                                       nat.nat
                                                       j
                                                       (__:(cts.Term
                                                              cts.diamond
                                                              (cts.cast
                                                                 cts.triangle
                                                                 cts.sinf
                                                                 (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                 (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                 cts.I
                                                                 nat.nat)) =>
                                                        logic.eq nat.nat __ j)
                                                       (logic.refl nat.nat j)
                                                       (h (k j))
                                                       eqj))
                                                 _clearme4)
                                              (sub2
                                                 j
                                                 ltj
                                                 (bool.andb_true_r
                                                    (bool.notb (nat.eqb (h n) j))
                                                    (p20 j)
                                                    p2j)))))
                                     (f1 n)
                                     (same
                                        n
                                        ltn
                                        (logic.rewrite_r
                                           bool.bool
                                           bool.true
                                           (__:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     bool.bool)) =>
                                            logic.eq bool.bool __ bool.true)
                                           (logic.refl bool.bool bool.true)
                                           (p1 n)
                                           p1n)))
                                  (bigop
                                     nat.nat
                                     n2
                                     (x:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      p20 x)
                                     (nat.S nat.O)
                                     nat.times
                                     (x:(cts.Term
                                           cts.diamond
                                           (cts.cast
                                              cts.triangle
                                              cts.sinf
                                              (cts.univ cts.box cts.triangle cts.I)
                                              (cts.univ cts.diamond cts.sinf cts.I)
                                              cts.I
                                              nat.nat)) =>
                                      f2 x))
                                  (bigop_diff
                                     p20
                                     f2
                                     (h n)
                                     n2
                                     hn
                                     (logic.rewrite_r
                                        bool.bool
                                        bool.true
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  bool.bool)) =>
                                         logic.eq bool.bool __ bool.true)
                                        (logic.refl bool.bool bool.true)
                                        (p20 (h n))
                                        p2hn)))
                               _clearme3)
                            (sub1 n (nat.le_n (nat.S n)) p1n))
                         (bigop
                            nat.nat
                            (nat.S n)
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p1 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f1 i0))
                         (bigop_Strue
                            nat.nat
                            n
                            p1
                            (nat.S nat.O)
                            nat.times
                            f1
                            (logic.rewrite_r
                               bool.bool
                               bool.true
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         bool.bool)) =>
                                logic.eq bool.bool __ bool.true)
                               (logic.refl bool.bool bool.true)
                               (p1 n)
                               p1n)))
                      (p1n:(cts.Term cts.star (logic.eq bool.bool (p1 n) bool.false)) =>
                       logic.eq_ind_r
                         nat.nat
                         (bigop
                            nat.nat
                            n
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p1 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f1 i0))
                         (x:(cts.Term
                               cts.diamond
                               (cts.cast
                                  cts.triangle
                                  cts.sinf
                                  (cts.univ cts.box cts.triangle cts.I)
                                  (cts.univ cts.diamond cts.sinf cts.I)
                                  cts.I
                                  nat.nat)) =>
                          logic.eq
                            nat.nat
                            x
                            (bigop
                               nat.nat
                               n2
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                p20 i0)
                               (nat.S nat.O)
                               nat.times
                               (i0:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         nat.nat)) =>
                                f2 i0)))
                         (Hind
                            p20
                            (nat.lt_to_le n n1 ltn)
                            (transitive_sub
                               (x:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x)
                               (x:(cts.Term
                                     cts.diamond
                                     (cts.cast
                                        cts.triangle
                                        cts.sinf
                                        (cts.univ cts.box cts.triangle cts.I)
                                        (cts.univ cts.diamond cts.sinf cts.I)
                                        cts.I
                                        nat.nat)) =>
                                x)
                               h
                               k
                               n
                               (nat.S n)
                               n2
                               p1
                               p1
                               p20
                               f1
                               f1
                               f2
                               (sub_lt f1 p1 n (nat.S n) (nat.le_n_Sn n))
                               sub1)
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             lti:(cts.Term cts.star (nat.lt i0 n2)) =>
                             p2i:(cts.Term
                                    cts.star
                                    (logic.eq bool.bool (p20 i0) bool.true)) =>
                             connectives.match_And_prop
                               (connectives.And
                                  (nat.lt (k i0) (nat.S n))
                                  (logic.eq bool.bool (p1 (k i0)) bool.true))
                               (logic.eq nat.nat (h (k i0)) i0)
                               (connectives.And
                                  (connectives.And
                                     (nat.lt (k i0) n)
                                     (logic.eq bool.bool (p1 (k i0)) bool.true))
                                  (logic.eq nat.nat (h (k i0)) i0))
                               (_clearme3:(cts.Term
                                             cts.star
                                             (connectives.And
                                                (nat.lt (k i0) (nat.S n))
                                                (logic.eq
                                                   bool.bool
                                                   (p1 (k i0))
                                                   bool.true))) =>
                                connectives.match_And_prop
                                  (nat.lt (k i0) (nat.S n))
                                  (logic.eq bool.bool (p1 (k i0)) bool.true)
                                  (cts.prod
                                     cts.star
                                     cts.star
                                     cts.star
                                     cts.I
                                     (logic.eq nat.nat (h (k i0)) i0)
                                     (x =>
                                      connectives.And
                                        (connectives.And
                                           (nat.lt (k i0) n)
                                           (logic.eq bool.bool (p1 (k i0)) bool.true))
                                        (logic.eq nat.nat (h (k i0)) i0)))
                                  (ltki:(cts.Term cts.star (nat.lt (k i0) (nat.S n))) =>
                                   p1ki:(cts.Term
                                           cts.star
                                           (logic.eq bool.bool (p1 (k i0)) bool.true)) =>
                                   eqi:(cts.Term
                                          cts.star
                                          (logic.eq nat.nat (h (k i0)) i0)) =>
                                   connectives.conj
                                     (connectives.And
                                        (nat.lt (k i0) n)
                                        (logic.eq bool.bool (p1 (k i0)) bool.true))
                                     (logic.eq nat.nat (h (k i0)) i0)
                                     (connectives.conj
                                        (nat.lt (k i0) n)
                                        (logic.eq bool.bool (p1 (k i0)) bool.true)
                                        (connectives.match_Or_prop
                                           (nat.lt (k i0) n)
                                           (logic.eq nat.nat (k i0) n)
                                           (nat.lt (k i0) n)
                                           (auto:(cts.Term cts.star (nat.lt (k i0) n)) =>
                                            auto)
                                           (eqki:(cts.Term
                                                    cts.star
                                                    (logic.eq nat.nat (k i0) n)) =>
                                            connectives.falsity
                                              (nat.lt (k i0) n)
                                              (logic.absurd
                                                 (logic.eq
                                                    bool.bool
                                                    bool.true
                                                    bool.false)
                                                 (logic.rewrite_l
                                                    bool.bool
                                                    bool.true
                                                    (__:(cts.Term
                                                           cts.diamond
                                                           (cts.cast
                                                              cts.triangle
                                                              cts.sinf
                                                              (cts.univ
                                                                 cts.box
                                                                 cts.triangle
                                                                 cts.I)
                                                              (cts.univ
                                                                 cts.diamond
                                                                 cts.sinf
                                                                 cts.I)
                                                              cts.I
                                                              bool.bool)) =>
                                                     logic.eq bool.bool bool.true __)
                                                    (logic.refl bool.bool bool.true)
                                                    bool.false
                                                    (logic.rewrite_l
                                                       bool.bool
                                                       (p1 n)
                                                       (__:(cts.Term
                                                              cts.diamond
                                                              (cts.cast
                                                                 cts.triangle
                                                                 cts.sinf
                                                                 (cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                 (cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                 cts.I
                                                                 bool.bool)) =>
                                                        logic.eq
                                                          bool.bool
                                                          __
                                                          bool.false)
                                                       p1n
                                                       bool.true
                                                       (logic.rewrite_l
                                                          nat.nat
                                                          (k i0)
                                                          (__:(cts.Term
                                                                 cts.diamond
                                                                 (cts.cast
                                                                    cts.triangle
                                                                    cts.sinf
                                                                    (
                                                                    cts.univ
                                                                    cts.box
                                                                    cts.triangle
                                                                    cts.I)
                                                                    (
                                                                    cts.univ
                                                                    cts.diamond
                                                                    cts.sinf
                                                                    cts.I)
                                                                    cts.I
                                                                    nat.nat)) =>
                                                           logic.eq
                                                             bool.bool
                                                             (p1 __)
                                                             bool.true)
                                                          p1ki
                                                          n
                                                          eqki)))
                                                 bool.not_eq_true_false))
                                           (nat.le_to_or_lt_eq
                                              (k i0)
                                              n
                                              (nat.le_S_S_to_le (k i0) n ltki)))
                                        (logic.rewrite_r
                                           bool.bool
                                           bool.true
                                           (__:(cts.Term
                                                  cts.diamond
                                                  (cts.cast
                                                     cts.triangle
                                                     cts.sinf
                                                     (cts.univ
                                                        cts.box
                                                        cts.triangle
                                                        cts.I)
                                                     (cts.univ
                                                        cts.diamond
                                                        cts.sinf
                                                        cts.I)
                                                     cts.I
                                                     bool.bool)) =>
                                            logic.eq bool.bool __ bool.true)
                                           (logic.refl bool.bool bool.true)
                                           (p1 (k i0))
                                           p1ki))
                                     (logic.rewrite_r
                                        nat.nat
                                        i0
                                        (__:(cts.Term
                                               cts.diamond
                                               (cts.cast
                                                  cts.triangle
                                                  cts.sinf
                                                  (cts.univ
                                                     cts.box
                                                     cts.triangle
                                                     cts.I)
                                                  (cts.univ
                                                     cts.diamond
                                                     cts.sinf
                                                     cts.I)
                                                  cts.I
                                                  nat.nat)) =>
                                         logic.eq nat.nat __ i0)
                                        (logic.refl nat.nat i0)
                                        (h (k i0))
                                        eqi))
                                  _clearme3)
                               (sub2 i0 lti p2i)))
                         (bigop
                            nat.nat
                            (nat.S n)
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             p1 i0)
                            (nat.S nat.O)
                            nat.times
                            (i0:(cts.Term
                                   cts.diamond
                                   (cts.cast
                                      cts.triangle
                                      cts.sinf
                                      (cts.univ cts.box cts.triangle cts.I)
                                      (cts.univ cts.diamond cts.sinf cts.I)
                                      cts.I
                                      nat.nat)) =>
                             f1 i0))
                         (bigop_Sfalse
                            nat.nat
                            n
                            p1
                            (nat.S nat.O)
                            nat.times
                            f1
                            (logic.rewrite_r
                               bool.bool
                               bool.false
                               (__:(cts.Term
                                      cts.diamond
                                      (cts.cast
                                         cts.triangle
                                         cts.sinf
                                         (cts.univ cts.box cts.triangle cts.I)
                                         (cts.univ cts.diamond cts.sinf cts.I)
                                         cts.I
                                         bool.bool)) =>
                                logic.eq bool.bool __ bool.false)
                               (logic.refl bool.bool bool.false)
                               (p1 n)
                               p1n)))
                      (bool.true_or_false (p1 n)))
                   i
                   p2))
             _clearme2)
          _clearme1)
       _clearme0)
    _clearme.

